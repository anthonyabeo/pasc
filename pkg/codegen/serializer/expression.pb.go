// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.30.0
// 	protoc        v3.6.1
// source: proto/expression.proto

package serializer

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Identifier_IDKind int32

const (
	Identifier_EntireVar Identifier_IDKind = 0
	Identifier_IdxVar    Identifier_IDKind = 1
	Identifier_Field     Identifier_IDKind = 2
)

// Enum value maps for Identifier_IDKind.
var (
	Identifier_IDKind_name = map[int32]string{
		0: "EntireVar",
		1: "IdxVar",
		2: "Field",
	}
	Identifier_IDKind_value = map[string]int32{
		"EntireVar": 0,
		"IdxVar":    1,
		"Field":     2,
	}
)

func (x Identifier_IDKind) Enum() *Identifier_IDKind {
	p := new(Identifier_IDKind)
	*p = x
	return p
}

func (x Identifier_IDKind) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Identifier_IDKind) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_expression_proto_enumTypes[0].Descriptor()
}

func (Identifier_IDKind) Type() protoreflect.EnumType {
	return &file_proto_expression_proto_enumTypes[0]
}

func (x Identifier_IDKind) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Identifier_IDKind.Descriptor instead.
func (Identifier_IDKind) EnumDescriptor() ([]byte, []int) {
	return file_proto_expression_proto_rawDescGZIP(), []int{0, 0}
}

type Expression_ExprKind int32

const (
	Expression_UInt       Expression_ExprKind = 0
	Expression_Bool       Expression_ExprKind = 1
	Expression_Ident      Expression_ExprKind = 2
	Expression_BinExpr    Expression_ExprKind = 3
	Expression_WriteParam Expression_ExprKind = 4
	Expression_FCall      Expression_ExprKind = 5
	Expression_Nil        Expression_ExprKind = 6
	Expression_UReal      Expression_ExprKind = 7
	Expression_UnExpr     Expression_ExprKind = 8
	Expression_Str        Expression_ExprKind = 9
)

// Enum value maps for Expression_ExprKind.
var (
	Expression_ExprKind_name = map[int32]string{
		0: "UInt",
		1: "Bool",
		2: "Ident",
		3: "BinExpr",
		4: "WriteParam",
		5: "FCall",
		6: "Nil",
		7: "UReal",
		8: "UnExpr",
		9: "Str",
	}
	Expression_ExprKind_value = map[string]int32{
		"UInt":       0,
		"Bool":       1,
		"Ident":      2,
		"BinExpr":    3,
		"WriteParam": 4,
		"FCall":      5,
		"Nil":        6,
		"UReal":      7,
		"UnExpr":     8,
		"Str":        9,
	}
)

func (x Expression_ExprKind) Enum() *Expression_ExprKind {
	p := new(Expression_ExprKind)
	*p = x
	return p
}

func (x Expression_ExprKind) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Expression_ExprKind) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_expression_proto_enumTypes[1].Descriptor()
}

func (Expression_ExprKind) Type() protoreflect.EnumType {
	return &file_proto_expression_proto_enumTypes[1]
}

func (x Expression_ExprKind) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Expression_ExprKind.Descriptor instead.
func (Expression_ExprKind) EnumDescriptor() ([]byte, []int) {
	return file_proto_expression_proto_rawDescGZIP(), []int{1, 0}
}

type Operator_OpKind int32

const (
	Operator_Plus  Operator_OpKind = 0
	Operator_Minus Operator_OpKind = 1
	Operator_Div   Operator_OpKind = 2
	//    Sub = 3;
	Operator_Mod        Operator_OpKind = 4
	Operator_And        Operator_OpKind = 5
	Operator_Or         Operator_OpKind = 6
	Operator_In         Operator_OpKind = 7
	Operator_Equal      Operator_OpKind = 8
	Operator_Less       Operator_OpKind = 9
	Operator_Great      Operator_OpKind = 10
	Operator_GreatEqual Operator_OpKind = 11
	Operator_LessEqual  Operator_OpKind = 12
	Operator_LessGreat  Operator_OpKind = 13
)

// Enum value maps for Operator_OpKind.
var (
	Operator_OpKind_name = map[int32]string{
		0:  "Plus",
		1:  "Minus",
		2:  "Div",
		4:  "Mod",
		5:  "And",
		6:  "Or",
		7:  "In",
		8:  "Equal",
		9:  "Less",
		10: "Great",
		11: "GreatEqual",
		12: "LessEqual",
		13: "LessGreat",
	}
	Operator_OpKind_value = map[string]int32{
		"Plus":       0,
		"Minus":      1,
		"Div":        2,
		"Mod":        4,
		"And":        5,
		"Or":         6,
		"In":         7,
		"Equal":      8,
		"Less":       9,
		"Great":      10,
		"GreatEqual": 11,
		"LessEqual":  12,
		"LessGreat":  13,
	}
)

func (x Operator_OpKind) Enum() *Operator_OpKind {
	p := new(Operator_OpKind)
	*p = x
	return p
}

func (x Operator_OpKind) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Operator_OpKind) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_expression_proto_enumTypes[2].Descriptor()
}

func (Operator_OpKind) Type() protoreflect.EnumType {
	return &file_proto_expression_proto_enumTypes[2]
}

func (x Operator_OpKind) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Operator_OpKind.Descriptor instead.
func (Operator_OpKind) EnumDescriptor() ([]byte, []int) {
	return file_proto_expression_proto_rawDescGZIP(), []int{11, 0}
}

type Identifier struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Kind Identifier_IDKind `protobuf:"varint,1,opt,name=kind,proto3,enum=Pasc.Identifier_IDKind" json:"kind,omitempty"`
	// Types that are assignable to Value:
	//	*Identifier_Var
	//	*Identifier_Iv
	//	*Identifier_Fld
	Value isIdentifier_Value `protobuf_oneof:"value"`
}

func (x *Identifier) Reset() {
	*x = Identifier{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_expression_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Identifier) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Identifier) ProtoMessage() {}

func (x *Identifier) ProtoReflect() protoreflect.Message {
	mi := &file_proto_expression_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Identifier.ProtoReflect.Descriptor instead.
func (*Identifier) Descriptor() ([]byte, []int) {
	return file_proto_expression_proto_rawDescGZIP(), []int{0}
}

func (x *Identifier) GetKind() Identifier_IDKind {
	if x != nil {
		return x.Kind
	}
	return Identifier_EntireVar
}

func (m *Identifier) GetValue() isIdentifier_Value {
	if m != nil {
		return m.Value
	}
	return nil
}

func (x *Identifier) GetVar() *Identifier_Variable {
	if x, ok := x.GetValue().(*Identifier_Var); ok {
		return x.Var
	}
	return nil
}

func (x *Identifier) GetIv() *Identifier_IndexedVariable {
	if x, ok := x.GetValue().(*Identifier_Iv); ok {
		return x.Iv
	}
	return nil
}

func (x *Identifier) GetFld() *Identifier_FieldDesignator {
	if x, ok := x.GetValue().(*Identifier_Fld); ok {
		return x.Fld
	}
	return nil
}

type isIdentifier_Value interface {
	isIdentifier_Value()
}

type Identifier_Var struct {
	Var *Identifier_Variable `protobuf:"bytes,2,opt,name=var,proto3,oneof"`
}

type Identifier_Iv struct {
	Iv *Identifier_IndexedVariable `protobuf:"bytes,3,opt,name=iv,proto3,oneof"`
}

type Identifier_Fld struct {
	Fld *Identifier_FieldDesignator `protobuf:"bytes,4,opt,name=fld,proto3,oneof"`
}

func (*Identifier_Var) isIdentifier_Value() {}

func (*Identifier_Iv) isIdentifier_Value() {}

func (*Identifier_Fld) isIdentifier_Value() {}

type Expression struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Kind Expression_ExprKind `protobuf:"varint,1,opt,name=kind,proto3,enum=Pasc.Expression_ExprKind" json:"kind,omitempty"`
	// Types that are assignable to Expr:
	//	*Expression_Id
	//	*Expression_Uint
	//	*Expression_Be
	//	*Expression_Wp
	//	*Expression_Fc
	//	*Expression_Bl
	//	*Expression_Nl
	//	*Expression_Ureal
	//	*Expression_Ue
	//	*Expression_Sl
	Expr isExpression_Expr `protobuf_oneof:"expr"`
}

func (x *Expression) Reset() {
	*x = Expression{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_expression_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Expression) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Expression) ProtoMessage() {}

func (x *Expression) ProtoReflect() protoreflect.Message {
	mi := &file_proto_expression_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Expression.ProtoReflect.Descriptor instead.
func (*Expression) Descriptor() ([]byte, []int) {
	return file_proto_expression_proto_rawDescGZIP(), []int{1}
}

func (x *Expression) GetKind() Expression_ExprKind {
	if x != nil {
		return x.Kind
	}
	return Expression_UInt
}

func (m *Expression) GetExpr() isExpression_Expr {
	if m != nil {
		return m.Expr
	}
	return nil
}

func (x *Expression) GetId() *Identifier {
	if x, ok := x.GetExpr().(*Expression_Id); ok {
		return x.Id
	}
	return nil
}

func (x *Expression) GetUint() *UIntLiteral {
	if x, ok := x.GetExpr().(*Expression_Uint); ok {
		return x.Uint
	}
	return nil
}

func (x *Expression) GetBe() *BinaryExpr {
	if x, ok := x.GetExpr().(*Expression_Be); ok {
		return x.Be
	}
	return nil
}

func (x *Expression) GetWp() *WriteParameter {
	if x, ok := x.GetExpr().(*Expression_Wp); ok {
		return x.Wp
	}
	return nil
}

func (x *Expression) GetFc() *FuncCall {
	if x, ok := x.GetExpr().(*Expression_Fc); ok {
		return x.Fc
	}
	return nil
}

func (x *Expression) GetBl() *BoolLiteral {
	if x, ok := x.GetExpr().(*Expression_Bl); ok {
		return x.Bl
	}
	return nil
}

func (x *Expression) GetNl() *NilValue {
	if x, ok := x.GetExpr().(*Expression_Nl); ok {
		return x.Nl
	}
	return nil
}

func (x *Expression) GetUreal() *URealLiteral {
	if x, ok := x.GetExpr().(*Expression_Ureal); ok {
		return x.Ureal
	}
	return nil
}

func (x *Expression) GetUe() *UnaryExpr {
	if x, ok := x.GetExpr().(*Expression_Ue); ok {
		return x.Ue
	}
	return nil
}

func (x *Expression) GetSl() *StringLiteral {
	if x, ok := x.GetExpr().(*Expression_Sl); ok {
		return x.Sl
	}
	return nil
}

type isExpression_Expr interface {
	isExpression_Expr()
}

type Expression_Id struct {
	Id *Identifier `protobuf:"bytes,2,opt,name=id,proto3,oneof"`
}

type Expression_Uint struct {
	Uint *UIntLiteral `protobuf:"bytes,3,opt,name=uint,proto3,oneof"`
}

type Expression_Be struct {
	Be *BinaryExpr `protobuf:"bytes,4,opt,name=be,proto3,oneof"`
}

type Expression_Wp struct {
	Wp *WriteParameter `protobuf:"bytes,5,opt,name=wp,proto3,oneof"`
}

type Expression_Fc struct {
	Fc *FuncCall `protobuf:"bytes,6,opt,name=fc,proto3,oneof"`
}

type Expression_Bl struct {
	Bl *BoolLiteral `protobuf:"bytes,7,opt,name=bl,proto3,oneof"`
}

type Expression_Nl struct {
	Nl *NilValue `protobuf:"bytes,8,opt,name=nl,proto3,oneof"`
}

type Expression_Ureal struct {
	Ureal *URealLiteral `protobuf:"bytes,9,opt,name=ureal,proto3,oneof"`
}

type Expression_Ue struct {
	Ue *UnaryExpr `protobuf:"bytes,10,opt,name=ue,proto3,oneof"`
}

type Expression_Sl struct {
	Sl *StringLiteral `protobuf:"bytes,11,opt,name=sl,proto3,oneof"`
}

func (*Expression_Id) isExpression_Expr() {}

func (*Expression_Uint) isExpression_Expr() {}

func (*Expression_Be) isExpression_Expr() {}

func (*Expression_Wp) isExpression_Expr() {}

func (*Expression_Fc) isExpression_Expr() {}

func (*Expression_Bl) isExpression_Expr() {}

func (*Expression_Nl) isExpression_Expr() {}

func (*Expression_Ureal) isExpression_Expr() {}

func (*Expression_Ue) isExpression_Expr() {}

func (*Expression_Sl) isExpression_Expr() {}

type WriteParameter struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	E          *Expression `protobuf:"bytes,1,opt,name=e,proto3" json:"e,omitempty"`
	TotalWidth *Expression `protobuf:"bytes,2,opt,name=totalWidth,proto3" json:"totalWidth,omitempty"`
	FracDigits *Expression `protobuf:"bytes,3,opt,name=fracDigits,proto3" json:"fracDigits,omitempty"`
}

func (x *WriteParameter) Reset() {
	*x = WriteParameter{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_expression_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WriteParameter) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WriteParameter) ProtoMessage() {}

func (x *WriteParameter) ProtoReflect() protoreflect.Message {
	mi := &file_proto_expression_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WriteParameter.ProtoReflect.Descriptor instead.
func (*WriteParameter) Descriptor() ([]byte, []int) {
	return file_proto_expression_proto_rawDescGZIP(), []int{2}
}

func (x *WriteParameter) GetE() *Expression {
	if x != nil {
		return x.E
	}
	return nil
}

func (x *WriteParameter) GetTotalWidth() *Expression {
	if x != nil {
		return x.TotalWidth
	}
	return nil
}

func (x *WriteParameter) GetFracDigits() *Expression {
	if x != nil {
		return x.FracDigits
	}
	return nil
}

type BinaryExpr struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Left  *Expression `protobuf:"bytes,1,opt,name=left,proto3" json:"left,omitempty"`
	Right *Expression `protobuf:"bytes,2,opt,name=right,proto3" json:"right,omitempty"`
	Op    *Operator   `protobuf:"bytes,3,opt,name=op,proto3" json:"op,omitempty"`
}

func (x *BinaryExpr) Reset() {
	*x = BinaryExpr{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_expression_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BinaryExpr) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BinaryExpr) ProtoMessage() {}

func (x *BinaryExpr) ProtoReflect() protoreflect.Message {
	mi := &file_proto_expression_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BinaryExpr.ProtoReflect.Descriptor instead.
func (*BinaryExpr) Descriptor() ([]byte, []int) {
	return file_proto_expression_proto_rawDescGZIP(), []int{3}
}

func (x *BinaryExpr) GetLeft() *Expression {
	if x != nil {
		return x.Left
	}
	return nil
}

func (x *BinaryExpr) GetRight() *Expression {
	if x != nil {
		return x.Right
	}
	return nil
}

func (x *BinaryExpr) GetOp() *Operator {
	if x != nil {
		return x.Op
	}
	return nil
}

type UIntLiteral struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Value uint32 `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty"`
}

func (x *UIntLiteral) Reset() {
	*x = UIntLiteral{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_expression_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UIntLiteral) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UIntLiteral) ProtoMessage() {}

func (x *UIntLiteral) ProtoReflect() protoreflect.Message {
	mi := &file_proto_expression_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UIntLiteral.ProtoReflect.Descriptor instead.
func (*UIntLiteral) Descriptor() ([]byte, []int) {
	return file_proto_expression_proto_rawDescGZIP(), []int{4}
}

func (x *UIntLiteral) GetValue() uint32 {
	if x != nil {
		return x.Value
	}
	return 0
}

type BoolLiteral struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Value bool `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty"`
}

func (x *BoolLiteral) Reset() {
	*x = BoolLiteral{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_expression_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BoolLiteral) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BoolLiteral) ProtoMessage() {}

func (x *BoolLiteral) ProtoReflect() protoreflect.Message {
	mi := &file_proto_expression_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BoolLiteral.ProtoReflect.Descriptor instead.
func (*BoolLiteral) Descriptor() ([]byte, []int) {
	return file_proto_expression_proto_rawDescGZIP(), []int{5}
}

func (x *BoolLiteral) GetValue() bool {
	if x != nil {
		return x.Value
	}
	return false
}

type NilValue struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *NilValue) Reset() {
	*x = NilValue{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_expression_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NilValue) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NilValue) ProtoMessage() {}

func (x *NilValue) ProtoReflect() protoreflect.Message {
	mi := &file_proto_expression_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NilValue.ProtoReflect.Descriptor instead.
func (*NilValue) Descriptor() ([]byte, []int) {
	return file_proto_expression_proto_rawDescGZIP(), []int{6}
}

func (x *NilValue) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type URealLiteral struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Value float64 `protobuf:"fixed64,1,opt,name=value,proto3" json:"value,omitempty"`
}

func (x *URealLiteral) Reset() {
	*x = URealLiteral{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_expression_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *URealLiteral) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*URealLiteral) ProtoMessage() {}

func (x *URealLiteral) ProtoReflect() protoreflect.Message {
	mi := &file_proto_expression_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use URealLiteral.ProtoReflect.Descriptor instead.
func (*URealLiteral) Descriptor() ([]byte, []int) {
	return file_proto_expression_proto_rawDescGZIP(), []int{7}
}

func (x *URealLiteral) GetValue() float64 {
	if x != nil {
		return x.Value
	}
	return 0
}

type UnaryExpr struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Op      *Operator   `protobuf:"bytes,1,opt,name=op,proto3" json:"op,omitempty"`
	Operand *Expression `protobuf:"bytes,2,opt,name=operand,proto3" json:"operand,omitempty"`
}

func (x *UnaryExpr) Reset() {
	*x = UnaryExpr{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_expression_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UnaryExpr) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UnaryExpr) ProtoMessage() {}

func (x *UnaryExpr) ProtoReflect() protoreflect.Message {
	mi := &file_proto_expression_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UnaryExpr.ProtoReflect.Descriptor instead.
func (*UnaryExpr) Descriptor() ([]byte, []int) {
	return file_proto_expression_proto_rawDescGZIP(), []int{8}
}

func (x *UnaryExpr) GetOp() *Operator {
	if x != nil {
		return x.Op
	}
	return nil
}

func (x *UnaryExpr) GetOperand() *Expression {
	if x != nil {
		return x.Operand
	}
	return nil
}

type StringLiteral struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Value string `protobuf:"bytes,1,opt,name=value,proto3" json:"value,omitempty"`
}

func (x *StringLiteral) Reset() {
	*x = StringLiteral{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_expression_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StringLiteral) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StringLiteral) ProtoMessage() {}

func (x *StringLiteral) ProtoReflect() protoreflect.Message {
	mi := &file_proto_expression_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StringLiteral.ProtoReflect.Descriptor instead.
func (*StringLiteral) Descriptor() ([]byte, []int) {
	return file_proto_expression_proto_rawDescGZIP(), []int{9}
}

func (x *StringLiteral) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

type FuncCall struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name       *Expression   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Args       []*Expression `protobuf:"bytes,2,rep,name=args,proto3" json:"args,omitempty"`
	ReturnType *Type         `protobuf:"bytes,3,opt,name=returnType,proto3" json:"returnType,omitempty"`
}

func (x *FuncCall) Reset() {
	*x = FuncCall{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_expression_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FuncCall) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FuncCall) ProtoMessage() {}

func (x *FuncCall) ProtoReflect() protoreflect.Message {
	mi := &file_proto_expression_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FuncCall.ProtoReflect.Descriptor instead.
func (*FuncCall) Descriptor() ([]byte, []int) {
	return file_proto_expression_proto_rawDescGZIP(), []int{10}
}

func (x *FuncCall) GetName() *Expression {
	if x != nil {
		return x.Name
	}
	return nil
}

func (x *FuncCall) GetArgs() []*Expression {
	if x != nil {
		return x.Args
	}
	return nil
}

func (x *FuncCall) GetReturnType() *Type {
	if x != nil {
		return x.ReturnType
	}
	return nil
}

//////////////////////////////////
//  OPERATORS
//////////////////////////////////
type Operator struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Op Operator_OpKind `protobuf:"varint,1,opt,name=op,proto3,enum=Pasc.Operator_OpKind" json:"op,omitempty"`
}

func (x *Operator) Reset() {
	*x = Operator{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_expression_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Operator) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Operator) ProtoMessage() {}

func (x *Operator) ProtoReflect() protoreflect.Message {
	mi := &file_proto_expression_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Operator.ProtoReflect.Descriptor instead.
func (*Operator) Descriptor() ([]byte, []int) {
	return file_proto_expression_proto_rawDescGZIP(), []int{11}
}

func (x *Operator) GetOp() Operator_OpKind {
	if x != nil {
		return x.Op
	}
	return Operator_Plus
}

type Identifier_Variable struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *Identifier_Variable) Reset() {
	*x = Identifier_Variable{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_expression_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Identifier_Variable) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Identifier_Variable) ProtoMessage() {}

func (x *Identifier_Variable) ProtoReflect() protoreflect.Message {
	mi := &file_proto_expression_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Identifier_Variable.ProtoReflect.Descriptor instead.
func (*Identifier_Variable) Descriptor() ([]byte, []int) {
	return file_proto_expression_proto_rawDescGZIP(), []int{0, 0}
}

func (x *Identifier_Variable) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type Identifier_IndexedVariable struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *Identifier_IndexedVariable) Reset() {
	*x = Identifier_IndexedVariable{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_expression_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Identifier_IndexedVariable) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Identifier_IndexedVariable) ProtoMessage() {}

func (x *Identifier_IndexedVariable) ProtoReflect() protoreflect.Message {
	mi := &file_proto_expression_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Identifier_IndexedVariable.ProtoReflect.Descriptor instead.
func (*Identifier_IndexedVariable) Descriptor() ([]byte, []int) {
	return file_proto_expression_proto_rawDescGZIP(), []int{0, 1}
}

type Identifier_FieldDesignator struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *Identifier_FieldDesignator) Reset() {
	*x = Identifier_FieldDesignator{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_expression_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Identifier_FieldDesignator) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Identifier_FieldDesignator) ProtoMessage() {}

func (x *Identifier_FieldDesignator) ProtoReflect() protoreflect.Message {
	mi := &file_proto_expression_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Identifier_FieldDesignator.ProtoReflect.Descriptor instead.
func (*Identifier_FieldDesignator) Descriptor() ([]byte, []int) {
	return file_proto_expression_proto_rawDescGZIP(), []int{0, 2}
}

var File_proto_expression_proto protoreflect.FileDescriptor

var file_proto_expression_proto_rawDesc = []byte{
	0x0a, 0x16, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x65, 0x78, 0x70, 0x72, 0x65, 0x73, 0x73, 0x69,
	0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x04, 0x50, 0x61, 0x73, 0x63, 0x1a, 0x10,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x22, 0xd1, 0x02, 0x0a, 0x0a, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x69, 0x65, 0x72, 0x12,
	0x2b, 0x0a, 0x04, 0x6b, 0x69, 0x6e, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x17, 0x2e,
	0x50, 0x61, 0x73, 0x63, 0x2e, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x69, 0x65, 0x72, 0x2e,
	0x49, 0x44, 0x4b, 0x69, 0x6e, 0x64, 0x52, 0x04, 0x6b, 0x69, 0x6e, 0x64, 0x12, 0x2d, 0x0a, 0x03,
	0x76, 0x61, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x50, 0x61, 0x73, 0x63,
	0x2e, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x69, 0x65, 0x72, 0x2e, 0x56, 0x61, 0x72, 0x69,
	0x61, 0x62, 0x6c, 0x65, 0x48, 0x00, 0x52, 0x03, 0x76, 0x61, 0x72, 0x12, 0x32, 0x0a, 0x02, 0x69,
	0x76, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x50, 0x61, 0x73, 0x63, 0x2e, 0x49,
	0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x69, 0x65, 0x72, 0x2e, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x65,
	0x64, 0x56, 0x61, 0x72, 0x69, 0x61, 0x62, 0x6c, 0x65, 0x48, 0x00, 0x52, 0x02, 0x69, 0x76, 0x12,
	0x34, 0x0a, 0x03, 0x66, 0x6c, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x50,
	0x61, 0x73, 0x63, 0x2e, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x69, 0x65, 0x72, 0x2e, 0x46,
	0x69, 0x65, 0x6c, 0x64, 0x44, 0x65, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x6f, 0x72, 0x48, 0x00,
	0x52, 0x03, 0x66, 0x6c, 0x64, 0x1a, 0x1e, 0x0a, 0x08, 0x56, 0x61, 0x72, 0x69, 0x61, 0x62, 0x6c,
	0x65, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x1a, 0x11, 0x0a, 0x0f, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x65, 0x64,
	0x56, 0x61, 0x72, 0x69, 0x61, 0x62, 0x6c, 0x65, 0x1a, 0x11, 0x0a, 0x0f, 0x46, 0x69, 0x65, 0x6c,
	0x64, 0x44, 0x65, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x6f, 0x72, 0x22, 0x2e, 0x0a, 0x06, 0x49,
	0x44, 0x4b, 0x69, 0x6e, 0x64, 0x12, 0x0d, 0x0a, 0x09, 0x45, 0x6e, 0x74, 0x69, 0x72, 0x65, 0x56,
	0x61, 0x72, 0x10, 0x00, 0x12, 0x0a, 0x0a, 0x06, 0x49, 0x64, 0x78, 0x56, 0x61, 0x72, 0x10, 0x01,
	0x12, 0x09, 0x0a, 0x05, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x10, 0x02, 0x42, 0x07, 0x0a, 0x05, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x22, 0xb7, 0x04, 0x0a, 0x0a, 0x45, 0x78, 0x70, 0x72, 0x65, 0x73, 0x73,
	0x69, 0x6f, 0x6e, 0x12, 0x2d, 0x0a, 0x04, 0x6b, 0x69, 0x6e, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0e, 0x32, 0x19, 0x2e, 0x50, 0x61, 0x73, 0x63, 0x2e, 0x45, 0x78, 0x70, 0x72, 0x65, 0x73, 0x73,
	0x69, 0x6f, 0x6e, 0x2e, 0x45, 0x78, 0x70, 0x72, 0x4b, 0x69, 0x6e, 0x64, 0x52, 0x04, 0x6b, 0x69,
	0x6e, 0x64, 0x12, 0x22, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10,
	0x2e, 0x50, 0x61, 0x73, 0x63, 0x2e, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x69, 0x65, 0x72,
	0x48, 0x00, 0x52, 0x02, 0x69, 0x64, 0x12, 0x27, 0x0a, 0x04, 0x75, 0x69, 0x6e, 0x74, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x50, 0x61, 0x73, 0x63, 0x2e, 0x55, 0x49, 0x6e, 0x74,
	0x4c, 0x69, 0x74, 0x65, 0x72, 0x61, 0x6c, 0x48, 0x00, 0x52, 0x04, 0x75, 0x69, 0x6e, 0x74, 0x12,
	0x22, 0x0a, 0x02, 0x62, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x50, 0x61,
	0x73, 0x63, 0x2e, 0x42, 0x69, 0x6e, 0x61, 0x72, 0x79, 0x45, 0x78, 0x70, 0x72, 0x48, 0x00, 0x52,
	0x02, 0x62, 0x65, 0x12, 0x26, 0x0a, 0x02, 0x77, 0x70, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x14, 0x2e, 0x50, 0x61, 0x73, 0x63, 0x2e, 0x57, 0x72, 0x69, 0x74, 0x65, 0x50, 0x61, 0x72, 0x61,
	0x6d, 0x65, 0x74, 0x65, 0x72, 0x48, 0x00, 0x52, 0x02, 0x77, 0x70, 0x12, 0x20, 0x0a, 0x02, 0x66,
	0x63, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x50, 0x61, 0x73, 0x63, 0x2e, 0x46,
	0x75, 0x6e, 0x63, 0x43, 0x61, 0x6c, 0x6c, 0x48, 0x00, 0x52, 0x02, 0x66, 0x63, 0x12, 0x23, 0x0a,
	0x02, 0x62, 0x6c, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x50, 0x61, 0x73, 0x63,
	0x2e, 0x42, 0x6f, 0x6f, 0x6c, 0x4c, 0x69, 0x74, 0x65, 0x72, 0x61, 0x6c, 0x48, 0x00, 0x52, 0x02,
	0x62, 0x6c, 0x12, 0x20, 0x0a, 0x02, 0x6e, 0x6c, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e,
	0x2e, 0x50, 0x61, 0x73, 0x63, 0x2e, 0x4e, 0x69, 0x6c, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x48, 0x00,
	0x52, 0x02, 0x6e, 0x6c, 0x12, 0x2a, 0x0a, 0x05, 0x75, 0x72, 0x65, 0x61, 0x6c, 0x18, 0x09, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x50, 0x61, 0x73, 0x63, 0x2e, 0x55, 0x52, 0x65, 0x61, 0x6c,
	0x4c, 0x69, 0x74, 0x65, 0x72, 0x61, 0x6c, 0x48, 0x00, 0x52, 0x05, 0x75, 0x72, 0x65, 0x61, 0x6c,
	0x12, 0x21, 0x0a, 0x02, 0x75, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x50,
	0x61, 0x73, 0x63, 0x2e, 0x55, 0x6e, 0x61, 0x72, 0x79, 0x45, 0x78, 0x70, 0x72, 0x48, 0x00, 0x52,
	0x02, 0x75, 0x65, 0x12, 0x25, 0x0a, 0x02, 0x73, 0x6c, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x13, 0x2e, 0x50, 0x61, 0x73, 0x63, 0x2e, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x4c, 0x69, 0x74,
	0x65, 0x72, 0x61, 0x6c, 0x48, 0x00, 0x52, 0x02, 0x73, 0x6c, 0x22, 0x7a, 0x0a, 0x08, 0x45, 0x78,
	0x70, 0x72, 0x4b, 0x69, 0x6e, 0x64, 0x12, 0x08, 0x0a, 0x04, 0x55, 0x49, 0x6e, 0x74, 0x10, 0x00,
	0x12, 0x08, 0x0a, 0x04, 0x42, 0x6f, 0x6f, 0x6c, 0x10, 0x01, 0x12, 0x09, 0x0a, 0x05, 0x49, 0x64,
	0x65, 0x6e, 0x74, 0x10, 0x02, 0x12, 0x0b, 0x0a, 0x07, 0x42, 0x69, 0x6e, 0x45, 0x78, 0x70, 0x72,
	0x10, 0x03, 0x12, 0x0e, 0x0a, 0x0a, 0x57, 0x72, 0x69, 0x74, 0x65, 0x50, 0x61, 0x72, 0x61, 0x6d,
	0x10, 0x04, 0x12, 0x09, 0x0a, 0x05, 0x46, 0x43, 0x61, 0x6c, 0x6c, 0x10, 0x05, 0x12, 0x07, 0x0a,
	0x03, 0x4e, 0x69, 0x6c, 0x10, 0x06, 0x12, 0x09, 0x0a, 0x05, 0x55, 0x52, 0x65, 0x61, 0x6c, 0x10,
	0x07, 0x12, 0x0a, 0x0a, 0x06, 0x55, 0x6e, 0x45, 0x78, 0x70, 0x72, 0x10, 0x08, 0x12, 0x07, 0x0a,
	0x03, 0x53, 0x74, 0x72, 0x10, 0x09, 0x42, 0x06, 0x0a, 0x04, 0x65, 0x78, 0x70, 0x72, 0x22, 0x94,
	0x01, 0x0a, 0x0e, 0x57, 0x72, 0x69, 0x74, 0x65, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74, 0x65,
	0x72, 0x12, 0x1e, 0x0a, 0x01, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x50,
	0x61, 0x73, 0x63, 0x2e, 0x45, 0x78, 0x70, 0x72, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x01,
	0x65, 0x12, 0x30, 0x0a, 0x0a, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x57, 0x69, 0x64, 0x74, 0x68, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x50, 0x61, 0x73, 0x63, 0x2e, 0x45, 0x78, 0x70,
	0x72, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x0a, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x57, 0x69,
	0x64, 0x74, 0x68, 0x12, 0x30, 0x0a, 0x0a, 0x66, 0x72, 0x61, 0x63, 0x44, 0x69, 0x67, 0x69, 0x74,
	0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x50, 0x61, 0x73, 0x63, 0x2e, 0x45,
	0x78, 0x70, 0x72, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x0a, 0x66, 0x72, 0x61, 0x63, 0x44,
	0x69, 0x67, 0x69, 0x74, 0x73, 0x22, 0x7a, 0x0a, 0x0a, 0x42, 0x69, 0x6e, 0x61, 0x72, 0x79, 0x45,
	0x78, 0x70, 0x72, 0x12, 0x24, 0x0a, 0x04, 0x6c, 0x65, 0x66, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x10, 0x2e, 0x50, 0x61, 0x73, 0x63, 0x2e, 0x45, 0x78, 0x70, 0x72, 0x65, 0x73, 0x73,
	0x69, 0x6f, 0x6e, 0x52, 0x04, 0x6c, 0x65, 0x66, 0x74, 0x12, 0x26, 0x0a, 0x05, 0x72, 0x69, 0x67,
	0x68, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x50, 0x61, 0x73, 0x63, 0x2e,
	0x45, 0x78, 0x70, 0x72, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x05, 0x72, 0x69, 0x67, 0x68,
	0x74, 0x12, 0x1e, 0x0a, 0x02, 0x6f, 0x70, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e,
	0x50, 0x61, 0x73, 0x63, 0x2e, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x52, 0x02, 0x6f,
	0x70, 0x22, 0x23, 0x0a, 0x0b, 0x55, 0x49, 0x6e, 0x74, 0x4c, 0x69, 0x74, 0x65, 0x72, 0x61, 0x6c,
	0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x23, 0x0a, 0x0b, 0x42, 0x6f, 0x6f, 0x6c, 0x4c, 0x69,
	0x74, 0x65, 0x72, 0x61, 0x6c, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x1e, 0x0a, 0x08, 0x4e,
	0x69, 0x6c, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0x24, 0x0a, 0x0c, 0x55,
	0x52, 0x65, 0x61, 0x6c, 0x4c, 0x69, 0x74, 0x65, 0x72, 0x61, 0x6c, 0x12, 0x14, 0x0a, 0x05, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x01, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x22, 0x57, 0x0a, 0x09, 0x55, 0x6e, 0x61, 0x72, 0x79, 0x45, 0x78, 0x70, 0x72, 0x12, 0x1e,
	0x0a, 0x02, 0x6f, 0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x50, 0x61, 0x73,
	0x63, 0x2e, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x52, 0x02, 0x6f, 0x70, 0x12, 0x2a,
	0x0a, 0x07, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x6e, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x10, 0x2e, 0x50, 0x61, 0x73, 0x63, 0x2e, 0x45, 0x78, 0x70, 0x72, 0x65, 0x73, 0x73, 0x69, 0x6f,
	0x6e, 0x52, 0x07, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x6e, 0x64, 0x22, 0x25, 0x0a, 0x0d, 0x53, 0x74,
	0x72, 0x69, 0x6e, 0x67, 0x4c, 0x69, 0x74, 0x65, 0x72, 0x61, 0x6c, 0x12, 0x14, 0x0a, 0x05, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x22, 0x82, 0x01, 0x0a, 0x08, 0x46, 0x75, 0x6e, 0x63, 0x43, 0x61, 0x6c, 0x6c, 0x12, 0x24,
	0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x50,
	0x61, 0x73, 0x63, 0x2e, 0x45, 0x78, 0x70, 0x72, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x12, 0x24, 0x0a, 0x04, 0x61, 0x72, 0x67, 0x73, 0x18, 0x02, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x10, 0x2e, 0x50, 0x61, 0x73, 0x63, 0x2e, 0x45, 0x78, 0x70, 0x72, 0x65, 0x73,
	0x73, 0x69, 0x6f, 0x6e, 0x52, 0x04, 0x61, 0x72, 0x67, 0x73, 0x12, 0x2a, 0x0a, 0x0a, 0x72, 0x65,
	0x74, 0x75, 0x72, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0a,
	0x2e, 0x50, 0x61, 0x73, 0x63, 0x2e, 0x54, 0x79, 0x70, 0x65, 0x52, 0x0a, 0x72, 0x65, 0x74, 0x75,
	0x72, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x22, 0xca, 0x01, 0x0a, 0x08, 0x4f, 0x70, 0x65, 0x72, 0x61,
	0x74, 0x6f, 0x72, 0x12, 0x25, 0x0a, 0x02, 0x6f, 0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32,
	0x15, 0x2e, 0x50, 0x61, 0x73, 0x63, 0x2e, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x2e,
	0x4f, 0x70, 0x4b, 0x69, 0x6e, 0x64, 0x52, 0x02, 0x6f, 0x70, 0x22, 0x96, 0x01, 0x0a, 0x06, 0x4f,
	0x70, 0x4b, 0x69, 0x6e, 0x64, 0x12, 0x08, 0x0a, 0x04, 0x50, 0x6c, 0x75, 0x73, 0x10, 0x00, 0x12,
	0x09, 0x0a, 0x05, 0x4d, 0x69, 0x6e, 0x75, 0x73, 0x10, 0x01, 0x12, 0x07, 0x0a, 0x03, 0x44, 0x69,
	0x76, 0x10, 0x02, 0x12, 0x07, 0x0a, 0x03, 0x4d, 0x6f, 0x64, 0x10, 0x04, 0x12, 0x07, 0x0a, 0x03,
	0x41, 0x6e, 0x64, 0x10, 0x05, 0x12, 0x06, 0x0a, 0x02, 0x4f, 0x72, 0x10, 0x06, 0x12, 0x06, 0x0a,
	0x02, 0x49, 0x6e, 0x10, 0x07, 0x12, 0x09, 0x0a, 0x05, 0x45, 0x71, 0x75, 0x61, 0x6c, 0x10, 0x08,
	0x12, 0x08, 0x0a, 0x04, 0x4c, 0x65, 0x73, 0x73, 0x10, 0x09, 0x12, 0x09, 0x0a, 0x05, 0x47, 0x72,
	0x65, 0x61, 0x74, 0x10, 0x0a, 0x12, 0x0e, 0x0a, 0x0a, 0x47, 0x72, 0x65, 0x61, 0x74, 0x45, 0x71,
	0x75, 0x61, 0x6c, 0x10, 0x0b, 0x12, 0x0d, 0x0a, 0x09, 0x4c, 0x65, 0x73, 0x73, 0x45, 0x71, 0x75,
	0x61, 0x6c, 0x10, 0x0c, 0x12, 0x0d, 0x0a, 0x09, 0x4c, 0x65, 0x73, 0x73, 0x47, 0x72, 0x65, 0x61,
	0x74, 0x10, 0x0d, 0x42, 0x18, 0x5a, 0x16, 0x70, 0x6b, 0x67, 0x2f, 0x63, 0x6f, 0x64, 0x65, 0x67,
	0x65, 0x6e, 0x2f, 0x73, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x69, 0x7a, 0x65, 0x72, 0x62, 0x06, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_proto_expression_proto_rawDescOnce sync.Once
	file_proto_expression_proto_rawDescData = file_proto_expression_proto_rawDesc
)

func file_proto_expression_proto_rawDescGZIP() []byte {
	file_proto_expression_proto_rawDescOnce.Do(func() {
		file_proto_expression_proto_rawDescData = protoimpl.X.CompressGZIP(file_proto_expression_proto_rawDescData)
	})
	return file_proto_expression_proto_rawDescData
}

var file_proto_expression_proto_enumTypes = make([]protoimpl.EnumInfo, 3)
var file_proto_expression_proto_msgTypes = make([]protoimpl.MessageInfo, 15)
var file_proto_expression_proto_goTypes = []interface{}{
	(Identifier_IDKind)(0),             // 0: Pasc.Identifier.IDKind
	(Expression_ExprKind)(0),           // 1: Pasc.Expression.ExprKind
	(Operator_OpKind)(0),               // 2: Pasc.Operator.OpKind
	(*Identifier)(nil),                 // 3: Pasc.Identifier
	(*Expression)(nil),                 // 4: Pasc.Expression
	(*WriteParameter)(nil),             // 5: Pasc.WriteParameter
	(*BinaryExpr)(nil),                 // 6: Pasc.BinaryExpr
	(*UIntLiteral)(nil),                // 7: Pasc.UIntLiteral
	(*BoolLiteral)(nil),                // 8: Pasc.BoolLiteral
	(*NilValue)(nil),                   // 9: Pasc.NilValue
	(*URealLiteral)(nil),               // 10: Pasc.URealLiteral
	(*UnaryExpr)(nil),                  // 11: Pasc.UnaryExpr
	(*StringLiteral)(nil),              // 12: Pasc.StringLiteral
	(*FuncCall)(nil),                   // 13: Pasc.FuncCall
	(*Operator)(nil),                   // 14: Pasc.Operator
	(*Identifier_Variable)(nil),        // 15: Pasc.Identifier.Variable
	(*Identifier_IndexedVariable)(nil), // 16: Pasc.Identifier.IndexedVariable
	(*Identifier_FieldDesignator)(nil), // 17: Pasc.Identifier.FieldDesignator
	(*Type)(nil),                       // 18: Pasc.Type
}
var file_proto_expression_proto_depIdxs = []int32{
	0,  // 0: Pasc.Identifier.kind:type_name -> Pasc.Identifier.IDKind
	15, // 1: Pasc.Identifier.var:type_name -> Pasc.Identifier.Variable
	16, // 2: Pasc.Identifier.iv:type_name -> Pasc.Identifier.IndexedVariable
	17, // 3: Pasc.Identifier.fld:type_name -> Pasc.Identifier.FieldDesignator
	1,  // 4: Pasc.Expression.kind:type_name -> Pasc.Expression.ExprKind
	3,  // 5: Pasc.Expression.id:type_name -> Pasc.Identifier
	7,  // 6: Pasc.Expression.uint:type_name -> Pasc.UIntLiteral
	6,  // 7: Pasc.Expression.be:type_name -> Pasc.BinaryExpr
	5,  // 8: Pasc.Expression.wp:type_name -> Pasc.WriteParameter
	13, // 9: Pasc.Expression.fc:type_name -> Pasc.FuncCall
	8,  // 10: Pasc.Expression.bl:type_name -> Pasc.BoolLiteral
	9,  // 11: Pasc.Expression.nl:type_name -> Pasc.NilValue
	10, // 12: Pasc.Expression.ureal:type_name -> Pasc.URealLiteral
	11, // 13: Pasc.Expression.ue:type_name -> Pasc.UnaryExpr
	12, // 14: Pasc.Expression.sl:type_name -> Pasc.StringLiteral
	4,  // 15: Pasc.WriteParameter.e:type_name -> Pasc.Expression
	4,  // 16: Pasc.WriteParameter.totalWidth:type_name -> Pasc.Expression
	4,  // 17: Pasc.WriteParameter.fracDigits:type_name -> Pasc.Expression
	4,  // 18: Pasc.BinaryExpr.left:type_name -> Pasc.Expression
	4,  // 19: Pasc.BinaryExpr.right:type_name -> Pasc.Expression
	14, // 20: Pasc.BinaryExpr.op:type_name -> Pasc.Operator
	14, // 21: Pasc.UnaryExpr.op:type_name -> Pasc.Operator
	4,  // 22: Pasc.UnaryExpr.operand:type_name -> Pasc.Expression
	4,  // 23: Pasc.FuncCall.name:type_name -> Pasc.Expression
	4,  // 24: Pasc.FuncCall.args:type_name -> Pasc.Expression
	18, // 25: Pasc.FuncCall.returnType:type_name -> Pasc.Type
	2,  // 26: Pasc.Operator.op:type_name -> Pasc.Operator.OpKind
	27, // [27:27] is the sub-list for method output_type
	27, // [27:27] is the sub-list for method input_type
	27, // [27:27] is the sub-list for extension type_name
	27, // [27:27] is the sub-list for extension extendee
	0,  // [0:27] is the sub-list for field type_name
}

func init() { file_proto_expression_proto_init() }
func file_proto_expression_proto_init() {
	if File_proto_expression_proto != nil {
		return
	}
	file_proto_type_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_proto_expression_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Identifier); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_expression_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Expression); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_expression_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WriteParameter); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_expression_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BinaryExpr); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_expression_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UIntLiteral); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_expression_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BoolLiteral); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_expression_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NilValue); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_expression_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*URealLiteral); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_expression_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UnaryExpr); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_expression_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StringLiteral); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_expression_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FuncCall); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_expression_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Operator); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_expression_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Identifier_Variable); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_expression_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Identifier_IndexedVariable); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_expression_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Identifier_FieldDesignator); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_proto_expression_proto_msgTypes[0].OneofWrappers = []interface{}{
		(*Identifier_Var)(nil),
		(*Identifier_Iv)(nil),
		(*Identifier_Fld)(nil),
	}
	file_proto_expression_proto_msgTypes[1].OneofWrappers = []interface{}{
		(*Expression_Id)(nil),
		(*Expression_Uint)(nil),
		(*Expression_Be)(nil),
		(*Expression_Wp)(nil),
		(*Expression_Fc)(nil),
		(*Expression_Bl)(nil),
		(*Expression_Nl)(nil),
		(*Expression_Ureal)(nil),
		(*Expression_Ue)(nil),
		(*Expression_Sl)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_proto_expression_proto_rawDesc,
			NumEnums:      3,
			NumMessages:   15,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_proto_expression_proto_goTypes,
		DependencyIndexes: file_proto_expression_proto_depIdxs,
		EnumInfos:         file_proto_expression_proto_enumTypes,
		MessageInfos:      file_proto_expression_proto_msgTypes,
	}.Build()
	File_proto_expression_proto = out.File
	file_proto_expression_proto_rawDesc = nil
	file_proto_expression_proto_goTypes = nil
	file_proto_expression_proto_depIdxs = nil
}
