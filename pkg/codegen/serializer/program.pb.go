// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.30.0
// 	protoc        v3.6.1
// source: program.proto

package serializer

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type TokenKind int32

const (
	TokenKind_PROGRAM    TokenKind = 0
	TokenKind_ASSIGN     TokenKind = 1
	TokenKind_IDENTIFIER TokenKind = 2
	TokenKind_UINTLIT    TokenKind = 3
	TokenKind_PROCEDURE  TokenKind = 4
	TokenKind_LESS       TokenKind = 5
	TokenKind_GREAT      TokenKind = 6
	TokenKind_IF         TokenKind = 7
)

// Enum value maps for TokenKind.
var (
	TokenKind_name = map[int32]string{
		0: "PROGRAM",
		1: "ASSIGN",
		2: "IDENTIFIER",
		3: "UINTLIT",
		4: "PROCEDURE",
		5: "LESS",
		6: "GREAT",
		7: "IF",
	}
	TokenKind_value = map[string]int32{
		"PROGRAM":    0,
		"ASSIGN":     1,
		"IDENTIFIER": 2,
		"UINTLIT":    3,
		"PROCEDURE":  4,
		"LESS":       5,
		"GREAT":      6,
		"IF":         7,
	}
)

func (x TokenKind) Enum() *TokenKind {
	p := new(TokenKind)
	*p = x
	return p
}

func (x TokenKind) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (TokenKind) Descriptor() protoreflect.EnumDescriptor {
	return file_program_proto_enumTypes[0].Descriptor()
}

func (TokenKind) Type() protoreflect.EnumType {
	return &file_program_proto_enumTypes[0]
}

func (x TokenKind) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use TokenKind.Descriptor instead.
func (TokenKind) EnumDescriptor() ([]byte, []int) {
	return file_program_proto_rawDescGZIP(), []int{0}
}

//////////////////////////////////
//  TYPES
//////////////////////////////////
type TypeKind int32

const (
	TypeKind_INTEGER TypeKind = 0
	TypeKind_REAL    TypeKind = 1
	TypeKind_BOOLEAN TypeKind = 2
	TypeKind_CHAR    TypeKind = 3
)

// Enum value maps for TypeKind.
var (
	TypeKind_name = map[int32]string{
		0: "INTEGER",
		1: "REAL",
		2: "BOOLEAN",
		3: "CHAR",
	}
	TypeKind_value = map[string]int32{
		"INTEGER": 0,
		"REAL":    1,
		"BOOLEAN": 2,
		"CHAR":    3,
	}
)

func (x TypeKind) Enum() *TypeKind {
	p := new(TypeKind)
	*p = x
	return p
}

func (x TypeKind) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (TypeKind) Descriptor() protoreflect.EnumDescriptor {
	return file_program_proto_enumTypes[1].Descriptor()
}

func (TypeKind) Type() protoreflect.EnumType {
	return &file_program_proto_enumTypes[1]
}

func (x TypeKind) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use TypeKind.Descriptor instead.
func (TypeKind) EnumDescriptor() ([]byte, []int) {
	return file_program_proto_rawDescGZIP(), []int{1}
}

type ProcedureStatement_PSKind int32

const (
	ProcedureStatement_wln      ProcedureStatement_PSKind = 0
	ProcedureStatement_write    ProcedureStatement_PSKind = 1
	ProcedureStatement_read     ProcedureStatement_PSKind = 2
	ProcedureStatement_readLn   ProcedureStatement_PSKind = 3
	ProcedureStatement_procStmt ProcedureStatement_PSKind = 4
)

// Enum value maps for ProcedureStatement_PSKind.
var (
	ProcedureStatement_PSKind_name = map[int32]string{
		0: "wln",
		1: "write",
		2: "read",
		3: "readLn",
		4: "procStmt",
	}
	ProcedureStatement_PSKind_value = map[string]int32{
		"wln":      0,
		"write":    1,
		"read":     2,
		"readLn":   3,
		"procStmt": 4,
	}
)

func (x ProcedureStatement_PSKind) Enum() *ProcedureStatement_PSKind {
	p := new(ProcedureStatement_PSKind)
	*p = x
	return p
}

func (x ProcedureStatement_PSKind) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ProcedureStatement_PSKind) Descriptor() protoreflect.EnumDescriptor {
	return file_program_proto_enumTypes[2].Descriptor()
}

func (ProcedureStatement_PSKind) Type() protoreflect.EnumType {
	return &file_program_proto_enumTypes[2]
}

func (x ProcedureStatement_PSKind) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ProcedureStatement_PSKind.Descriptor instead.
func (ProcedureStatement_PSKind) EnumDescriptor() ([]byte, []int) {
	return file_program_proto_rawDescGZIP(), []int{3, 0}
}

type Statement_StmtKind int32

const (
	Statement_if        Statement_StmtKind = 0
	Statement_assign    Statement_StmtKind = 1
	Statement_procedure Statement_StmtKind = 2
)

// Enum value maps for Statement_StmtKind.
var (
	Statement_StmtKind_name = map[int32]string{
		0: "if",
		1: "assign",
		2: "procedure",
	}
	Statement_StmtKind_value = map[string]int32{
		"if":        0,
		"assign":    1,
		"procedure": 2,
	}
)

func (x Statement_StmtKind) Enum() *Statement_StmtKind {
	p := new(Statement_StmtKind)
	*p = x
	return p
}

func (x Statement_StmtKind) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Statement_StmtKind) Descriptor() protoreflect.EnumDescriptor {
	return file_program_proto_enumTypes[3].Descriptor()
}

func (Statement_StmtKind) Type() protoreflect.EnumType {
	return &file_program_proto_enumTypes[3]
}

func (x Statement_StmtKind) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Statement_StmtKind.Descriptor instead.
func (Statement_StmtKind) EnumDescriptor() ([]byte, []int) {
	return file_program_proto_rawDescGZIP(), []int{6, 0}
}

type Identifier_IDKind int32

const (
	Identifier_EntireVar Identifier_IDKind = 0
	Identifier_IdxVar    Identifier_IDKind = 1
	Identifier_Field     Identifier_IDKind = 2
)

// Enum value maps for Identifier_IDKind.
var (
	Identifier_IDKind_name = map[int32]string{
		0: "EntireVar",
		1: "IdxVar",
		2: "Field",
	}
	Identifier_IDKind_value = map[string]int32{
		"EntireVar": 0,
		"IdxVar":    1,
		"Field":     2,
	}
)

func (x Identifier_IDKind) Enum() *Identifier_IDKind {
	p := new(Identifier_IDKind)
	*p = x
	return p
}

func (x Identifier_IDKind) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Identifier_IDKind) Descriptor() protoreflect.EnumDescriptor {
	return file_program_proto_enumTypes[4].Descriptor()
}

func (Identifier_IDKind) Type() protoreflect.EnumType {
	return &file_program_proto_enumTypes[4]
}

func (x Identifier_IDKind) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Identifier_IDKind.Descriptor instead.
func (Identifier_IDKind) EnumDescriptor() ([]byte, []int) {
	return file_program_proto_rawDescGZIP(), []int{7, 0}
}

type Expression_ExprKind int32

const (
	Expression_UInt       Expression_ExprKind = 0
	Expression_Bool       Expression_ExprKind = 1
	Expression_Ident      Expression_ExprKind = 2
	Expression_BinExpr    Expression_ExprKind = 3
	Expression_WriteParam Expression_ExprKind = 4
)

// Enum value maps for Expression_ExprKind.
var (
	Expression_ExprKind_name = map[int32]string{
		0: "UInt",
		1: "Bool",
		2: "Ident",
		3: "BinExpr",
		4: "WriteParam",
	}
	Expression_ExprKind_value = map[string]int32{
		"UInt":       0,
		"Bool":       1,
		"Ident":      2,
		"BinExpr":    3,
		"WriteParam": 4,
	}
)

func (x Expression_ExprKind) Enum() *Expression_ExprKind {
	p := new(Expression_ExprKind)
	*p = x
	return p
}

func (x Expression_ExprKind) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Expression_ExprKind) Descriptor() protoreflect.EnumDescriptor {
	return file_program_proto_enumTypes[5].Descriptor()
}

func (Expression_ExprKind) Type() protoreflect.EnumType {
	return &file_program_proto_enumTypes[5]
}

func (x Expression_ExprKind) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Expression_ExprKind.Descriptor instead.
func (Expression_ExprKind) EnumDescriptor() ([]byte, []int) {
	return file_program_proto_rawDescGZIP(), []int{8, 0}
}

type Operator_OpKind int32

const (
	Operator_Plus  Operator_OpKind = 0
	Operator_Minus Operator_OpKind = 1
	Operator_Div   Operator_OpKind = 2
	Operator_Sub   Operator_OpKind = 3
	Operator_Mod   Operator_OpKind = 4
	Operator_And   Operator_OpKind = 5
	Operator_Or    Operator_OpKind = 6
	Operator_In    Operator_OpKind = 7
	Operator_Equal Operator_OpKind = 8
	Operator_Less  Operator_OpKind = 9
	Operator_Great Operator_OpKind = 10
)

// Enum value maps for Operator_OpKind.
var (
	Operator_OpKind_name = map[int32]string{
		0:  "Plus",
		1:  "Minus",
		2:  "Div",
		3:  "Sub",
		4:  "Mod",
		5:  "And",
		6:  "Or",
		7:  "In",
		8:  "Equal",
		9:  "Less",
		10: "Great",
	}
	Operator_OpKind_value = map[string]int32{
		"Plus":  0,
		"Minus": 1,
		"Div":   2,
		"Sub":   3,
		"Mod":   4,
		"And":   5,
		"Or":    6,
		"In":    7,
		"Equal": 8,
		"Less":  9,
		"Great": 10,
	}
)

func (x Operator_OpKind) Enum() *Operator_OpKind {
	p := new(Operator_OpKind)
	*p = x
	return p
}

func (x Operator_OpKind) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Operator_OpKind) Descriptor() protoreflect.EnumDescriptor {
	return file_program_proto_enumTypes[6].Descriptor()
}

func (Operator_OpKind) Type() protoreflect.EnumType {
	return &file_program_proto_enumTypes[6]
}

func (x Operator_OpKind) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Operator_OpKind.Descriptor instead.
func (Operator_OpKind) EnumDescriptor() ([]byte, []int) {
	return file_program_proto_rawDescGZIP(), []int{17, 0}
}

//////////////////////////////////
//  PROGRAM
//////////////////////////////////
type Program struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Kind   TokenKind `protobuf:"varint,1,opt,name=kind,proto3,enum=Pasc.TokenKind" json:"kind,omitempty"`
	Name   string    `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Params []string  `protobuf:"bytes,3,rep,name=params,proto3" json:"params,omitempty"`
	Block  *Block    `protobuf:"bytes,4,opt,name=block,proto3" json:"block,omitempty"`
}

func (x *Program) Reset() {
	*x = Program{}
	if protoimpl.UnsafeEnabled {
		mi := &file_program_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Program) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Program) ProtoMessage() {}

func (x *Program) ProtoReflect() protoreflect.Message {
	mi := &file_program_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Program.ProtoReflect.Descriptor instead.
func (*Program) Descriptor() ([]byte, []int) {
	return file_program_proto_rawDescGZIP(), []int{0}
}

func (x *Program) GetKind() TokenKind {
	if x != nil {
		return x.Kind
	}
	return TokenKind_PROGRAM
}

func (x *Program) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Program) GetParams() []string {
	if x != nil {
		return x.Params
	}
	return nil
}

func (x *Program) GetBlock() *Block {
	if x != nil {
		return x.Block
	}
	return nil
}

type Block struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	VarDeclrs []*VarDeclaration `protobuf:"bytes,1,rep,name=varDeclrs,proto3" json:"varDeclrs,omitempty"`
	Stmts     []*Statement      `protobuf:"bytes,2,rep,name=stmts,proto3" json:"stmts,omitempty"`
}

func (x *Block) Reset() {
	*x = Block{}
	if protoimpl.UnsafeEnabled {
		mi := &file_program_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Block) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Block) ProtoMessage() {}

func (x *Block) ProtoReflect() protoreflect.Message {
	mi := &file_program_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Block.ProtoReflect.Descriptor instead.
func (*Block) Descriptor() ([]byte, []int) {
	return file_program_proto_rawDescGZIP(), []int{1}
}

func (x *Block) GetVarDeclrs() []*VarDeclaration {
	if x != nil {
		return x.VarDeclrs
	}
	return nil
}

func (x *Block) GetStmts() []*Statement {
	if x != nil {
		return x.Stmts
	}
	return nil
}

type VarDeclaration struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name *Expression `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Type *Type       `protobuf:"bytes,2,opt,name=type,proto3" json:"type,omitempty"`
}

func (x *VarDeclaration) Reset() {
	*x = VarDeclaration{}
	if protoimpl.UnsafeEnabled {
		mi := &file_program_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VarDeclaration) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VarDeclaration) ProtoMessage() {}

func (x *VarDeclaration) ProtoReflect() protoreflect.Message {
	mi := &file_program_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VarDeclaration.ProtoReflect.Descriptor instead.
func (*VarDeclaration) Descriptor() ([]byte, []int) {
	return file_program_proto_rawDescGZIP(), []int{2}
}

func (x *VarDeclaration) GetName() *Expression {
	if x != nil {
		return x.Name
	}
	return nil
}

func (x *VarDeclaration) GetType() *Type {
	if x != nil {
		return x.Type
	}
	return nil
}

//////////////////////////////////
//  STATEMENTS
//////////////////////////////////
type ProcedureStatement struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Kind ProcedureStatement_PSKind `protobuf:"varint,1,opt,name=kind,proto3,enum=Pasc.ProcedureStatement_PSKind" json:"kind,omitempty"`
	// Types that are assignable to Stmt:
	//	*ProcedureStatement_Wrt
	//	*ProcedureStatement_WrtLn
	//	*ProcedureStatement_Rd
	//	*ProcedureStatement_RdLn
	//	*ProcedureStatement_Ps
	Stmt isProcedureStatement_Stmt `protobuf_oneof:"stmt"`
}

func (x *ProcedureStatement) Reset() {
	*x = ProcedureStatement{}
	if protoimpl.UnsafeEnabled {
		mi := &file_program_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProcedureStatement) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProcedureStatement) ProtoMessage() {}

func (x *ProcedureStatement) ProtoReflect() protoreflect.Message {
	mi := &file_program_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProcedureStatement.ProtoReflect.Descriptor instead.
func (*ProcedureStatement) Descriptor() ([]byte, []int) {
	return file_program_proto_rawDescGZIP(), []int{3}
}

func (x *ProcedureStatement) GetKind() ProcedureStatement_PSKind {
	if x != nil {
		return x.Kind
	}
	return ProcedureStatement_wln
}

func (m *ProcedureStatement) GetStmt() isProcedureStatement_Stmt {
	if m != nil {
		return m.Stmt
	}
	return nil
}

func (x *ProcedureStatement) GetWrt() *ProcedureStatement_Write {
	if x, ok := x.GetStmt().(*ProcedureStatement_Wrt); ok {
		return x.Wrt
	}
	return nil
}

func (x *ProcedureStatement) GetWrtLn() *ProcedureStatement_WriteLn {
	if x, ok := x.GetStmt().(*ProcedureStatement_WrtLn); ok {
		return x.WrtLn
	}
	return nil
}

func (x *ProcedureStatement) GetRd() *ProcedureStatement_Read {
	if x, ok := x.GetStmt().(*ProcedureStatement_Rd); ok {
		return x.Rd
	}
	return nil
}

func (x *ProcedureStatement) GetRdLn() *ProcedureStatement_ReadLn {
	if x, ok := x.GetStmt().(*ProcedureStatement_RdLn); ok {
		return x.RdLn
	}
	return nil
}

func (x *ProcedureStatement) GetPs() *ProcedureStatement_ProcStmt {
	if x, ok := x.GetStmt().(*ProcedureStatement_Ps); ok {
		return x.Ps
	}
	return nil
}

type isProcedureStatement_Stmt interface {
	isProcedureStatement_Stmt()
}

type ProcedureStatement_Wrt struct {
	Wrt *ProcedureStatement_Write `protobuf:"bytes,2,opt,name=wrt,proto3,oneof"`
}

type ProcedureStatement_WrtLn struct {
	WrtLn *ProcedureStatement_WriteLn `protobuf:"bytes,3,opt,name=wrtLn,proto3,oneof"`
}

type ProcedureStatement_Rd struct {
	Rd *ProcedureStatement_Read `protobuf:"bytes,4,opt,name=rd,proto3,oneof"`
}

type ProcedureStatement_RdLn struct {
	RdLn *ProcedureStatement_ReadLn `protobuf:"bytes,5,opt,name=rdLn,proto3,oneof"`
}

type ProcedureStatement_Ps struct {
	Ps *ProcedureStatement_ProcStmt `protobuf:"bytes,6,opt,name=ps,proto3,oneof"`
}

func (*ProcedureStatement_Wrt) isProcedureStatement_Stmt() {}

func (*ProcedureStatement_WrtLn) isProcedureStatement_Stmt() {}

func (*ProcedureStatement_Rd) isProcedureStatement_Stmt() {}

func (*ProcedureStatement_RdLn) isProcedureStatement_Stmt() {}

func (*ProcedureStatement_Ps) isProcedureStatement_Stmt() {}

type AssignStatement struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Variable *Expression `protobuf:"bytes,1,opt,name=variable,proto3" json:"variable,omitempty"`
	Value    *Expression `protobuf:"bytes,2,opt,name=value,proto3" json:"value,omitempty"`
}

func (x *AssignStatement) Reset() {
	*x = AssignStatement{}
	if protoimpl.UnsafeEnabled {
		mi := &file_program_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AssignStatement) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AssignStatement) ProtoMessage() {}

func (x *AssignStatement) ProtoReflect() protoreflect.Message {
	mi := &file_program_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AssignStatement.ProtoReflect.Descriptor instead.
func (*AssignStatement) Descriptor() ([]byte, []int) {
	return file_program_proto_rawDescGZIP(), []int{4}
}

func (x *AssignStatement) GetVariable() *Expression {
	if x != nil {
		return x.Variable
	}
	return nil
}

func (x *AssignStatement) GetValue() *Expression {
	if x != nil {
		return x.Value
	}
	return nil
}

type IfStatement struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Cond     *Expression `protobuf:"bytes,1,opt,name=cond,proto3" json:"cond,omitempty"`
	TruePath *Statement  `protobuf:"bytes,2,opt,name=truePath,proto3" json:"truePath,omitempty"`
	ElsePath *Statement  `protobuf:"bytes,3,opt,name=elsePath,proto3" json:"elsePath,omitempty"`
}

func (x *IfStatement) Reset() {
	*x = IfStatement{}
	if protoimpl.UnsafeEnabled {
		mi := &file_program_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IfStatement) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IfStatement) ProtoMessage() {}

func (x *IfStatement) ProtoReflect() protoreflect.Message {
	mi := &file_program_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IfStatement.ProtoReflect.Descriptor instead.
func (*IfStatement) Descriptor() ([]byte, []int) {
	return file_program_proto_rawDescGZIP(), []int{5}
}

func (x *IfStatement) GetCond() *Expression {
	if x != nil {
		return x.Cond
	}
	return nil
}

func (x *IfStatement) GetTruePath() *Statement {
	if x != nil {
		return x.TruePath
	}
	return nil
}

func (x *IfStatement) GetElsePath() *Statement {
	if x != nil {
		return x.ElsePath
	}
	return nil
}

type Statement struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Kind Statement_StmtKind `protobuf:"varint,1,opt,name=kind,proto3,enum=Pasc.Statement_StmtKind" json:"kind,omitempty"`
	// Types that are assignable to Stmt:
	//	*Statement_AssignStmt
	//	*Statement_ProcStmt
	//	*Statement_IfStmt
	Stmt isStatement_Stmt `protobuf_oneof:"stmt"`
}

func (x *Statement) Reset() {
	*x = Statement{}
	if protoimpl.UnsafeEnabled {
		mi := &file_program_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Statement) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Statement) ProtoMessage() {}

func (x *Statement) ProtoReflect() protoreflect.Message {
	mi := &file_program_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Statement.ProtoReflect.Descriptor instead.
func (*Statement) Descriptor() ([]byte, []int) {
	return file_program_proto_rawDescGZIP(), []int{6}
}

func (x *Statement) GetKind() Statement_StmtKind {
	if x != nil {
		return x.Kind
	}
	return Statement_if
}

func (m *Statement) GetStmt() isStatement_Stmt {
	if m != nil {
		return m.Stmt
	}
	return nil
}

func (x *Statement) GetAssignStmt() *AssignStatement {
	if x, ok := x.GetStmt().(*Statement_AssignStmt); ok {
		return x.AssignStmt
	}
	return nil
}

func (x *Statement) GetProcStmt() *ProcedureStatement {
	if x, ok := x.GetStmt().(*Statement_ProcStmt); ok {
		return x.ProcStmt
	}
	return nil
}

func (x *Statement) GetIfStmt() *IfStatement {
	if x, ok := x.GetStmt().(*Statement_IfStmt); ok {
		return x.IfStmt
	}
	return nil
}

type isStatement_Stmt interface {
	isStatement_Stmt()
}

type Statement_AssignStmt struct {
	AssignStmt *AssignStatement `protobuf:"bytes,2,opt,name=assignStmt,proto3,oneof"`
}

type Statement_ProcStmt struct {
	ProcStmt *ProcedureStatement `protobuf:"bytes,3,opt,name=procStmt,proto3,oneof"`
}

type Statement_IfStmt struct {
	IfStmt *IfStatement `protobuf:"bytes,4,opt,name=ifStmt,proto3,oneof"`
}

func (*Statement_AssignStmt) isStatement_Stmt() {}

func (*Statement_ProcStmt) isStatement_Stmt() {}

func (*Statement_IfStmt) isStatement_Stmt() {}

//////////////////////////////////
//  EXPRESSIONS
//////////////////////////////////
type Identifier struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Kind Identifier_IDKind `protobuf:"varint,1,opt,name=kind,proto3,enum=Pasc.Identifier_IDKind" json:"kind,omitempty"`
	// Types that are assignable to Value:
	//	*Identifier_Var
	//	*Identifier_Iv
	//	*Identifier_Fld
	Value isIdentifier_Value `protobuf_oneof:"value"`
}

func (x *Identifier) Reset() {
	*x = Identifier{}
	if protoimpl.UnsafeEnabled {
		mi := &file_program_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Identifier) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Identifier) ProtoMessage() {}

func (x *Identifier) ProtoReflect() protoreflect.Message {
	mi := &file_program_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Identifier.ProtoReflect.Descriptor instead.
func (*Identifier) Descriptor() ([]byte, []int) {
	return file_program_proto_rawDescGZIP(), []int{7}
}

func (x *Identifier) GetKind() Identifier_IDKind {
	if x != nil {
		return x.Kind
	}
	return Identifier_EntireVar
}

func (m *Identifier) GetValue() isIdentifier_Value {
	if m != nil {
		return m.Value
	}
	return nil
}

func (x *Identifier) GetVar() *Identifier_Variable {
	if x, ok := x.GetValue().(*Identifier_Var); ok {
		return x.Var
	}
	return nil
}

func (x *Identifier) GetIv() *Identifier_IndexedVariable {
	if x, ok := x.GetValue().(*Identifier_Iv); ok {
		return x.Iv
	}
	return nil
}

func (x *Identifier) GetFld() *Identifier_FieldDesignator {
	if x, ok := x.GetValue().(*Identifier_Fld); ok {
		return x.Fld
	}
	return nil
}

type isIdentifier_Value interface {
	isIdentifier_Value()
}

type Identifier_Var struct {
	Var *Identifier_Variable `protobuf:"bytes,2,opt,name=var,proto3,oneof"`
}

type Identifier_Iv struct {
	Iv *Identifier_IndexedVariable `protobuf:"bytes,3,opt,name=iv,proto3,oneof"`
}

type Identifier_Fld struct {
	Fld *Identifier_FieldDesignator `protobuf:"bytes,4,opt,name=fld,proto3,oneof"`
}

func (*Identifier_Var) isIdentifier_Value() {}

func (*Identifier_Iv) isIdentifier_Value() {}

func (*Identifier_Fld) isIdentifier_Value() {}

type Expression struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Kind Expression_ExprKind `protobuf:"varint,1,opt,name=kind,proto3,enum=Pasc.Expression_ExprKind" json:"kind,omitempty"`
	// Types that are assignable to Expr:
	//	*Expression_Id
	//	*Expression_Uint
	//	*Expression_Be
	//	*Expression_Wp
	Expr isExpression_Expr `protobuf_oneof:"expr"`
}

func (x *Expression) Reset() {
	*x = Expression{}
	if protoimpl.UnsafeEnabled {
		mi := &file_program_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Expression) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Expression) ProtoMessage() {}

func (x *Expression) ProtoReflect() protoreflect.Message {
	mi := &file_program_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Expression.ProtoReflect.Descriptor instead.
func (*Expression) Descriptor() ([]byte, []int) {
	return file_program_proto_rawDescGZIP(), []int{8}
}

func (x *Expression) GetKind() Expression_ExprKind {
	if x != nil {
		return x.Kind
	}
	return Expression_UInt
}

func (m *Expression) GetExpr() isExpression_Expr {
	if m != nil {
		return m.Expr
	}
	return nil
}

func (x *Expression) GetId() *Identifier {
	if x, ok := x.GetExpr().(*Expression_Id); ok {
		return x.Id
	}
	return nil
}

func (x *Expression) GetUint() *UIntLiteral {
	if x, ok := x.GetExpr().(*Expression_Uint); ok {
		return x.Uint
	}
	return nil
}

func (x *Expression) GetBe() *BinaryExpr {
	if x, ok := x.GetExpr().(*Expression_Be); ok {
		return x.Be
	}
	return nil
}

func (x *Expression) GetWp() *WriteParameter {
	if x, ok := x.GetExpr().(*Expression_Wp); ok {
		return x.Wp
	}
	return nil
}

type isExpression_Expr interface {
	isExpression_Expr()
}

type Expression_Id struct {
	Id *Identifier `protobuf:"bytes,2,opt,name=id,proto3,oneof"`
}

type Expression_Uint struct {
	Uint *UIntLiteral `protobuf:"bytes,3,opt,name=uint,proto3,oneof"`
}

type Expression_Be struct {
	Be *BinaryExpr `protobuf:"bytes,4,opt,name=be,proto3,oneof"`
}

type Expression_Wp struct {
	Wp *WriteParameter `protobuf:"bytes,5,opt,name=wp,proto3,oneof"`
}

func (*Expression_Id) isExpression_Expr() {}

func (*Expression_Uint) isExpression_Expr() {}

func (*Expression_Be) isExpression_Expr() {}

func (*Expression_Wp) isExpression_Expr() {}

type WriteParameter struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	E          *Expression `protobuf:"bytes,1,opt,name=e,proto3" json:"e,omitempty"`
	TotalWidth *Expression `protobuf:"bytes,2,opt,name=totalWidth,proto3" json:"totalWidth,omitempty"`
	FracDigits *Expression `protobuf:"bytes,3,opt,name=fracDigits,proto3" json:"fracDigits,omitempty"`
}

func (x *WriteParameter) Reset() {
	*x = WriteParameter{}
	if protoimpl.UnsafeEnabled {
		mi := &file_program_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WriteParameter) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WriteParameter) ProtoMessage() {}

func (x *WriteParameter) ProtoReflect() protoreflect.Message {
	mi := &file_program_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WriteParameter.ProtoReflect.Descriptor instead.
func (*WriteParameter) Descriptor() ([]byte, []int) {
	return file_program_proto_rawDescGZIP(), []int{9}
}

func (x *WriteParameter) GetE() *Expression {
	if x != nil {
		return x.E
	}
	return nil
}

func (x *WriteParameter) GetTotalWidth() *Expression {
	if x != nil {
		return x.TotalWidth
	}
	return nil
}

func (x *WriteParameter) GetFracDigits() *Expression {
	if x != nil {
		return x.FracDigits
	}
	return nil
}

type BinaryExpr struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Left  *Expression `protobuf:"bytes,1,opt,name=left,proto3" json:"left,omitempty"`
	Right *Expression `protobuf:"bytes,2,opt,name=right,proto3" json:"right,omitempty"`
	Op    *Operator   `protobuf:"bytes,3,opt,name=op,proto3" json:"op,omitempty"`
}

func (x *BinaryExpr) Reset() {
	*x = BinaryExpr{}
	if protoimpl.UnsafeEnabled {
		mi := &file_program_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BinaryExpr) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BinaryExpr) ProtoMessage() {}

func (x *BinaryExpr) ProtoReflect() protoreflect.Message {
	mi := &file_program_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BinaryExpr.ProtoReflect.Descriptor instead.
func (*BinaryExpr) Descriptor() ([]byte, []int) {
	return file_program_proto_rawDescGZIP(), []int{10}
}

func (x *BinaryExpr) GetLeft() *Expression {
	if x != nil {
		return x.Left
	}
	return nil
}

func (x *BinaryExpr) GetRight() *Expression {
	if x != nil {
		return x.Right
	}
	return nil
}

func (x *BinaryExpr) GetOp() *Operator {
	if x != nil {
		return x.Op
	}
	return nil
}

type UIntLiteral struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Value uint32 `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty"`
}

func (x *UIntLiteral) Reset() {
	*x = UIntLiteral{}
	if protoimpl.UnsafeEnabled {
		mi := &file_program_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UIntLiteral) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UIntLiteral) ProtoMessage() {}

func (x *UIntLiteral) ProtoReflect() protoreflect.Message {
	mi := &file_program_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UIntLiteral.ProtoReflect.Descriptor instead.
func (*UIntLiteral) Descriptor() ([]byte, []int) {
	return file_program_proto_rawDescGZIP(), []int{11}
}

func (x *UIntLiteral) GetValue() uint32 {
	if x != nil {
		return x.Value
	}
	return 0
}

type Type struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Tk TypeKind `protobuf:"varint,1,opt,name=tk,proto3,enum=Pasc.TypeKind" json:"tk,omitempty"`
	// Types that are assignable to Type:
	//	*Type_Int
	//	*Type_Real
	//	*Type_Bool
	//	*Type_Char
	Type isType_Type `protobuf_oneof:"type"`
}

func (x *Type) Reset() {
	*x = Type{}
	if protoimpl.UnsafeEnabled {
		mi := &file_program_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Type) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Type) ProtoMessage() {}

func (x *Type) ProtoReflect() protoreflect.Message {
	mi := &file_program_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Type.ProtoReflect.Descriptor instead.
func (*Type) Descriptor() ([]byte, []int) {
	return file_program_proto_rawDescGZIP(), []int{12}
}

func (x *Type) GetTk() TypeKind {
	if x != nil {
		return x.Tk
	}
	return TypeKind_INTEGER
}

func (m *Type) GetType() isType_Type {
	if m != nil {
		return m.Type
	}
	return nil
}

func (x *Type) GetInt() *Integer {
	if x, ok := x.GetType().(*Type_Int); ok {
		return x.Int
	}
	return nil
}

func (x *Type) GetReal() *Real {
	if x, ok := x.GetType().(*Type_Real); ok {
		return x.Real
	}
	return nil
}

func (x *Type) GetBool() *Boolean {
	if x, ok := x.GetType().(*Type_Bool); ok {
		return x.Bool
	}
	return nil
}

func (x *Type) GetChar() *Char {
	if x, ok := x.GetType().(*Type_Char); ok {
		return x.Char
	}
	return nil
}

type isType_Type interface {
	isType_Type()
}

type Type_Int struct {
	Int *Integer `protobuf:"bytes,2,opt,name=int,proto3,oneof"`
}

type Type_Real struct {
	Real *Real `protobuf:"bytes,3,opt,name=real,proto3,oneof"`
}

type Type_Bool struct {
	Bool *Boolean `protobuf:"bytes,4,opt,name=bool,proto3,oneof"`
}

type Type_Char struct {
	Char *Char `protobuf:"bytes,5,opt,name=char,proto3,oneof"`
}

func (*Type_Int) isType_Type() {}

func (*Type_Real) isType_Type() {}

func (*Type_Bool) isType_Type() {}

func (*Type_Char) isType_Type() {}

type Integer struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *Integer) Reset() {
	*x = Integer{}
	if protoimpl.UnsafeEnabled {
		mi := &file_program_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Integer) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Integer) ProtoMessage() {}

func (x *Integer) ProtoReflect() protoreflect.Message {
	mi := &file_program_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Integer.ProtoReflect.Descriptor instead.
func (*Integer) Descriptor() ([]byte, []int) {
	return file_program_proto_rawDescGZIP(), []int{13}
}

func (x *Integer) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type Boolean struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *Boolean) Reset() {
	*x = Boolean{}
	if protoimpl.UnsafeEnabled {
		mi := &file_program_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Boolean) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Boolean) ProtoMessage() {}

func (x *Boolean) ProtoReflect() protoreflect.Message {
	mi := &file_program_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Boolean.ProtoReflect.Descriptor instead.
func (*Boolean) Descriptor() ([]byte, []int) {
	return file_program_proto_rawDescGZIP(), []int{14}
}

func (x *Boolean) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type Real struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *Real) Reset() {
	*x = Real{}
	if protoimpl.UnsafeEnabled {
		mi := &file_program_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Real) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Real) ProtoMessage() {}

func (x *Real) ProtoReflect() protoreflect.Message {
	mi := &file_program_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Real.ProtoReflect.Descriptor instead.
func (*Real) Descriptor() ([]byte, []int) {
	return file_program_proto_rawDescGZIP(), []int{15}
}

func (x *Real) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type Char struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *Char) Reset() {
	*x = Char{}
	if protoimpl.UnsafeEnabled {
		mi := &file_program_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Char) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Char) ProtoMessage() {}

func (x *Char) ProtoReflect() protoreflect.Message {
	mi := &file_program_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Char.ProtoReflect.Descriptor instead.
func (*Char) Descriptor() ([]byte, []int) {
	return file_program_proto_rawDescGZIP(), []int{16}
}

func (x *Char) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

//////////////////////////////////
//  OPERATORS
//////////////////////////////////
type Operator struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Op Operator_OpKind `protobuf:"varint,1,opt,name=op,proto3,enum=Pasc.Operator_OpKind" json:"op,omitempty"`
}

func (x *Operator) Reset() {
	*x = Operator{}
	if protoimpl.UnsafeEnabled {
		mi := &file_program_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Operator) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Operator) ProtoMessage() {}

func (x *Operator) ProtoReflect() protoreflect.Message {
	mi := &file_program_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Operator.ProtoReflect.Descriptor instead.
func (*Operator) Descriptor() ([]byte, []int) {
	return file_program_proto_rawDescGZIP(), []int{17}
}

func (x *Operator) GetOp() Operator_OpKind {
	if x != nil {
		return x.Op
	}
	return Operator_Plus
}

type ProcedureStatement_WriteLn struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name   string        `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	File   *Expression   `protobuf:"bytes,2,opt,name=file,proto3" json:"file,omitempty"`
	Params []*Expression `protobuf:"bytes,3,rep,name=params,proto3" json:"params,omitempty"`
}

func (x *ProcedureStatement_WriteLn) Reset() {
	*x = ProcedureStatement_WriteLn{}
	if protoimpl.UnsafeEnabled {
		mi := &file_program_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProcedureStatement_WriteLn) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProcedureStatement_WriteLn) ProtoMessage() {}

func (x *ProcedureStatement_WriteLn) ProtoReflect() protoreflect.Message {
	mi := &file_program_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProcedureStatement_WriteLn.ProtoReflect.Descriptor instead.
func (*ProcedureStatement_WriteLn) Descriptor() ([]byte, []int) {
	return file_program_proto_rawDescGZIP(), []int{3, 0}
}

func (x *ProcedureStatement_WriteLn) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ProcedureStatement_WriteLn) GetFile() *Expression {
	if x != nil {
		return x.File
	}
	return nil
}

func (x *ProcedureStatement_WriteLn) GetParams() []*Expression {
	if x != nil {
		return x.Params
	}
	return nil
}

type ProcedureStatement_Write struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ProcedureStatement_Write) Reset() {
	*x = ProcedureStatement_Write{}
	if protoimpl.UnsafeEnabled {
		mi := &file_program_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProcedureStatement_Write) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProcedureStatement_Write) ProtoMessage() {}

func (x *ProcedureStatement_Write) ProtoReflect() protoreflect.Message {
	mi := &file_program_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProcedureStatement_Write.ProtoReflect.Descriptor instead.
func (*ProcedureStatement_Write) Descriptor() ([]byte, []int) {
	return file_program_proto_rawDescGZIP(), []int{3, 1}
}

type ProcedureStatement_Read struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ProcedureStatement_Read) Reset() {
	*x = ProcedureStatement_Read{}
	if protoimpl.UnsafeEnabled {
		mi := &file_program_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProcedureStatement_Read) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProcedureStatement_Read) ProtoMessage() {}

func (x *ProcedureStatement_Read) ProtoReflect() protoreflect.Message {
	mi := &file_program_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProcedureStatement_Read.ProtoReflect.Descriptor instead.
func (*ProcedureStatement_Read) Descriptor() ([]byte, []int) {
	return file_program_proto_rawDescGZIP(), []int{3, 2}
}

type ProcedureStatement_ReadLn struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ProcedureStatement_ReadLn) Reset() {
	*x = ProcedureStatement_ReadLn{}
	if protoimpl.UnsafeEnabled {
		mi := &file_program_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProcedureStatement_ReadLn) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProcedureStatement_ReadLn) ProtoMessage() {}

func (x *ProcedureStatement_ReadLn) ProtoReflect() protoreflect.Message {
	mi := &file_program_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProcedureStatement_ReadLn.ProtoReflect.Descriptor instead.
func (*ProcedureStatement_ReadLn) Descriptor() ([]byte, []int) {
	return file_program_proto_rawDescGZIP(), []int{3, 3}
}

type ProcedureStatement_ProcStmt struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name   *Expression   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Params []*Expression `protobuf:"bytes,2,rep,name=params,proto3" json:"params,omitempty"`
}

func (x *ProcedureStatement_ProcStmt) Reset() {
	*x = ProcedureStatement_ProcStmt{}
	if protoimpl.UnsafeEnabled {
		mi := &file_program_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProcedureStatement_ProcStmt) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProcedureStatement_ProcStmt) ProtoMessage() {}

func (x *ProcedureStatement_ProcStmt) ProtoReflect() protoreflect.Message {
	mi := &file_program_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProcedureStatement_ProcStmt.ProtoReflect.Descriptor instead.
func (*ProcedureStatement_ProcStmt) Descriptor() ([]byte, []int) {
	return file_program_proto_rawDescGZIP(), []int{3, 4}
}

func (x *ProcedureStatement_ProcStmt) GetName() *Expression {
	if x != nil {
		return x.Name
	}
	return nil
}

func (x *ProcedureStatement_ProcStmt) GetParams() []*Expression {
	if x != nil {
		return x.Params
	}
	return nil
}

type Identifier_Variable struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *Identifier_Variable) Reset() {
	*x = Identifier_Variable{}
	if protoimpl.UnsafeEnabled {
		mi := &file_program_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Identifier_Variable) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Identifier_Variable) ProtoMessage() {}

func (x *Identifier_Variable) ProtoReflect() protoreflect.Message {
	mi := &file_program_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Identifier_Variable.ProtoReflect.Descriptor instead.
func (*Identifier_Variable) Descriptor() ([]byte, []int) {
	return file_program_proto_rawDescGZIP(), []int{7, 0}
}

func (x *Identifier_Variable) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type Identifier_IndexedVariable struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *Identifier_IndexedVariable) Reset() {
	*x = Identifier_IndexedVariable{}
	if protoimpl.UnsafeEnabled {
		mi := &file_program_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Identifier_IndexedVariable) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Identifier_IndexedVariable) ProtoMessage() {}

func (x *Identifier_IndexedVariable) ProtoReflect() protoreflect.Message {
	mi := &file_program_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Identifier_IndexedVariable.ProtoReflect.Descriptor instead.
func (*Identifier_IndexedVariable) Descriptor() ([]byte, []int) {
	return file_program_proto_rawDescGZIP(), []int{7, 1}
}

type Identifier_FieldDesignator struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *Identifier_FieldDesignator) Reset() {
	*x = Identifier_FieldDesignator{}
	if protoimpl.UnsafeEnabled {
		mi := &file_program_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Identifier_FieldDesignator) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Identifier_FieldDesignator) ProtoMessage() {}

func (x *Identifier_FieldDesignator) ProtoReflect() protoreflect.Message {
	mi := &file_program_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Identifier_FieldDesignator.ProtoReflect.Descriptor instead.
func (*Identifier_FieldDesignator) Descriptor() ([]byte, []int) {
	return file_program_proto_rawDescGZIP(), []int{7, 2}
}

var File_program_proto protoreflect.FileDescriptor

var file_program_proto_rawDesc = []byte{
	0x0a, 0x0d, 0x70, 0x72, 0x6f, 0x67, 0x72, 0x61, 0x6d, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12,
	0x04, 0x50, 0x61, 0x73, 0x63, 0x22, 0x7d, 0x0a, 0x07, 0x50, 0x72, 0x6f, 0x67, 0x72, 0x61, 0x6d,
	0x12, 0x23, 0x0a, 0x04, 0x6b, 0x69, 0x6e, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0f,
	0x2e, 0x50, 0x61, 0x73, 0x63, 0x2e, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x4b, 0x69, 0x6e, 0x64, 0x52,
	0x04, 0x6b, 0x69, 0x6e, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x70, 0x61, 0x72,
	0x61, 0x6d, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x09, 0x52, 0x06, 0x70, 0x61, 0x72, 0x61, 0x6d,
	0x73, 0x12, 0x21, 0x0a, 0x05, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x0b, 0x2e, 0x50, 0x61, 0x73, 0x63, 0x2e, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x52, 0x05, 0x62,
	0x6c, 0x6f, 0x63, 0x6b, 0x22, 0x62, 0x0a, 0x05, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x12, 0x32, 0x0a,
	0x09, 0x76, 0x61, 0x72, 0x44, 0x65, 0x63, 0x6c, 0x72, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x14, 0x2e, 0x50, 0x61, 0x73, 0x63, 0x2e, 0x56, 0x61, 0x72, 0x44, 0x65, 0x63, 0x6c, 0x61,
	0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x09, 0x76, 0x61, 0x72, 0x44, 0x65, 0x63, 0x6c, 0x72,
	0x73, 0x12, 0x25, 0x0a, 0x05, 0x73, 0x74, 0x6d, 0x74, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x0f, 0x2e, 0x50, 0x61, 0x73, 0x63, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x65, 0x6d, 0x65, 0x6e,
	0x74, 0x52, 0x05, 0x73, 0x74, 0x6d, 0x74, 0x73, 0x22, 0x56, 0x0a, 0x0e, 0x56, 0x61, 0x72, 0x44,
	0x65, 0x63, 0x6c, 0x61, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x24, 0x0a, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x50, 0x61, 0x73, 0x63, 0x2e,
	0x45, 0x78, 0x70, 0x72, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x12, 0x1e, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0a,
	0x2e, 0x50, 0x61, 0x73, 0x63, 0x2e, 0x54, 0x79, 0x70, 0x65, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65,
	0x22, 0x84, 0x05, 0x0a, 0x12, 0x50, 0x72, 0x6f, 0x63, 0x65, 0x64, 0x75, 0x72, 0x65, 0x53, 0x74,
	0x61, 0x74, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x33, 0x0a, 0x04, 0x6b, 0x69, 0x6e, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1f, 0x2e, 0x50, 0x61, 0x73, 0x63, 0x2e, 0x50, 0x72, 0x6f,
	0x63, 0x65, 0x64, 0x75, 0x72, 0x65, 0x53, 0x74, 0x61, 0x74, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x2e,
	0x50, 0x53, 0x4b, 0x69, 0x6e, 0x64, 0x52, 0x04, 0x6b, 0x69, 0x6e, 0x64, 0x12, 0x32, 0x0a, 0x03,
	0x77, 0x72, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x50, 0x61, 0x73, 0x63,
	0x2e, 0x50, 0x72, 0x6f, 0x63, 0x65, 0x64, 0x75, 0x72, 0x65, 0x53, 0x74, 0x61, 0x74, 0x65, 0x6d,
	0x65, 0x6e, 0x74, 0x2e, 0x57, 0x72, 0x69, 0x74, 0x65, 0x48, 0x00, 0x52, 0x03, 0x77, 0x72, 0x74,
	0x12, 0x38, 0x0a, 0x05, 0x77, 0x72, 0x74, 0x4c, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x20, 0x2e, 0x50, 0x61, 0x73, 0x63, 0x2e, 0x50, 0x72, 0x6f, 0x63, 0x65, 0x64, 0x75, 0x72, 0x65,
	0x53, 0x74, 0x61, 0x74, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x57, 0x72, 0x69, 0x74, 0x65, 0x4c,
	0x6e, 0x48, 0x00, 0x52, 0x05, 0x77, 0x72, 0x74, 0x4c, 0x6e, 0x12, 0x2f, 0x0a, 0x02, 0x72, 0x64,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x50, 0x61, 0x73, 0x63, 0x2e, 0x50, 0x72,
	0x6f, 0x63, 0x65, 0x64, 0x75, 0x72, 0x65, 0x53, 0x74, 0x61, 0x74, 0x65, 0x6d, 0x65, 0x6e, 0x74,
	0x2e, 0x52, 0x65, 0x61, 0x64, 0x48, 0x00, 0x52, 0x02, 0x72, 0x64, 0x12, 0x35, 0x0a, 0x04, 0x72,
	0x64, 0x4c, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x50, 0x61, 0x73, 0x63,
	0x2e, 0x50, 0x72, 0x6f, 0x63, 0x65, 0x64, 0x75, 0x72, 0x65, 0x53, 0x74, 0x61, 0x74, 0x65, 0x6d,
	0x65, 0x6e, 0x74, 0x2e, 0x52, 0x65, 0x61, 0x64, 0x4c, 0x6e, 0x48, 0x00, 0x52, 0x04, 0x72, 0x64,
	0x4c, 0x6e, 0x12, 0x33, 0x0a, 0x02, 0x70, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x21,
	0x2e, 0x50, 0x61, 0x73, 0x63, 0x2e, 0x50, 0x72, 0x6f, 0x63, 0x65, 0x64, 0x75, 0x72, 0x65, 0x53,
	0x74, 0x61, 0x74, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x50, 0x72, 0x6f, 0x63, 0x53, 0x74, 0x6d,
	0x74, 0x48, 0x00, 0x52, 0x02, 0x70, 0x73, 0x1a, 0x6d, 0x0a, 0x07, 0x57, 0x72, 0x69, 0x74, 0x65,
	0x4c, 0x6e, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x24, 0x0a, 0x04, 0x66, 0x69, 0x6c, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x50, 0x61, 0x73, 0x63, 0x2e, 0x45, 0x78, 0x70, 0x72,
	0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x04, 0x66, 0x69, 0x6c, 0x65, 0x12, 0x28, 0x0a, 0x06,
	0x70, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x50,
	0x61, 0x73, 0x63, 0x2e, 0x45, 0x78, 0x70, 0x72, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x06,
	0x70, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x1a, 0x07, 0x0a, 0x05, 0x57, 0x72, 0x69, 0x74, 0x65, 0x1a,
	0x06, 0x0a, 0x04, 0x52, 0x65, 0x61, 0x64, 0x1a, 0x08, 0x0a, 0x06, 0x52, 0x65, 0x61, 0x64, 0x4c,
	0x6e, 0x1a, 0x5a, 0x0a, 0x08, 0x50, 0x72, 0x6f, 0x63, 0x53, 0x74, 0x6d, 0x74, 0x12, 0x24, 0x0a,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x50, 0x61,
	0x73, 0x63, 0x2e, 0x45, 0x78, 0x70, 0x72, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x12, 0x28, 0x0a, 0x06, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x18, 0x02, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x50, 0x61, 0x73, 0x63, 0x2e, 0x45, 0x78, 0x70, 0x72, 0x65,
	0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x06, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x22, 0x40, 0x0a,
	0x06, 0x50, 0x53, 0x4b, 0x69, 0x6e, 0x64, 0x12, 0x07, 0x0a, 0x03, 0x77, 0x6c, 0x6e, 0x10, 0x00,
	0x12, 0x09, 0x0a, 0x05, 0x77, 0x72, 0x69, 0x74, 0x65, 0x10, 0x01, 0x12, 0x08, 0x0a, 0x04, 0x72,
	0x65, 0x61, 0x64, 0x10, 0x02, 0x12, 0x0a, 0x0a, 0x06, 0x72, 0x65, 0x61, 0x64, 0x4c, 0x6e, 0x10,
	0x03, 0x12, 0x0c, 0x0a, 0x08, 0x70, 0x72, 0x6f, 0x63, 0x53, 0x74, 0x6d, 0x74, 0x10, 0x04, 0x42,
	0x06, 0x0a, 0x04, 0x73, 0x74, 0x6d, 0x74, 0x22, 0x67, 0x0a, 0x0f, 0x41, 0x73, 0x73, 0x69, 0x67,
	0x6e, 0x53, 0x74, 0x61, 0x74, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x2c, 0x0a, 0x08, 0x76, 0x61,
	0x72, 0x69, 0x61, 0x62, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x50,
	0x61, 0x73, 0x63, 0x2e, 0x45, 0x78, 0x70, 0x72, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x08,
	0x76, 0x61, 0x72, 0x69, 0x61, 0x62, 0x6c, 0x65, 0x12, 0x26, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x50, 0x61, 0x73, 0x63, 0x2e, 0x45,
	0x78, 0x70, 0x72, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x22, 0x8d, 0x01, 0x0a, 0x0b, 0x49, 0x66, 0x53, 0x74, 0x61, 0x74, 0x65, 0x6d, 0x65, 0x6e, 0x74,
	0x12, 0x24, 0x0a, 0x04, 0x63, 0x6f, 0x6e, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10,
	0x2e, 0x50, 0x61, 0x73, 0x63, 0x2e, 0x45, 0x78, 0x70, 0x72, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e,
	0x52, 0x04, 0x63, 0x6f, 0x6e, 0x64, 0x12, 0x2b, 0x0a, 0x08, 0x74, 0x72, 0x75, 0x65, 0x50, 0x61,
	0x74, 0x68, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x50, 0x61, 0x73, 0x63, 0x2e,
	0x53, 0x74, 0x61, 0x74, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x08, 0x74, 0x72, 0x75, 0x65, 0x50,
	0x61, 0x74, 0x68, 0x12, 0x2b, 0x0a, 0x08, 0x65, 0x6c, 0x73, 0x65, 0x50, 0x61, 0x74, 0x68, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x50, 0x61, 0x73, 0x63, 0x2e, 0x53, 0x74, 0x61,
	0x74, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x08, 0x65, 0x6c, 0x73, 0x65, 0x50, 0x61, 0x74, 0x68,
	0x22, 0x8e, 0x02, 0x0a, 0x09, 0x53, 0x74, 0x61, 0x74, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x2c,
	0x0a, 0x04, 0x6b, 0x69, 0x6e, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x18, 0x2e, 0x50,
	0x61, 0x73, 0x63, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x53, 0x74,
	0x6d, 0x74, 0x4b, 0x69, 0x6e, 0x64, 0x52, 0x04, 0x6b, 0x69, 0x6e, 0x64, 0x12, 0x37, 0x0a, 0x0a,
	0x61, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x53, 0x74, 0x6d, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x15, 0x2e, 0x50, 0x61, 0x73, 0x63, 0x2e, 0x41, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x53, 0x74,
	0x61, 0x74, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x48, 0x00, 0x52, 0x0a, 0x61, 0x73, 0x73, 0x69, 0x67,
	0x6e, 0x53, 0x74, 0x6d, 0x74, 0x12, 0x36, 0x0a, 0x08, 0x70, 0x72, 0x6f, 0x63, 0x53, 0x74, 0x6d,
	0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x50, 0x61, 0x73, 0x63, 0x2e, 0x50,
	0x72, 0x6f, 0x63, 0x65, 0x64, 0x75, 0x72, 0x65, 0x53, 0x74, 0x61, 0x74, 0x65, 0x6d, 0x65, 0x6e,
	0x74, 0x48, 0x00, 0x52, 0x08, 0x70, 0x72, 0x6f, 0x63, 0x53, 0x74, 0x6d, 0x74, 0x12, 0x2b, 0x0a,
	0x06, 0x69, 0x66, 0x53, 0x74, 0x6d, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e,
	0x50, 0x61, 0x73, 0x63, 0x2e, 0x49, 0x66, 0x53, 0x74, 0x61, 0x74, 0x65, 0x6d, 0x65, 0x6e, 0x74,
	0x48, 0x00, 0x52, 0x06, 0x69, 0x66, 0x53, 0x74, 0x6d, 0x74, 0x22, 0x2d, 0x0a, 0x08, 0x53, 0x74,
	0x6d, 0x74, 0x4b, 0x69, 0x6e, 0x64, 0x12, 0x06, 0x0a, 0x02, 0x69, 0x66, 0x10, 0x00, 0x12, 0x0a,
	0x0a, 0x06, 0x61, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x10, 0x01, 0x12, 0x0d, 0x0a, 0x09, 0x70, 0x72,
	0x6f, 0x63, 0x65, 0x64, 0x75, 0x72, 0x65, 0x10, 0x02, 0x42, 0x06, 0x0a, 0x04, 0x73, 0x74, 0x6d,
	0x74, 0x22, 0xd1, 0x02, 0x0a, 0x0a, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x69, 0x65, 0x72,
	0x12, 0x2b, 0x0a, 0x04, 0x6b, 0x69, 0x6e, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x17,
	0x2e, 0x50, 0x61, 0x73, 0x63, 0x2e, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x69, 0x65, 0x72,
	0x2e, 0x49, 0x44, 0x4b, 0x69, 0x6e, 0x64, 0x52, 0x04, 0x6b, 0x69, 0x6e, 0x64, 0x12, 0x2d, 0x0a,
	0x03, 0x76, 0x61, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x50, 0x61, 0x73,
	0x63, 0x2e, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x69, 0x65, 0x72, 0x2e, 0x56, 0x61, 0x72,
	0x69, 0x61, 0x62, 0x6c, 0x65, 0x48, 0x00, 0x52, 0x03, 0x76, 0x61, 0x72, 0x12, 0x32, 0x0a, 0x02,
	0x69, 0x76, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x50, 0x61, 0x73, 0x63, 0x2e,
	0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x69, 0x65, 0x72, 0x2e, 0x49, 0x6e, 0x64, 0x65, 0x78,
	0x65, 0x64, 0x56, 0x61, 0x72, 0x69, 0x61, 0x62, 0x6c, 0x65, 0x48, 0x00, 0x52, 0x02, 0x69, 0x76,
	0x12, 0x34, 0x0a, 0x03, 0x66, 0x6c, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e,
	0x50, 0x61, 0x73, 0x63, 0x2e, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x69, 0x65, 0x72, 0x2e,
	0x46, 0x69, 0x65, 0x6c, 0x64, 0x44, 0x65, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x6f, 0x72, 0x48,
	0x00, 0x52, 0x03, 0x66, 0x6c, 0x64, 0x1a, 0x1e, 0x0a, 0x08, 0x56, 0x61, 0x72, 0x69, 0x61, 0x62,
	0x6c, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x1a, 0x11, 0x0a, 0x0f, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x65,
	0x64, 0x56, 0x61, 0x72, 0x69, 0x61, 0x62, 0x6c, 0x65, 0x1a, 0x11, 0x0a, 0x0f, 0x46, 0x69, 0x65,
	0x6c, 0x64, 0x44, 0x65, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x6f, 0x72, 0x22, 0x2e, 0x0a, 0x06,
	0x49, 0x44, 0x4b, 0x69, 0x6e, 0x64, 0x12, 0x0d, 0x0a, 0x09, 0x45, 0x6e, 0x74, 0x69, 0x72, 0x65,
	0x56, 0x61, 0x72, 0x10, 0x00, 0x12, 0x0a, 0x0a, 0x06, 0x49, 0x64, 0x78, 0x56, 0x61, 0x72, 0x10,
	0x01, 0x12, 0x09, 0x0a, 0x05, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x10, 0x02, 0x42, 0x07, 0x0a, 0x05,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0xa4, 0x02, 0x0a, 0x0a, 0x45, 0x78, 0x70, 0x72, 0x65, 0x73,
	0x73, 0x69, 0x6f, 0x6e, 0x12, 0x2d, 0x0a, 0x04, 0x6b, 0x69, 0x6e, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0e, 0x32, 0x19, 0x2e, 0x50, 0x61, 0x73, 0x63, 0x2e, 0x45, 0x78, 0x70, 0x72, 0x65, 0x73,
	0x73, 0x69, 0x6f, 0x6e, 0x2e, 0x45, 0x78, 0x70, 0x72, 0x4b, 0x69, 0x6e, 0x64, 0x52, 0x04, 0x6b,
	0x69, 0x6e, 0x64, 0x12, 0x22, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x10, 0x2e, 0x50, 0x61, 0x73, 0x63, 0x2e, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x69, 0x65,
	0x72, 0x48, 0x00, 0x52, 0x02, 0x69, 0x64, 0x12, 0x27, 0x0a, 0x04, 0x75, 0x69, 0x6e, 0x74, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x50, 0x61, 0x73, 0x63, 0x2e, 0x55, 0x49, 0x6e,
	0x74, 0x4c, 0x69, 0x74, 0x65, 0x72, 0x61, 0x6c, 0x48, 0x00, 0x52, 0x04, 0x75, 0x69, 0x6e, 0x74,
	0x12, 0x22, 0x0a, 0x02, 0x62, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x50,
	0x61, 0x73, 0x63, 0x2e, 0x42, 0x69, 0x6e, 0x61, 0x72, 0x79, 0x45, 0x78, 0x70, 0x72, 0x48, 0x00,
	0x52, 0x02, 0x62, 0x65, 0x12, 0x26, 0x0a, 0x02, 0x77, 0x70, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x14, 0x2e, 0x50, 0x61, 0x73, 0x63, 0x2e, 0x57, 0x72, 0x69, 0x74, 0x65, 0x50, 0x61, 0x72,
	0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x48, 0x00, 0x52, 0x02, 0x77, 0x70, 0x22, 0x46, 0x0a, 0x08,
	0x45, 0x78, 0x70, 0x72, 0x4b, 0x69, 0x6e, 0x64, 0x12, 0x08, 0x0a, 0x04, 0x55, 0x49, 0x6e, 0x74,
	0x10, 0x00, 0x12, 0x08, 0x0a, 0x04, 0x42, 0x6f, 0x6f, 0x6c, 0x10, 0x01, 0x12, 0x09, 0x0a, 0x05,
	0x49, 0x64, 0x65, 0x6e, 0x74, 0x10, 0x02, 0x12, 0x0b, 0x0a, 0x07, 0x42, 0x69, 0x6e, 0x45, 0x78,
	0x70, 0x72, 0x10, 0x03, 0x12, 0x0e, 0x0a, 0x0a, 0x57, 0x72, 0x69, 0x74, 0x65, 0x50, 0x61, 0x72,
	0x61, 0x6d, 0x10, 0x04, 0x42, 0x06, 0x0a, 0x04, 0x65, 0x78, 0x70, 0x72, 0x22, 0x94, 0x01, 0x0a,
	0x0e, 0x57, 0x72, 0x69, 0x74, 0x65, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x12,
	0x1e, 0x0a, 0x01, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x50, 0x61, 0x73,
	0x63, 0x2e, 0x45, 0x78, 0x70, 0x72, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x01, 0x65, 0x12,
	0x30, 0x0a, 0x0a, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x57, 0x69, 0x64, 0x74, 0x68, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x50, 0x61, 0x73, 0x63, 0x2e, 0x45, 0x78, 0x70, 0x72, 0x65,
	0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x0a, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x57, 0x69, 0x64, 0x74,
	0x68, 0x12, 0x30, 0x0a, 0x0a, 0x66, 0x72, 0x61, 0x63, 0x44, 0x69, 0x67, 0x69, 0x74, 0x73, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x50, 0x61, 0x73, 0x63, 0x2e, 0x45, 0x78, 0x70,
	0x72, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x0a, 0x66, 0x72, 0x61, 0x63, 0x44, 0x69, 0x67,
	0x69, 0x74, 0x73, 0x22, 0x7a, 0x0a, 0x0a, 0x42, 0x69, 0x6e, 0x61, 0x72, 0x79, 0x45, 0x78, 0x70,
	0x72, 0x12, 0x24, 0x0a, 0x04, 0x6c, 0x65, 0x66, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x10, 0x2e, 0x50, 0x61, 0x73, 0x63, 0x2e, 0x45, 0x78, 0x70, 0x72, 0x65, 0x73, 0x73, 0x69, 0x6f,
	0x6e, 0x52, 0x04, 0x6c, 0x65, 0x66, 0x74, 0x12, 0x26, 0x0a, 0x05, 0x72, 0x69, 0x67, 0x68, 0x74,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x50, 0x61, 0x73, 0x63, 0x2e, 0x45, 0x78,
	0x70, 0x72, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x05, 0x72, 0x69, 0x67, 0x68, 0x74, 0x12,
	0x1e, 0x0a, 0x02, 0x6f, 0x70, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x50, 0x61,
	0x73, 0x63, 0x2e, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x52, 0x02, 0x6f, 0x70, 0x22,
	0x23, 0x0a, 0x0b, 0x55, 0x49, 0x6e, 0x74, 0x4c, 0x69, 0x74, 0x65, 0x72, 0x61, 0x6c, 0x12, 0x14,
	0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x22, 0xba, 0x01, 0x0a, 0x04, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1e, 0x0a,
	0x02, 0x74, 0x6b, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0e, 0x2e, 0x50, 0x61, 0x73, 0x63,
	0x2e, 0x54, 0x79, 0x70, 0x65, 0x4b, 0x69, 0x6e, 0x64, 0x52, 0x02, 0x74, 0x6b, 0x12, 0x21, 0x0a,
	0x03, 0x69, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x50, 0x61, 0x73,
	0x63, 0x2e, 0x49, 0x6e, 0x74, 0x65, 0x67, 0x65, 0x72, 0x48, 0x00, 0x52, 0x03, 0x69, 0x6e, 0x74,
	0x12, 0x20, 0x0a, 0x04, 0x72, 0x65, 0x61, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0a,
	0x2e, 0x50, 0x61, 0x73, 0x63, 0x2e, 0x52, 0x65, 0x61, 0x6c, 0x48, 0x00, 0x52, 0x04, 0x72, 0x65,
	0x61, 0x6c, 0x12, 0x23, 0x0a, 0x04, 0x62, 0x6f, 0x6f, 0x6c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x0d, 0x2e, 0x50, 0x61, 0x73, 0x63, 0x2e, 0x42, 0x6f, 0x6f, 0x6c, 0x65, 0x61, 0x6e, 0x48,
	0x00, 0x52, 0x04, 0x62, 0x6f, 0x6f, 0x6c, 0x12, 0x20, 0x0a, 0x04, 0x63, 0x68, 0x61, 0x72, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x50, 0x61, 0x73, 0x63, 0x2e, 0x43, 0x68, 0x61,
	0x72, 0x48, 0x00, 0x52, 0x04, 0x63, 0x68, 0x61, 0x72, 0x42, 0x06, 0x0a, 0x04, 0x74, 0x79, 0x70,
	0x65, 0x22, 0x1d, 0x0a, 0x07, 0x49, 0x6e, 0x74, 0x65, 0x67, 0x65, 0x72, 0x12, 0x12, 0x0a, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x22, 0x1d, 0x0a, 0x07, 0x42, 0x6f, 0x6f, 0x6c, 0x65, 0x61, 0x6e, 0x12, 0x12, 0x0a, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x22,
	0x1a, 0x0a, 0x04, 0x52, 0x65, 0x61, 0x6c, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0x1a, 0x0a, 0x04, 0x43,
	0x68, 0x61, 0x72, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0xa4, 0x01, 0x0a, 0x08, 0x4f, 0x70, 0x65, 0x72,
	0x61, 0x74, 0x6f, 0x72, 0x12, 0x25, 0x0a, 0x02, 0x6f, 0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e,
	0x32, 0x15, 0x2e, 0x50, 0x61, 0x73, 0x63, 0x2e, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72,
	0x2e, 0x4f, 0x70, 0x4b, 0x69, 0x6e, 0x64, 0x52, 0x02, 0x6f, 0x70, 0x22, 0x71, 0x0a, 0x06, 0x4f,
	0x70, 0x4b, 0x69, 0x6e, 0x64, 0x12, 0x08, 0x0a, 0x04, 0x50, 0x6c, 0x75, 0x73, 0x10, 0x00, 0x12,
	0x09, 0x0a, 0x05, 0x4d, 0x69, 0x6e, 0x75, 0x73, 0x10, 0x01, 0x12, 0x07, 0x0a, 0x03, 0x44, 0x69,
	0x76, 0x10, 0x02, 0x12, 0x07, 0x0a, 0x03, 0x53, 0x75, 0x62, 0x10, 0x03, 0x12, 0x07, 0x0a, 0x03,
	0x4d, 0x6f, 0x64, 0x10, 0x04, 0x12, 0x07, 0x0a, 0x03, 0x41, 0x6e, 0x64, 0x10, 0x05, 0x12, 0x06,
	0x0a, 0x02, 0x4f, 0x72, 0x10, 0x06, 0x12, 0x06, 0x0a, 0x02, 0x49, 0x6e, 0x10, 0x07, 0x12, 0x09,
	0x0a, 0x05, 0x45, 0x71, 0x75, 0x61, 0x6c, 0x10, 0x08, 0x12, 0x08, 0x0a, 0x04, 0x4c, 0x65, 0x73,
	0x73, 0x10, 0x09, 0x12, 0x09, 0x0a, 0x05, 0x47, 0x72, 0x65, 0x61, 0x74, 0x10, 0x0a, 0x2a, 0x6d,
	0x0a, 0x09, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x4b, 0x69, 0x6e, 0x64, 0x12, 0x0b, 0x0a, 0x07, 0x50,
	0x52, 0x4f, 0x47, 0x52, 0x41, 0x4d, 0x10, 0x00, 0x12, 0x0a, 0x0a, 0x06, 0x41, 0x53, 0x53, 0x49,
	0x47, 0x4e, 0x10, 0x01, 0x12, 0x0e, 0x0a, 0x0a, 0x49, 0x44, 0x45, 0x4e, 0x54, 0x49, 0x46, 0x49,
	0x45, 0x52, 0x10, 0x02, 0x12, 0x0b, 0x0a, 0x07, 0x55, 0x49, 0x4e, 0x54, 0x4c, 0x49, 0x54, 0x10,
	0x03, 0x12, 0x0d, 0x0a, 0x09, 0x50, 0x52, 0x4f, 0x43, 0x45, 0x44, 0x55, 0x52, 0x45, 0x10, 0x04,
	0x12, 0x08, 0x0a, 0x04, 0x4c, 0x45, 0x53, 0x53, 0x10, 0x05, 0x12, 0x09, 0x0a, 0x05, 0x47, 0x52,
	0x45, 0x41, 0x54, 0x10, 0x06, 0x12, 0x06, 0x0a, 0x02, 0x49, 0x46, 0x10, 0x07, 0x2a, 0x38, 0x0a,
	0x08, 0x54, 0x79, 0x70, 0x65, 0x4b, 0x69, 0x6e, 0x64, 0x12, 0x0b, 0x0a, 0x07, 0x49, 0x4e, 0x54,
	0x45, 0x47, 0x45, 0x52, 0x10, 0x00, 0x12, 0x08, 0x0a, 0x04, 0x52, 0x45, 0x41, 0x4c, 0x10, 0x01,
	0x12, 0x0b, 0x0a, 0x07, 0x42, 0x4f, 0x4f, 0x4c, 0x45, 0x41, 0x4e, 0x10, 0x02, 0x12, 0x08, 0x0a,
	0x04, 0x43, 0x48, 0x41, 0x52, 0x10, 0x03, 0x42, 0x18, 0x5a, 0x16, 0x70, 0x6b, 0x67, 0x2f, 0x63,
	0x6f, 0x64, 0x65, 0x67, 0x65, 0x6e, 0x2f, 0x73, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x69, 0x7a, 0x65,
	0x72, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_program_proto_rawDescOnce sync.Once
	file_program_proto_rawDescData = file_program_proto_rawDesc
)

func file_program_proto_rawDescGZIP() []byte {
	file_program_proto_rawDescOnce.Do(func() {
		file_program_proto_rawDescData = protoimpl.X.CompressGZIP(file_program_proto_rawDescData)
	})
	return file_program_proto_rawDescData
}

var file_program_proto_enumTypes = make([]protoimpl.EnumInfo, 7)
var file_program_proto_msgTypes = make([]protoimpl.MessageInfo, 26)
var file_program_proto_goTypes = []interface{}{
	(TokenKind)(0),                      // 0: Pasc.TokenKind
	(TypeKind)(0),                       // 1: Pasc.TypeKind
	(ProcedureStatement_PSKind)(0),      // 2: Pasc.ProcedureStatement.PSKind
	(Statement_StmtKind)(0),             // 3: Pasc.Statement.StmtKind
	(Identifier_IDKind)(0),              // 4: Pasc.Identifier.IDKind
	(Expression_ExprKind)(0),            // 5: Pasc.Expression.ExprKind
	(Operator_OpKind)(0),                // 6: Pasc.Operator.OpKind
	(*Program)(nil),                     // 7: Pasc.Program
	(*Block)(nil),                       // 8: Pasc.Block
	(*VarDeclaration)(nil),              // 9: Pasc.VarDeclaration
	(*ProcedureStatement)(nil),          // 10: Pasc.ProcedureStatement
	(*AssignStatement)(nil),             // 11: Pasc.AssignStatement
	(*IfStatement)(nil),                 // 12: Pasc.IfStatement
	(*Statement)(nil),                   // 13: Pasc.Statement
	(*Identifier)(nil),                  // 14: Pasc.Identifier
	(*Expression)(nil),                  // 15: Pasc.Expression
	(*WriteParameter)(nil),              // 16: Pasc.WriteParameter
	(*BinaryExpr)(nil),                  // 17: Pasc.BinaryExpr
	(*UIntLiteral)(nil),                 // 18: Pasc.UIntLiteral
	(*Type)(nil),                        // 19: Pasc.Type
	(*Integer)(nil),                     // 20: Pasc.Integer
	(*Boolean)(nil),                     // 21: Pasc.Boolean
	(*Real)(nil),                        // 22: Pasc.Real
	(*Char)(nil),                        // 23: Pasc.Char
	(*Operator)(nil),                    // 24: Pasc.Operator
	(*ProcedureStatement_WriteLn)(nil),  // 25: Pasc.ProcedureStatement.WriteLn
	(*ProcedureStatement_Write)(nil),    // 26: Pasc.ProcedureStatement.Write
	(*ProcedureStatement_Read)(nil),     // 27: Pasc.ProcedureStatement.Read
	(*ProcedureStatement_ReadLn)(nil),   // 28: Pasc.ProcedureStatement.ReadLn
	(*ProcedureStatement_ProcStmt)(nil), // 29: Pasc.ProcedureStatement.ProcStmt
	(*Identifier_Variable)(nil),         // 30: Pasc.Identifier.Variable
	(*Identifier_IndexedVariable)(nil),  // 31: Pasc.Identifier.IndexedVariable
	(*Identifier_FieldDesignator)(nil),  // 32: Pasc.Identifier.FieldDesignator
}
var file_program_proto_depIdxs = []int32{
	0,  // 0: Pasc.Program.kind:type_name -> Pasc.TokenKind
	8,  // 1: Pasc.Program.block:type_name -> Pasc.Block
	9,  // 2: Pasc.Block.varDeclrs:type_name -> Pasc.VarDeclaration
	13, // 3: Pasc.Block.stmts:type_name -> Pasc.Statement
	15, // 4: Pasc.VarDeclaration.name:type_name -> Pasc.Expression
	19, // 5: Pasc.VarDeclaration.type:type_name -> Pasc.Type
	2,  // 6: Pasc.ProcedureStatement.kind:type_name -> Pasc.ProcedureStatement.PSKind
	26, // 7: Pasc.ProcedureStatement.wrt:type_name -> Pasc.ProcedureStatement.Write
	25, // 8: Pasc.ProcedureStatement.wrtLn:type_name -> Pasc.ProcedureStatement.WriteLn
	27, // 9: Pasc.ProcedureStatement.rd:type_name -> Pasc.ProcedureStatement.Read
	28, // 10: Pasc.ProcedureStatement.rdLn:type_name -> Pasc.ProcedureStatement.ReadLn
	29, // 11: Pasc.ProcedureStatement.ps:type_name -> Pasc.ProcedureStatement.ProcStmt
	15, // 12: Pasc.AssignStatement.variable:type_name -> Pasc.Expression
	15, // 13: Pasc.AssignStatement.value:type_name -> Pasc.Expression
	15, // 14: Pasc.IfStatement.cond:type_name -> Pasc.Expression
	13, // 15: Pasc.IfStatement.truePath:type_name -> Pasc.Statement
	13, // 16: Pasc.IfStatement.elsePath:type_name -> Pasc.Statement
	3,  // 17: Pasc.Statement.kind:type_name -> Pasc.Statement.StmtKind
	11, // 18: Pasc.Statement.assignStmt:type_name -> Pasc.AssignStatement
	10, // 19: Pasc.Statement.procStmt:type_name -> Pasc.ProcedureStatement
	12, // 20: Pasc.Statement.ifStmt:type_name -> Pasc.IfStatement
	4,  // 21: Pasc.Identifier.kind:type_name -> Pasc.Identifier.IDKind
	30, // 22: Pasc.Identifier.var:type_name -> Pasc.Identifier.Variable
	31, // 23: Pasc.Identifier.iv:type_name -> Pasc.Identifier.IndexedVariable
	32, // 24: Pasc.Identifier.fld:type_name -> Pasc.Identifier.FieldDesignator
	5,  // 25: Pasc.Expression.kind:type_name -> Pasc.Expression.ExprKind
	14, // 26: Pasc.Expression.id:type_name -> Pasc.Identifier
	18, // 27: Pasc.Expression.uint:type_name -> Pasc.UIntLiteral
	17, // 28: Pasc.Expression.be:type_name -> Pasc.BinaryExpr
	16, // 29: Pasc.Expression.wp:type_name -> Pasc.WriteParameter
	15, // 30: Pasc.WriteParameter.e:type_name -> Pasc.Expression
	15, // 31: Pasc.WriteParameter.totalWidth:type_name -> Pasc.Expression
	15, // 32: Pasc.WriteParameter.fracDigits:type_name -> Pasc.Expression
	15, // 33: Pasc.BinaryExpr.left:type_name -> Pasc.Expression
	15, // 34: Pasc.BinaryExpr.right:type_name -> Pasc.Expression
	24, // 35: Pasc.BinaryExpr.op:type_name -> Pasc.Operator
	1,  // 36: Pasc.Type.tk:type_name -> Pasc.TypeKind
	20, // 37: Pasc.Type.int:type_name -> Pasc.Integer
	22, // 38: Pasc.Type.real:type_name -> Pasc.Real
	21, // 39: Pasc.Type.bool:type_name -> Pasc.Boolean
	23, // 40: Pasc.Type.char:type_name -> Pasc.Char
	6,  // 41: Pasc.Operator.op:type_name -> Pasc.Operator.OpKind
	15, // 42: Pasc.ProcedureStatement.WriteLn.file:type_name -> Pasc.Expression
	15, // 43: Pasc.ProcedureStatement.WriteLn.params:type_name -> Pasc.Expression
	15, // 44: Pasc.ProcedureStatement.ProcStmt.name:type_name -> Pasc.Expression
	15, // 45: Pasc.ProcedureStatement.ProcStmt.params:type_name -> Pasc.Expression
	46, // [46:46] is the sub-list for method output_type
	46, // [46:46] is the sub-list for method input_type
	46, // [46:46] is the sub-list for extension type_name
	46, // [46:46] is the sub-list for extension extendee
	0,  // [0:46] is the sub-list for field type_name
}

func init() { file_program_proto_init() }
func file_program_proto_init() {
	if File_program_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_program_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Program); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_program_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Block); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_program_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VarDeclaration); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_program_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProcedureStatement); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_program_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AssignStatement); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_program_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IfStatement); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_program_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Statement); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_program_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Identifier); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_program_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Expression); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_program_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WriteParameter); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_program_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BinaryExpr); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_program_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UIntLiteral); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_program_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Type); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_program_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Integer); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_program_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Boolean); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_program_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Real); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_program_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Char); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_program_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Operator); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_program_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProcedureStatement_WriteLn); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_program_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProcedureStatement_Write); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_program_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProcedureStatement_Read); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_program_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProcedureStatement_ReadLn); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_program_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProcedureStatement_ProcStmt); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_program_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Identifier_Variable); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_program_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Identifier_IndexedVariable); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_program_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Identifier_FieldDesignator); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_program_proto_msgTypes[3].OneofWrappers = []interface{}{
		(*ProcedureStatement_Wrt)(nil),
		(*ProcedureStatement_WrtLn)(nil),
		(*ProcedureStatement_Rd)(nil),
		(*ProcedureStatement_RdLn)(nil),
		(*ProcedureStatement_Ps)(nil),
	}
	file_program_proto_msgTypes[6].OneofWrappers = []interface{}{
		(*Statement_AssignStmt)(nil),
		(*Statement_ProcStmt)(nil),
		(*Statement_IfStmt)(nil),
	}
	file_program_proto_msgTypes[7].OneofWrappers = []interface{}{
		(*Identifier_Var)(nil),
		(*Identifier_Iv)(nil),
		(*Identifier_Fld)(nil),
	}
	file_program_proto_msgTypes[8].OneofWrappers = []interface{}{
		(*Expression_Id)(nil),
		(*Expression_Uint)(nil),
		(*Expression_Be)(nil),
		(*Expression_Wp)(nil),
	}
	file_program_proto_msgTypes[12].OneofWrappers = []interface{}{
		(*Type_Int)(nil),
		(*Type_Real)(nil),
		(*Type_Bool)(nil),
		(*Type_Char)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_program_proto_rawDesc,
			NumEnums:      7,
			NumMessages:   26,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_program_proto_goTypes,
		DependencyIndexes: file_program_proto_depIdxs,
		EnumInfos:         file_program_proto_enumTypes,
		MessageInfos:      file_program_proto_msgTypes,
	}.Build()
	File_program_proto = out.File
	file_program_proto_rawDesc = nil
	file_program_proto_goTypes = nil
	file_program_proto_depIdxs = nil
}
