// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: proto/expression.proto

#include "proto/expression.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)

namespace protobuf_proto_2fexpression_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_proto_2fexpression_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_Identifier_FieldDesignator;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_proto_2fexpression_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_Identifier_IndexedVariable;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_proto_2fexpression_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_Identifier_Variable;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_proto_2fexpression_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_Operator;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_proto_2fexpression_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_UIntLiteral;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_proto_2fexpression_2eproto ::google::protobuf::internal::SCCInfo<3> scc_info_Identifier;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_proto_2fexpression_2eproto ::google::protobuf::internal::SCCInfo<4> scc_info_BinaryExpr;
}  // namespace protobuf_proto_2fexpression_2eproto
namespace protobuf_proto_2ftype_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_proto_2ftype_2eproto ::google::protobuf::internal::SCCInfo<5> scc_info_Type;
}  // namespace protobuf_proto_2ftype_2eproto
namespace Pasc {
class Identifier_VariableDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Identifier_Variable>
      _instance;
} _Identifier_Variable_default_instance_;
class Identifier_IndexedVariableDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Identifier_IndexedVariable>
      _instance;
} _Identifier_IndexedVariable_default_instance_;
class Identifier_FieldDesignatorDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Identifier_FieldDesignator>
      _instance;
} _Identifier_FieldDesignator_default_instance_;
class IdentifierDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Identifier>
      _instance;
  const ::Pasc::Identifier_Variable* var_;
  const ::Pasc::Identifier_IndexedVariable* iv_;
  const ::Pasc::Identifier_FieldDesignator* fld_;
} _Identifier_default_instance_;
class ExpressionDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Expression>
      _instance;
  const ::Pasc::Identifier* id_;
  const ::Pasc::UIntLiteral* uint_;
  const ::Pasc::BinaryExpr* be_;
  const ::Pasc::WriteParameter* wp_;
  const ::Pasc::FuncCall* fc_;
} _Expression_default_instance_;
class WriteParameterDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<WriteParameter>
      _instance;
} _WriteParameter_default_instance_;
class BinaryExprDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<BinaryExpr>
      _instance;
} _BinaryExpr_default_instance_;
class UIntLiteralDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<UIntLiteral>
      _instance;
} _UIntLiteral_default_instance_;
class FuncCallDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<FuncCall>
      _instance;
} _FuncCall_default_instance_;
class OperatorDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Operator>
      _instance;
} _Operator_default_instance_;
}  // namespace Pasc
namespace protobuf_proto_2fexpression_2eproto {
static void InitDefaultsIdentifier_Variable() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::Pasc::_Identifier_Variable_default_instance_;
    new (ptr) ::Pasc::Identifier_Variable();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::Pasc::Identifier_Variable::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_Identifier_Variable =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsIdentifier_Variable}, {}};

static void InitDefaultsIdentifier_IndexedVariable() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::Pasc::_Identifier_IndexedVariable_default_instance_;
    new (ptr) ::Pasc::Identifier_IndexedVariable();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::Pasc::Identifier_IndexedVariable::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_Identifier_IndexedVariable =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsIdentifier_IndexedVariable}, {}};

static void InitDefaultsIdentifier_FieldDesignator() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::Pasc::_Identifier_FieldDesignator_default_instance_;
    new (ptr) ::Pasc::Identifier_FieldDesignator();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::Pasc::Identifier_FieldDesignator::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_Identifier_FieldDesignator =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsIdentifier_FieldDesignator}, {}};

static void InitDefaultsIdentifier() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::Pasc::_Identifier_default_instance_;
    new (ptr) ::Pasc::Identifier();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::Pasc::Identifier::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<3> scc_info_Identifier =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 3, InitDefaultsIdentifier}, {
      &protobuf_proto_2fexpression_2eproto::scc_info_Identifier_Variable.base,
      &protobuf_proto_2fexpression_2eproto::scc_info_Identifier_IndexedVariable.base,
      &protobuf_proto_2fexpression_2eproto::scc_info_Identifier_FieldDesignator.base,}};

static void InitDefaultsBinaryExpr() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::Pasc::_Expression_default_instance_;
    new (ptr) ::Pasc::Expression();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  {
    void* ptr = &::Pasc::_WriteParameter_default_instance_;
    new (ptr) ::Pasc::WriteParameter();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  {
    void* ptr = &::Pasc::_BinaryExpr_default_instance_;
    new (ptr) ::Pasc::BinaryExpr();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  {
    void* ptr = &::Pasc::_FuncCall_default_instance_;
    new (ptr) ::Pasc::FuncCall();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::Pasc::Expression::InitAsDefaultInstance();
  ::Pasc::WriteParameter::InitAsDefaultInstance();
  ::Pasc::BinaryExpr::InitAsDefaultInstance();
  ::Pasc::FuncCall::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<4> scc_info_BinaryExpr =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 4, InitDefaultsBinaryExpr}, {
      &protobuf_proto_2fexpression_2eproto::scc_info_Operator.base,
      &protobuf_proto_2fexpression_2eproto::scc_info_Identifier.base,
      &protobuf_proto_2fexpression_2eproto::scc_info_UIntLiteral.base,
      &protobuf_proto_2ftype_2eproto::scc_info_Type.base,}};

static void InitDefaultsUIntLiteral() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::Pasc::_UIntLiteral_default_instance_;
    new (ptr) ::Pasc::UIntLiteral();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::Pasc::UIntLiteral::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_UIntLiteral =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsUIntLiteral}, {}};

static void InitDefaultsOperator() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::Pasc::_Operator_default_instance_;
    new (ptr) ::Pasc::Operator();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::Pasc::Operator::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_Operator =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsOperator}, {}};

void InitDefaults() {
  ::google::protobuf::internal::InitSCC(&scc_info_Identifier_Variable.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Identifier_IndexedVariable.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Identifier_FieldDesignator.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Identifier.base);
  ::google::protobuf::internal::InitSCC(&scc_info_BinaryExpr.base);
  ::google::protobuf::internal::InitSCC(&scc_info_UIntLiteral.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Operator.base);
}

::google::protobuf::Metadata file_level_metadata[10];
const ::google::protobuf::EnumDescriptor* file_level_enum_descriptors[3];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Pasc::Identifier_Variable, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Pasc::Identifier_Variable, name_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Pasc::Identifier_IndexedVariable, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Pasc::Identifier_FieldDesignator, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Pasc::Identifier, _internal_metadata_),
  ~0u,  // no _extensions_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Pasc::Identifier, _oneof_case_[0]),
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Pasc::Identifier, kind_),
  offsetof(::Pasc::IdentifierDefaultTypeInternal, var_),
  offsetof(::Pasc::IdentifierDefaultTypeInternal, iv_),
  offsetof(::Pasc::IdentifierDefaultTypeInternal, fld_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Pasc::Identifier, value_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Pasc::Expression, _internal_metadata_),
  ~0u,  // no _extensions_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Pasc::Expression, _oneof_case_[0]),
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Pasc::Expression, kind_),
  offsetof(::Pasc::ExpressionDefaultTypeInternal, id_),
  offsetof(::Pasc::ExpressionDefaultTypeInternal, uint_),
  offsetof(::Pasc::ExpressionDefaultTypeInternal, be_),
  offsetof(::Pasc::ExpressionDefaultTypeInternal, wp_),
  offsetof(::Pasc::ExpressionDefaultTypeInternal, fc_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Pasc::Expression, expr_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Pasc::WriteParameter, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Pasc::WriteParameter, e_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Pasc::WriteParameter, totalwidth_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Pasc::WriteParameter, fracdigits_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Pasc::BinaryExpr, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Pasc::BinaryExpr, left_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Pasc::BinaryExpr, right_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Pasc::BinaryExpr, op_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Pasc::UIntLiteral, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Pasc::UIntLiteral, value_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Pasc::FuncCall, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Pasc::FuncCall, name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Pasc::FuncCall, args_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Pasc::FuncCall, returntype_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Pasc::Operator, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Pasc::Operator, op_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::Pasc::Identifier_Variable)},
  { 6, -1, sizeof(::Pasc::Identifier_IndexedVariable)},
  { 11, -1, sizeof(::Pasc::Identifier_FieldDesignator)},
  { 16, -1, sizeof(::Pasc::Identifier)},
  { 26, -1, sizeof(::Pasc::Expression)},
  { 38, -1, sizeof(::Pasc::WriteParameter)},
  { 46, -1, sizeof(::Pasc::BinaryExpr)},
  { 54, -1, sizeof(::Pasc::UIntLiteral)},
  { 60, -1, sizeof(::Pasc::FuncCall)},
  { 68, -1, sizeof(::Pasc::Operator)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::Pasc::_Identifier_Variable_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::Pasc::_Identifier_IndexedVariable_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::Pasc::_Identifier_FieldDesignator_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::Pasc::_Identifier_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::Pasc::_Expression_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::Pasc::_WriteParameter_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::Pasc::_BinaryExpr_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::Pasc::_UIntLiteral_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::Pasc::_FuncCall_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::Pasc::_Operator_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  AssignDescriptors(
      "proto/expression.proto", schemas, file_default_instances, TableStruct::offsets,
      file_level_metadata, file_level_enum_descriptors, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 10);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\026proto/expression.proto\022\004Pasc\032\020proto/ty"
      "pe.proto\"\267\002\n\nIdentifier\022%\n\004kind\030\001 \001(\0162\027."
      "Pasc.Identifier.IDKind\022(\n\003var\030\002 \001(\0132\031.Pa"
      "sc.Identifier.VariableH\000\022.\n\002iv\030\003 \001(\0132 .P"
      "asc.Identifier.IndexedVariableH\000\022/\n\003fld\030"
      "\004 \001(\0132 .Pasc.Identifier.FieldDesignatorH"
      "\000\032\030\n\010Variable\022\014\n\004name\030\001 \001(\t\032\021\n\017IndexedVa"
      "riable\032\021\n\017FieldDesignator\".\n\006IDKind\022\r\n\tE"
      "ntireVar\020\000\022\n\n\006IdxVar\020\001\022\t\n\005Field\020\002B\007\n\005val"
      "ue\"\265\002\n\nExpression\022\'\n\004kind\030\001 \001(\0162\031.Pasc.E"
      "xpression.ExprKind\022\036\n\002id\030\002 \001(\0132\020.Pasc.Id"
      "entifierH\000\022!\n\004uint\030\003 \001(\0132\021.Pasc.UIntLite"
      "ralH\000\022\036\n\002be\030\004 \001(\0132\020.Pasc.BinaryExprH\000\022\"\n"
      "\002wp\030\005 \001(\0132\024.Pasc.WriteParameterH\000\022\034\n\002fc\030"
      "\006 \001(\0132\016.Pasc.FuncCallH\000\"Q\n\010ExprKind\022\010\n\004U"
      "Int\020\000\022\010\n\004Bool\020\001\022\t\n\005Ident\020\002\022\013\n\007BinExpr\020\003\022"
      "\016\n\nWriteParam\020\004\022\t\n\005FCall\020\005B\006\n\004expr\"y\n\016Wr"
      "iteParameter\022\033\n\001e\030\001 \001(\0132\020.Pasc.Expressio"
      "n\022$\n\ntotalWidth\030\002 \001(\0132\020.Pasc.Expression\022"
      "$\n\nfracDigits\030\003 \001(\0132\020.Pasc.Expression\"i\n"
      "\nBinaryExpr\022\036\n\004left\030\001 \001(\0132\020.Pasc.Express"
      "ion\022\037\n\005right\030\002 \001(\0132\020.Pasc.Expression\022\032\n\002"
      "op\030\003 \001(\0132\016.Pasc.Operator\"\034\n\013UIntLiteral\022"
      "\r\n\005value\030\001 \001(\r\"j\n\010FuncCall\022\036\n\004name\030\001 \001(\013"
      "2\020.Pasc.Expression\022\036\n\004args\030\002 \003(\0132\020.Pasc."
      "Expression\022\036\n\nreturnType\030\003 \001(\0132\n.Pasc.Ty"
      "pe\"\261\001\n\010Operator\022!\n\002op\030\001 \001(\0162\025.Pasc.Opera"
      "tor.OpKind\"\201\001\n\006OpKind\022\010\n\004Plus\020\000\022\t\n\005Minus"
      "\020\001\022\007\n\003Div\020\002\022\007\n\003Sub\020\003\022\007\n\003Mod\020\004\022\007\n\003And\020\005\022\006"
      "\n\002Or\020\006\022\006\n\002In\020\007\022\t\n\005Equal\020\010\022\010\n\004Less\020\t\022\t\n\005G"
      "reat\020\n\022\016\n\nGreatEqual\020\013B\030Z\026pkg/codegen/se"
      "rializerb\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 1256);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "proto/expression.proto", &protobuf_RegisterTypes);
  ::protobuf_proto_2ftype_2eproto::AddDescriptors();
}

void AddDescriptors() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_proto_2fexpression_2eproto
namespace Pasc {
const ::google::protobuf::EnumDescriptor* Identifier_IDKind_descriptor() {
  protobuf_proto_2fexpression_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_proto_2fexpression_2eproto::file_level_enum_descriptors[0];
}
bool Identifier_IDKind_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const Identifier_IDKind Identifier::EntireVar;
const Identifier_IDKind Identifier::IdxVar;
const Identifier_IDKind Identifier::Field;
const Identifier_IDKind Identifier::IDKind_MIN;
const Identifier_IDKind Identifier::IDKind_MAX;
const int Identifier::IDKind_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* Expression_ExprKind_descriptor() {
  protobuf_proto_2fexpression_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_proto_2fexpression_2eproto::file_level_enum_descriptors[1];
}
bool Expression_ExprKind_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const Expression_ExprKind Expression::UInt;
const Expression_ExprKind Expression::Bool;
const Expression_ExprKind Expression::Ident;
const Expression_ExprKind Expression::BinExpr;
const Expression_ExprKind Expression::WriteParam;
const Expression_ExprKind Expression::FCall;
const Expression_ExprKind Expression::ExprKind_MIN;
const Expression_ExprKind Expression::ExprKind_MAX;
const int Expression::ExprKind_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* Operator_OpKind_descriptor() {
  protobuf_proto_2fexpression_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_proto_2fexpression_2eproto::file_level_enum_descriptors[2];
}
bool Operator_OpKind_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
    case 8:
    case 9:
    case 10:
    case 11:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const Operator_OpKind Operator::Plus;
const Operator_OpKind Operator::Minus;
const Operator_OpKind Operator::Div;
const Operator_OpKind Operator::Sub;
const Operator_OpKind Operator::Mod;
const Operator_OpKind Operator::And;
const Operator_OpKind Operator::Or;
const Operator_OpKind Operator::In;
const Operator_OpKind Operator::Equal;
const Operator_OpKind Operator::Less;
const Operator_OpKind Operator::Great;
const Operator_OpKind Operator::GreatEqual;
const Operator_OpKind Operator::OpKind_MIN;
const Operator_OpKind Operator::OpKind_MAX;
const int Operator::OpKind_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

// ===================================================================

void Identifier_Variable::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Identifier_Variable::kNameFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Identifier_Variable::Identifier_Variable()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_proto_2fexpression_2eproto::scc_info_Identifier_Variable.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:Pasc.Identifier.Variable)
}
Identifier_Variable::Identifier_Variable(const Identifier_Variable& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.name().size() > 0) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  // @@protoc_insertion_point(copy_constructor:Pasc.Identifier.Variable)
}

void Identifier_Variable::SharedCtor() {
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

Identifier_Variable::~Identifier_Variable() {
  // @@protoc_insertion_point(destructor:Pasc.Identifier.Variable)
  SharedDtor();
}

void Identifier_Variable::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void Identifier_Variable::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Identifier_Variable::descriptor() {
  ::protobuf_proto_2fexpression_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_proto_2fexpression_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Identifier_Variable& Identifier_Variable::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_proto_2fexpression_2eproto::scc_info_Identifier_Variable.base);
  return *internal_default_instance();
}


void Identifier_Variable::Clear() {
// @@protoc_insertion_point(message_clear_start:Pasc.Identifier.Variable)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool Identifier_Variable::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Pasc.Identifier.Variable)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string name = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Pasc.Identifier.Variable.name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Pasc.Identifier.Variable)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Pasc.Identifier.Variable)
  return false;
#undef DO_
}

void Identifier_Variable::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Pasc.Identifier.Variable)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Pasc.Identifier.Variable.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:Pasc.Identifier.Variable)
}

::google::protobuf::uint8* Identifier_Variable::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:Pasc.Identifier.Variable)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Pasc.Identifier.Variable.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Pasc.Identifier.Variable)
  return target;
}

size_t Identifier_Variable::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Pasc.Identifier.Variable)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string name = 1;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Identifier_Variable::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Pasc.Identifier.Variable)
  GOOGLE_DCHECK_NE(&from, this);
  const Identifier_Variable* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Identifier_Variable>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Pasc.Identifier.Variable)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Pasc.Identifier.Variable)
    MergeFrom(*source);
  }
}

void Identifier_Variable::MergeFrom(const Identifier_Variable& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Pasc.Identifier.Variable)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
}

void Identifier_Variable::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Pasc.Identifier.Variable)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Identifier_Variable::CopyFrom(const Identifier_Variable& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Pasc.Identifier.Variable)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Identifier_Variable::IsInitialized() const {
  return true;
}

void Identifier_Variable::Swap(Identifier_Variable* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Identifier_Variable::InternalSwap(Identifier_Variable* other) {
  using std::swap;
  name_.Swap(&other->name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Identifier_Variable::GetMetadata() const {
  protobuf_proto_2fexpression_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_proto_2fexpression_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Identifier_IndexedVariable::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Identifier_IndexedVariable::Identifier_IndexedVariable()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_proto_2fexpression_2eproto::scc_info_Identifier_IndexedVariable.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:Pasc.Identifier.IndexedVariable)
}
Identifier_IndexedVariable::Identifier_IndexedVariable(const Identifier_IndexedVariable& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:Pasc.Identifier.IndexedVariable)
}

void Identifier_IndexedVariable::SharedCtor() {
}

Identifier_IndexedVariable::~Identifier_IndexedVariable() {
  // @@protoc_insertion_point(destructor:Pasc.Identifier.IndexedVariable)
  SharedDtor();
}

void Identifier_IndexedVariable::SharedDtor() {
}

void Identifier_IndexedVariable::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Identifier_IndexedVariable::descriptor() {
  ::protobuf_proto_2fexpression_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_proto_2fexpression_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Identifier_IndexedVariable& Identifier_IndexedVariable::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_proto_2fexpression_2eproto::scc_info_Identifier_IndexedVariable.base);
  return *internal_default_instance();
}


void Identifier_IndexedVariable::Clear() {
// @@protoc_insertion_point(message_clear_start:Pasc.Identifier.IndexedVariable)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear();
}

bool Identifier_IndexedVariable::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Pasc.Identifier.IndexedVariable)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, _internal_metadata_.mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:Pasc.Identifier.IndexedVariable)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Pasc.Identifier.IndexedVariable)
  return false;
#undef DO_
}

void Identifier_IndexedVariable::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Pasc.Identifier.IndexedVariable)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:Pasc.Identifier.IndexedVariable)
}

::google::protobuf::uint8* Identifier_IndexedVariable::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:Pasc.Identifier.IndexedVariable)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Pasc.Identifier.IndexedVariable)
  return target;
}

size_t Identifier_IndexedVariable::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Pasc.Identifier.IndexedVariable)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Identifier_IndexedVariable::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Pasc.Identifier.IndexedVariable)
  GOOGLE_DCHECK_NE(&from, this);
  const Identifier_IndexedVariable* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Identifier_IndexedVariable>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Pasc.Identifier.IndexedVariable)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Pasc.Identifier.IndexedVariable)
    MergeFrom(*source);
  }
}

void Identifier_IndexedVariable::MergeFrom(const Identifier_IndexedVariable& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Pasc.Identifier.IndexedVariable)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void Identifier_IndexedVariable::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Pasc.Identifier.IndexedVariable)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Identifier_IndexedVariable::CopyFrom(const Identifier_IndexedVariable& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Pasc.Identifier.IndexedVariable)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Identifier_IndexedVariable::IsInitialized() const {
  return true;
}

void Identifier_IndexedVariable::Swap(Identifier_IndexedVariable* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Identifier_IndexedVariable::InternalSwap(Identifier_IndexedVariable* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Identifier_IndexedVariable::GetMetadata() const {
  protobuf_proto_2fexpression_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_proto_2fexpression_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Identifier_FieldDesignator::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Identifier_FieldDesignator::Identifier_FieldDesignator()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_proto_2fexpression_2eproto::scc_info_Identifier_FieldDesignator.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:Pasc.Identifier.FieldDesignator)
}
Identifier_FieldDesignator::Identifier_FieldDesignator(const Identifier_FieldDesignator& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:Pasc.Identifier.FieldDesignator)
}

void Identifier_FieldDesignator::SharedCtor() {
}

Identifier_FieldDesignator::~Identifier_FieldDesignator() {
  // @@protoc_insertion_point(destructor:Pasc.Identifier.FieldDesignator)
  SharedDtor();
}

void Identifier_FieldDesignator::SharedDtor() {
}

void Identifier_FieldDesignator::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Identifier_FieldDesignator::descriptor() {
  ::protobuf_proto_2fexpression_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_proto_2fexpression_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Identifier_FieldDesignator& Identifier_FieldDesignator::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_proto_2fexpression_2eproto::scc_info_Identifier_FieldDesignator.base);
  return *internal_default_instance();
}


void Identifier_FieldDesignator::Clear() {
// @@protoc_insertion_point(message_clear_start:Pasc.Identifier.FieldDesignator)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear();
}

bool Identifier_FieldDesignator::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Pasc.Identifier.FieldDesignator)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, _internal_metadata_.mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:Pasc.Identifier.FieldDesignator)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Pasc.Identifier.FieldDesignator)
  return false;
#undef DO_
}

void Identifier_FieldDesignator::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Pasc.Identifier.FieldDesignator)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:Pasc.Identifier.FieldDesignator)
}

::google::protobuf::uint8* Identifier_FieldDesignator::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:Pasc.Identifier.FieldDesignator)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Pasc.Identifier.FieldDesignator)
  return target;
}

size_t Identifier_FieldDesignator::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Pasc.Identifier.FieldDesignator)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Identifier_FieldDesignator::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Pasc.Identifier.FieldDesignator)
  GOOGLE_DCHECK_NE(&from, this);
  const Identifier_FieldDesignator* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Identifier_FieldDesignator>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Pasc.Identifier.FieldDesignator)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Pasc.Identifier.FieldDesignator)
    MergeFrom(*source);
  }
}

void Identifier_FieldDesignator::MergeFrom(const Identifier_FieldDesignator& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Pasc.Identifier.FieldDesignator)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void Identifier_FieldDesignator::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Pasc.Identifier.FieldDesignator)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Identifier_FieldDesignator::CopyFrom(const Identifier_FieldDesignator& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Pasc.Identifier.FieldDesignator)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Identifier_FieldDesignator::IsInitialized() const {
  return true;
}

void Identifier_FieldDesignator::Swap(Identifier_FieldDesignator* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Identifier_FieldDesignator::InternalSwap(Identifier_FieldDesignator* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Identifier_FieldDesignator::GetMetadata() const {
  protobuf_proto_2fexpression_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_proto_2fexpression_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Identifier::InitAsDefaultInstance() {
  ::Pasc::_Identifier_default_instance_.var_ = const_cast< ::Pasc::Identifier_Variable*>(
      ::Pasc::Identifier_Variable::internal_default_instance());
  ::Pasc::_Identifier_default_instance_.iv_ = const_cast< ::Pasc::Identifier_IndexedVariable*>(
      ::Pasc::Identifier_IndexedVariable::internal_default_instance());
  ::Pasc::_Identifier_default_instance_.fld_ = const_cast< ::Pasc::Identifier_FieldDesignator*>(
      ::Pasc::Identifier_FieldDesignator::internal_default_instance());
}
void Identifier::set_allocated_var(::Pasc::Identifier_Variable* var) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_value();
  if (var) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      var = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, var, submessage_arena);
    }
    set_has_var();
    value_.var_ = var;
  }
  // @@protoc_insertion_point(field_set_allocated:Pasc.Identifier.var)
}
void Identifier::set_allocated_iv(::Pasc::Identifier_IndexedVariable* iv) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_value();
  if (iv) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      iv = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, iv, submessage_arena);
    }
    set_has_iv();
    value_.iv_ = iv;
  }
  // @@protoc_insertion_point(field_set_allocated:Pasc.Identifier.iv)
}
void Identifier::set_allocated_fld(::Pasc::Identifier_FieldDesignator* fld) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_value();
  if (fld) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      fld = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, fld, submessage_arena);
    }
    set_has_fld();
    value_.fld_ = fld;
  }
  // @@protoc_insertion_point(field_set_allocated:Pasc.Identifier.fld)
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Identifier::kKindFieldNumber;
const int Identifier::kVarFieldNumber;
const int Identifier::kIvFieldNumber;
const int Identifier::kFldFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Identifier::Identifier()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_proto_2fexpression_2eproto::scc_info_Identifier.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:Pasc.Identifier)
}
Identifier::Identifier(const Identifier& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  kind_ = from.kind_;
  clear_has_value();
  switch (from.value_case()) {
    case kVar: {
      mutable_var()->::Pasc::Identifier_Variable::MergeFrom(from.var());
      break;
    }
    case kIv: {
      mutable_iv()->::Pasc::Identifier_IndexedVariable::MergeFrom(from.iv());
      break;
    }
    case kFld: {
      mutable_fld()->::Pasc::Identifier_FieldDesignator::MergeFrom(from.fld());
      break;
    }
    case VALUE_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:Pasc.Identifier)
}

void Identifier::SharedCtor() {
  kind_ = 0;
  clear_has_value();
}

Identifier::~Identifier() {
  // @@protoc_insertion_point(destructor:Pasc.Identifier)
  SharedDtor();
}

void Identifier::SharedDtor() {
  if (has_value()) {
    clear_value();
  }
}

void Identifier::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Identifier::descriptor() {
  ::protobuf_proto_2fexpression_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_proto_2fexpression_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Identifier& Identifier::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_proto_2fexpression_2eproto::scc_info_Identifier.base);
  return *internal_default_instance();
}


void Identifier::clear_value() {
// @@protoc_insertion_point(one_of_clear_start:Pasc.Identifier)
  switch (value_case()) {
    case kVar: {
      delete value_.var_;
      break;
    }
    case kIv: {
      delete value_.iv_;
      break;
    }
    case kFld: {
      delete value_.fld_;
      break;
    }
    case VALUE_NOT_SET: {
      break;
    }
  }
  _oneof_case_[0] = VALUE_NOT_SET;
}


void Identifier::Clear() {
// @@protoc_insertion_point(message_clear_start:Pasc.Identifier)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  kind_ = 0;
  clear_value();
  _internal_metadata_.Clear();
}

bool Identifier::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Pasc.Identifier)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .Pasc.Identifier.IDKind kind = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_kind(static_cast< ::Pasc::Identifier_IDKind >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .Pasc.Identifier.Variable var = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_var()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .Pasc.Identifier.IndexedVariable iv = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_iv()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .Pasc.Identifier.FieldDesignator fld = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_fld()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Pasc.Identifier)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Pasc.Identifier)
  return false;
#undef DO_
}

void Identifier::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Pasc.Identifier)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .Pasc.Identifier.IDKind kind = 1;
  if (this->kind() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->kind(), output);
  }

  // .Pasc.Identifier.Variable var = 2;
  if (has_var()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_var(), output);
  }

  // .Pasc.Identifier.IndexedVariable iv = 3;
  if (has_iv()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->_internal_iv(), output);
  }

  // .Pasc.Identifier.FieldDesignator fld = 4;
  if (has_fld()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->_internal_fld(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:Pasc.Identifier)
}

::google::protobuf::uint8* Identifier::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:Pasc.Identifier)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .Pasc.Identifier.IDKind kind = 1;
  if (this->kind() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->kind(), target);
  }

  // .Pasc.Identifier.Variable var = 2;
  if (has_var()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_var(), deterministic, target);
  }

  // .Pasc.Identifier.IndexedVariable iv = 3;
  if (has_iv()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->_internal_iv(), deterministic, target);
  }

  // .Pasc.Identifier.FieldDesignator fld = 4;
  if (has_fld()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, this->_internal_fld(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Pasc.Identifier)
  return target;
}

size_t Identifier::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Pasc.Identifier)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .Pasc.Identifier.IDKind kind = 1;
  if (this->kind() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->kind());
  }

  switch (value_case()) {
    // .Pasc.Identifier.Variable var = 2;
    case kVar: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *value_.var_);
      break;
    }
    // .Pasc.Identifier.IndexedVariable iv = 3;
    case kIv: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *value_.iv_);
      break;
    }
    // .Pasc.Identifier.FieldDesignator fld = 4;
    case kFld: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *value_.fld_);
      break;
    }
    case VALUE_NOT_SET: {
      break;
    }
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Identifier::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Pasc.Identifier)
  GOOGLE_DCHECK_NE(&from, this);
  const Identifier* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Identifier>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Pasc.Identifier)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Pasc.Identifier)
    MergeFrom(*source);
  }
}

void Identifier::MergeFrom(const Identifier& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Pasc.Identifier)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.kind() != 0) {
    set_kind(from.kind());
  }
  switch (from.value_case()) {
    case kVar: {
      mutable_var()->::Pasc::Identifier_Variable::MergeFrom(from.var());
      break;
    }
    case kIv: {
      mutable_iv()->::Pasc::Identifier_IndexedVariable::MergeFrom(from.iv());
      break;
    }
    case kFld: {
      mutable_fld()->::Pasc::Identifier_FieldDesignator::MergeFrom(from.fld());
      break;
    }
    case VALUE_NOT_SET: {
      break;
    }
  }
}

void Identifier::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Pasc.Identifier)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Identifier::CopyFrom(const Identifier& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Pasc.Identifier)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Identifier::IsInitialized() const {
  return true;
}

void Identifier::Swap(Identifier* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Identifier::InternalSwap(Identifier* other) {
  using std::swap;
  swap(kind_, other->kind_);
  swap(value_, other->value_);
  swap(_oneof_case_[0], other->_oneof_case_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Identifier::GetMetadata() const {
  protobuf_proto_2fexpression_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_proto_2fexpression_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Expression::InitAsDefaultInstance() {
  ::Pasc::_Expression_default_instance_.id_ = const_cast< ::Pasc::Identifier*>(
      ::Pasc::Identifier::internal_default_instance());
  ::Pasc::_Expression_default_instance_.uint_ = const_cast< ::Pasc::UIntLiteral*>(
      ::Pasc::UIntLiteral::internal_default_instance());
  ::Pasc::_Expression_default_instance_.be_ = const_cast< ::Pasc::BinaryExpr*>(
      ::Pasc::BinaryExpr::internal_default_instance());
  ::Pasc::_Expression_default_instance_.wp_ = const_cast< ::Pasc::WriteParameter*>(
      ::Pasc::WriteParameter::internal_default_instance());
  ::Pasc::_Expression_default_instance_.fc_ = const_cast< ::Pasc::FuncCall*>(
      ::Pasc::FuncCall::internal_default_instance());
}
void Expression::set_allocated_id(::Pasc::Identifier* id) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_expr();
  if (id) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      id = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, id, submessage_arena);
    }
    set_has_id();
    expr_.id_ = id;
  }
  // @@protoc_insertion_point(field_set_allocated:Pasc.Expression.id)
}
void Expression::set_allocated_uint(::Pasc::UIntLiteral* uint) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_expr();
  if (uint) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      uint = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, uint, submessage_arena);
    }
    set_has_uint();
    expr_.uint_ = uint;
  }
  // @@protoc_insertion_point(field_set_allocated:Pasc.Expression.uint)
}
void Expression::set_allocated_be(::Pasc::BinaryExpr* be) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_expr();
  if (be) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      be = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, be, submessage_arena);
    }
    set_has_be();
    expr_.be_ = be;
  }
  // @@protoc_insertion_point(field_set_allocated:Pasc.Expression.be)
}
void Expression::set_allocated_wp(::Pasc::WriteParameter* wp) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_expr();
  if (wp) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      wp = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, wp, submessage_arena);
    }
    set_has_wp();
    expr_.wp_ = wp;
  }
  // @@protoc_insertion_point(field_set_allocated:Pasc.Expression.wp)
}
void Expression::set_allocated_fc(::Pasc::FuncCall* fc) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_expr();
  if (fc) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      fc = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, fc, submessage_arena);
    }
    set_has_fc();
    expr_.fc_ = fc;
  }
  // @@protoc_insertion_point(field_set_allocated:Pasc.Expression.fc)
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Expression::kKindFieldNumber;
const int Expression::kIdFieldNumber;
const int Expression::kUintFieldNumber;
const int Expression::kBeFieldNumber;
const int Expression::kWpFieldNumber;
const int Expression::kFcFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Expression::Expression()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_proto_2fexpression_2eproto::scc_info_BinaryExpr.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:Pasc.Expression)
}
Expression::Expression(const Expression& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  kind_ = from.kind_;
  clear_has_expr();
  switch (from.expr_case()) {
    case kId: {
      mutable_id()->::Pasc::Identifier::MergeFrom(from.id());
      break;
    }
    case kUint: {
      mutable_uint()->::Pasc::UIntLiteral::MergeFrom(from.uint());
      break;
    }
    case kBe: {
      mutable_be()->::Pasc::BinaryExpr::MergeFrom(from.be());
      break;
    }
    case kWp: {
      mutable_wp()->::Pasc::WriteParameter::MergeFrom(from.wp());
      break;
    }
    case kFc: {
      mutable_fc()->::Pasc::FuncCall::MergeFrom(from.fc());
      break;
    }
    case EXPR_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:Pasc.Expression)
}

void Expression::SharedCtor() {
  kind_ = 0;
  clear_has_expr();
}

Expression::~Expression() {
  // @@protoc_insertion_point(destructor:Pasc.Expression)
  SharedDtor();
}

void Expression::SharedDtor() {
  if (has_expr()) {
    clear_expr();
  }
}

void Expression::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Expression::descriptor() {
  ::protobuf_proto_2fexpression_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_proto_2fexpression_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Expression& Expression::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_proto_2fexpression_2eproto::scc_info_BinaryExpr.base);
  return *internal_default_instance();
}


void Expression::clear_expr() {
// @@protoc_insertion_point(one_of_clear_start:Pasc.Expression)
  switch (expr_case()) {
    case kId: {
      delete expr_.id_;
      break;
    }
    case kUint: {
      delete expr_.uint_;
      break;
    }
    case kBe: {
      delete expr_.be_;
      break;
    }
    case kWp: {
      delete expr_.wp_;
      break;
    }
    case kFc: {
      delete expr_.fc_;
      break;
    }
    case EXPR_NOT_SET: {
      break;
    }
  }
  _oneof_case_[0] = EXPR_NOT_SET;
}


void Expression::Clear() {
// @@protoc_insertion_point(message_clear_start:Pasc.Expression)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  kind_ = 0;
  clear_expr();
  _internal_metadata_.Clear();
}

bool Expression::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Pasc.Expression)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .Pasc.Expression.ExprKind kind = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_kind(static_cast< ::Pasc::Expression_ExprKind >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .Pasc.Identifier id = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_id()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .Pasc.UIntLiteral uint = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_uint()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .Pasc.BinaryExpr be = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_be()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .Pasc.WriteParameter wp = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_wp()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .Pasc.FuncCall fc = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_fc()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Pasc.Expression)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Pasc.Expression)
  return false;
#undef DO_
}

void Expression::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Pasc.Expression)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .Pasc.Expression.ExprKind kind = 1;
  if (this->kind() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->kind(), output);
  }

  // .Pasc.Identifier id = 2;
  if (has_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_id(), output);
  }

  // .Pasc.UIntLiteral uint = 3;
  if (has_uint()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->_internal_uint(), output);
  }

  // .Pasc.BinaryExpr be = 4;
  if (has_be()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->_internal_be(), output);
  }

  // .Pasc.WriteParameter wp = 5;
  if (has_wp()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, this->_internal_wp(), output);
  }

  // .Pasc.FuncCall fc = 6;
  if (has_fc()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6, this->_internal_fc(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:Pasc.Expression)
}

::google::protobuf::uint8* Expression::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:Pasc.Expression)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .Pasc.Expression.ExprKind kind = 1;
  if (this->kind() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->kind(), target);
  }

  // .Pasc.Identifier id = 2;
  if (has_id()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_id(), deterministic, target);
  }

  // .Pasc.UIntLiteral uint = 3;
  if (has_uint()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->_internal_uint(), deterministic, target);
  }

  // .Pasc.BinaryExpr be = 4;
  if (has_be()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, this->_internal_be(), deterministic, target);
  }

  // .Pasc.WriteParameter wp = 5;
  if (has_wp()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        5, this->_internal_wp(), deterministic, target);
  }

  // .Pasc.FuncCall fc = 6;
  if (has_fc()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        6, this->_internal_fc(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Pasc.Expression)
  return target;
}

size_t Expression::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Pasc.Expression)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .Pasc.Expression.ExprKind kind = 1;
  if (this->kind() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->kind());
  }

  switch (expr_case()) {
    // .Pasc.Identifier id = 2;
    case kId: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *expr_.id_);
      break;
    }
    // .Pasc.UIntLiteral uint = 3;
    case kUint: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *expr_.uint_);
      break;
    }
    // .Pasc.BinaryExpr be = 4;
    case kBe: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *expr_.be_);
      break;
    }
    // .Pasc.WriteParameter wp = 5;
    case kWp: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *expr_.wp_);
      break;
    }
    // .Pasc.FuncCall fc = 6;
    case kFc: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *expr_.fc_);
      break;
    }
    case EXPR_NOT_SET: {
      break;
    }
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Expression::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Pasc.Expression)
  GOOGLE_DCHECK_NE(&from, this);
  const Expression* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Expression>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Pasc.Expression)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Pasc.Expression)
    MergeFrom(*source);
  }
}

void Expression::MergeFrom(const Expression& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Pasc.Expression)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.kind() != 0) {
    set_kind(from.kind());
  }
  switch (from.expr_case()) {
    case kId: {
      mutable_id()->::Pasc::Identifier::MergeFrom(from.id());
      break;
    }
    case kUint: {
      mutable_uint()->::Pasc::UIntLiteral::MergeFrom(from.uint());
      break;
    }
    case kBe: {
      mutable_be()->::Pasc::BinaryExpr::MergeFrom(from.be());
      break;
    }
    case kWp: {
      mutable_wp()->::Pasc::WriteParameter::MergeFrom(from.wp());
      break;
    }
    case kFc: {
      mutable_fc()->::Pasc::FuncCall::MergeFrom(from.fc());
      break;
    }
    case EXPR_NOT_SET: {
      break;
    }
  }
}

void Expression::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Pasc.Expression)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Expression::CopyFrom(const Expression& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Pasc.Expression)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Expression::IsInitialized() const {
  return true;
}

void Expression::Swap(Expression* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Expression::InternalSwap(Expression* other) {
  using std::swap;
  swap(kind_, other->kind_);
  swap(expr_, other->expr_);
  swap(_oneof_case_[0], other->_oneof_case_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Expression::GetMetadata() const {
  protobuf_proto_2fexpression_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_proto_2fexpression_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void WriteParameter::InitAsDefaultInstance() {
  ::Pasc::_WriteParameter_default_instance_._instance.get_mutable()->e_ = const_cast< ::Pasc::Expression*>(
      ::Pasc::Expression::internal_default_instance());
  ::Pasc::_WriteParameter_default_instance_._instance.get_mutable()->totalwidth_ = const_cast< ::Pasc::Expression*>(
      ::Pasc::Expression::internal_default_instance());
  ::Pasc::_WriteParameter_default_instance_._instance.get_mutable()->fracdigits_ = const_cast< ::Pasc::Expression*>(
      ::Pasc::Expression::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int WriteParameter::kEFieldNumber;
const int WriteParameter::kTotalWidthFieldNumber;
const int WriteParameter::kFracDigitsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

WriteParameter::WriteParameter()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_proto_2fexpression_2eproto::scc_info_BinaryExpr.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:Pasc.WriteParameter)
}
WriteParameter::WriteParameter(const WriteParameter& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_e()) {
    e_ = new ::Pasc::Expression(*from.e_);
  } else {
    e_ = NULL;
  }
  if (from.has_totalwidth()) {
    totalwidth_ = new ::Pasc::Expression(*from.totalwidth_);
  } else {
    totalwidth_ = NULL;
  }
  if (from.has_fracdigits()) {
    fracdigits_ = new ::Pasc::Expression(*from.fracdigits_);
  } else {
    fracdigits_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:Pasc.WriteParameter)
}

void WriteParameter::SharedCtor() {
  ::memset(&e_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&fracdigits_) -
      reinterpret_cast<char*>(&e_)) + sizeof(fracdigits_));
}

WriteParameter::~WriteParameter() {
  // @@protoc_insertion_point(destructor:Pasc.WriteParameter)
  SharedDtor();
}

void WriteParameter::SharedDtor() {
  if (this != internal_default_instance()) delete e_;
  if (this != internal_default_instance()) delete totalwidth_;
  if (this != internal_default_instance()) delete fracdigits_;
}

void WriteParameter::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* WriteParameter::descriptor() {
  ::protobuf_proto_2fexpression_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_proto_2fexpression_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const WriteParameter& WriteParameter::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_proto_2fexpression_2eproto::scc_info_BinaryExpr.base);
  return *internal_default_instance();
}


void WriteParameter::Clear() {
// @@protoc_insertion_point(message_clear_start:Pasc.WriteParameter)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && e_ != NULL) {
    delete e_;
  }
  e_ = NULL;
  if (GetArenaNoVirtual() == NULL && totalwidth_ != NULL) {
    delete totalwidth_;
  }
  totalwidth_ = NULL;
  if (GetArenaNoVirtual() == NULL && fracdigits_ != NULL) {
    delete fracdigits_;
  }
  fracdigits_ = NULL;
  _internal_metadata_.Clear();
}

bool WriteParameter::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Pasc.WriteParameter)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .Pasc.Expression e = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_e()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .Pasc.Expression totalWidth = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_totalwidth()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .Pasc.Expression fracDigits = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_fracdigits()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Pasc.WriteParameter)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Pasc.WriteParameter)
  return false;
#undef DO_
}

void WriteParameter::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Pasc.WriteParameter)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .Pasc.Expression e = 1;
  if (this->has_e()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_e(), output);
  }

  // .Pasc.Expression totalWidth = 2;
  if (this->has_totalwidth()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_totalwidth(), output);
  }

  // .Pasc.Expression fracDigits = 3;
  if (this->has_fracdigits()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->_internal_fracdigits(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:Pasc.WriteParameter)
}

::google::protobuf::uint8* WriteParameter::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:Pasc.WriteParameter)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .Pasc.Expression e = 1;
  if (this->has_e()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_e(), deterministic, target);
  }

  // .Pasc.Expression totalWidth = 2;
  if (this->has_totalwidth()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_totalwidth(), deterministic, target);
  }

  // .Pasc.Expression fracDigits = 3;
  if (this->has_fracdigits()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->_internal_fracdigits(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Pasc.WriteParameter)
  return target;
}

size_t WriteParameter::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Pasc.WriteParameter)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .Pasc.Expression e = 1;
  if (this->has_e()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *e_);
  }

  // .Pasc.Expression totalWidth = 2;
  if (this->has_totalwidth()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *totalwidth_);
  }

  // .Pasc.Expression fracDigits = 3;
  if (this->has_fracdigits()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *fracdigits_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void WriteParameter::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Pasc.WriteParameter)
  GOOGLE_DCHECK_NE(&from, this);
  const WriteParameter* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const WriteParameter>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Pasc.WriteParameter)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Pasc.WriteParameter)
    MergeFrom(*source);
  }
}

void WriteParameter::MergeFrom(const WriteParameter& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Pasc.WriteParameter)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_e()) {
    mutable_e()->::Pasc::Expression::MergeFrom(from.e());
  }
  if (from.has_totalwidth()) {
    mutable_totalwidth()->::Pasc::Expression::MergeFrom(from.totalwidth());
  }
  if (from.has_fracdigits()) {
    mutable_fracdigits()->::Pasc::Expression::MergeFrom(from.fracdigits());
  }
}

void WriteParameter::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Pasc.WriteParameter)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void WriteParameter::CopyFrom(const WriteParameter& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Pasc.WriteParameter)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool WriteParameter::IsInitialized() const {
  return true;
}

void WriteParameter::Swap(WriteParameter* other) {
  if (other == this) return;
  InternalSwap(other);
}
void WriteParameter::InternalSwap(WriteParameter* other) {
  using std::swap;
  swap(e_, other->e_);
  swap(totalwidth_, other->totalwidth_);
  swap(fracdigits_, other->fracdigits_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata WriteParameter::GetMetadata() const {
  protobuf_proto_2fexpression_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_proto_2fexpression_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void BinaryExpr::InitAsDefaultInstance() {
  ::Pasc::_BinaryExpr_default_instance_._instance.get_mutable()->left_ = const_cast< ::Pasc::Expression*>(
      ::Pasc::Expression::internal_default_instance());
  ::Pasc::_BinaryExpr_default_instance_._instance.get_mutable()->right_ = const_cast< ::Pasc::Expression*>(
      ::Pasc::Expression::internal_default_instance());
  ::Pasc::_BinaryExpr_default_instance_._instance.get_mutable()->op_ = const_cast< ::Pasc::Operator*>(
      ::Pasc::Operator::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int BinaryExpr::kLeftFieldNumber;
const int BinaryExpr::kRightFieldNumber;
const int BinaryExpr::kOpFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

BinaryExpr::BinaryExpr()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_proto_2fexpression_2eproto::scc_info_BinaryExpr.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:Pasc.BinaryExpr)
}
BinaryExpr::BinaryExpr(const BinaryExpr& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_left()) {
    left_ = new ::Pasc::Expression(*from.left_);
  } else {
    left_ = NULL;
  }
  if (from.has_right()) {
    right_ = new ::Pasc::Expression(*from.right_);
  } else {
    right_ = NULL;
  }
  if (from.has_op()) {
    op_ = new ::Pasc::Operator(*from.op_);
  } else {
    op_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:Pasc.BinaryExpr)
}

void BinaryExpr::SharedCtor() {
  ::memset(&left_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&op_) -
      reinterpret_cast<char*>(&left_)) + sizeof(op_));
}

BinaryExpr::~BinaryExpr() {
  // @@protoc_insertion_point(destructor:Pasc.BinaryExpr)
  SharedDtor();
}

void BinaryExpr::SharedDtor() {
  if (this != internal_default_instance()) delete left_;
  if (this != internal_default_instance()) delete right_;
  if (this != internal_default_instance()) delete op_;
}

void BinaryExpr::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* BinaryExpr::descriptor() {
  ::protobuf_proto_2fexpression_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_proto_2fexpression_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const BinaryExpr& BinaryExpr::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_proto_2fexpression_2eproto::scc_info_BinaryExpr.base);
  return *internal_default_instance();
}


void BinaryExpr::Clear() {
// @@protoc_insertion_point(message_clear_start:Pasc.BinaryExpr)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && left_ != NULL) {
    delete left_;
  }
  left_ = NULL;
  if (GetArenaNoVirtual() == NULL && right_ != NULL) {
    delete right_;
  }
  right_ = NULL;
  if (GetArenaNoVirtual() == NULL && op_ != NULL) {
    delete op_;
  }
  op_ = NULL;
  _internal_metadata_.Clear();
}

bool BinaryExpr::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Pasc.BinaryExpr)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .Pasc.Expression left = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_left()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .Pasc.Expression right = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_right()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .Pasc.Operator op = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_op()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Pasc.BinaryExpr)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Pasc.BinaryExpr)
  return false;
#undef DO_
}

void BinaryExpr::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Pasc.BinaryExpr)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .Pasc.Expression left = 1;
  if (this->has_left()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_left(), output);
  }

  // .Pasc.Expression right = 2;
  if (this->has_right()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_right(), output);
  }

  // .Pasc.Operator op = 3;
  if (this->has_op()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->_internal_op(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:Pasc.BinaryExpr)
}

::google::protobuf::uint8* BinaryExpr::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:Pasc.BinaryExpr)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .Pasc.Expression left = 1;
  if (this->has_left()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_left(), deterministic, target);
  }

  // .Pasc.Expression right = 2;
  if (this->has_right()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_right(), deterministic, target);
  }

  // .Pasc.Operator op = 3;
  if (this->has_op()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->_internal_op(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Pasc.BinaryExpr)
  return target;
}

size_t BinaryExpr::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Pasc.BinaryExpr)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .Pasc.Expression left = 1;
  if (this->has_left()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *left_);
  }

  // .Pasc.Expression right = 2;
  if (this->has_right()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *right_);
  }

  // .Pasc.Operator op = 3;
  if (this->has_op()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *op_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void BinaryExpr::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Pasc.BinaryExpr)
  GOOGLE_DCHECK_NE(&from, this);
  const BinaryExpr* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const BinaryExpr>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Pasc.BinaryExpr)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Pasc.BinaryExpr)
    MergeFrom(*source);
  }
}

void BinaryExpr::MergeFrom(const BinaryExpr& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Pasc.BinaryExpr)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_left()) {
    mutable_left()->::Pasc::Expression::MergeFrom(from.left());
  }
  if (from.has_right()) {
    mutable_right()->::Pasc::Expression::MergeFrom(from.right());
  }
  if (from.has_op()) {
    mutable_op()->::Pasc::Operator::MergeFrom(from.op());
  }
}

void BinaryExpr::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Pasc.BinaryExpr)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BinaryExpr::CopyFrom(const BinaryExpr& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Pasc.BinaryExpr)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BinaryExpr::IsInitialized() const {
  return true;
}

void BinaryExpr::Swap(BinaryExpr* other) {
  if (other == this) return;
  InternalSwap(other);
}
void BinaryExpr::InternalSwap(BinaryExpr* other) {
  using std::swap;
  swap(left_, other->left_);
  swap(right_, other->right_);
  swap(op_, other->op_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata BinaryExpr::GetMetadata() const {
  protobuf_proto_2fexpression_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_proto_2fexpression_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void UIntLiteral::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int UIntLiteral::kValueFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

UIntLiteral::UIntLiteral()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_proto_2fexpression_2eproto::scc_info_UIntLiteral.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:Pasc.UIntLiteral)
}
UIntLiteral::UIntLiteral(const UIntLiteral& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  value_ = from.value_;
  // @@protoc_insertion_point(copy_constructor:Pasc.UIntLiteral)
}

void UIntLiteral::SharedCtor() {
  value_ = 0u;
}

UIntLiteral::~UIntLiteral() {
  // @@protoc_insertion_point(destructor:Pasc.UIntLiteral)
  SharedDtor();
}

void UIntLiteral::SharedDtor() {
}

void UIntLiteral::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* UIntLiteral::descriptor() {
  ::protobuf_proto_2fexpression_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_proto_2fexpression_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const UIntLiteral& UIntLiteral::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_proto_2fexpression_2eproto::scc_info_UIntLiteral.base);
  return *internal_default_instance();
}


void UIntLiteral::Clear() {
// @@protoc_insertion_point(message_clear_start:Pasc.UIntLiteral)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  value_ = 0u;
  _internal_metadata_.Clear();
}

bool UIntLiteral::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Pasc.UIntLiteral)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 value = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &value_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Pasc.UIntLiteral)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Pasc.UIntLiteral)
  return false;
#undef DO_
}

void UIntLiteral::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Pasc.UIntLiteral)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 value = 1;
  if (this->value() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->value(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:Pasc.UIntLiteral)
}

::google::protobuf::uint8* UIntLiteral::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:Pasc.UIntLiteral)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 value = 1;
  if (this->value() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->value(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Pasc.UIntLiteral)
  return target;
}

size_t UIntLiteral::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Pasc.UIntLiteral)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint32 value = 1;
  if (this->value() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->value());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void UIntLiteral::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Pasc.UIntLiteral)
  GOOGLE_DCHECK_NE(&from, this);
  const UIntLiteral* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const UIntLiteral>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Pasc.UIntLiteral)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Pasc.UIntLiteral)
    MergeFrom(*source);
  }
}

void UIntLiteral::MergeFrom(const UIntLiteral& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Pasc.UIntLiteral)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.value() != 0) {
    set_value(from.value());
  }
}

void UIntLiteral::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Pasc.UIntLiteral)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UIntLiteral::CopyFrom(const UIntLiteral& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Pasc.UIntLiteral)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UIntLiteral::IsInitialized() const {
  return true;
}

void UIntLiteral::Swap(UIntLiteral* other) {
  if (other == this) return;
  InternalSwap(other);
}
void UIntLiteral::InternalSwap(UIntLiteral* other) {
  using std::swap;
  swap(value_, other->value_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata UIntLiteral::GetMetadata() const {
  protobuf_proto_2fexpression_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_proto_2fexpression_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void FuncCall::InitAsDefaultInstance() {
  ::Pasc::_FuncCall_default_instance_._instance.get_mutable()->name_ = const_cast< ::Pasc::Expression*>(
      ::Pasc::Expression::internal_default_instance());
  ::Pasc::_FuncCall_default_instance_._instance.get_mutable()->returntype_ = const_cast< ::Pasc::Type*>(
      ::Pasc::Type::internal_default_instance());
}
void FuncCall::clear_returntype() {
  if (GetArenaNoVirtual() == NULL && returntype_ != NULL) {
    delete returntype_;
  }
  returntype_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int FuncCall::kNameFieldNumber;
const int FuncCall::kArgsFieldNumber;
const int FuncCall::kReturnTypeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

FuncCall::FuncCall()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_proto_2fexpression_2eproto::scc_info_BinaryExpr.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:Pasc.FuncCall)
}
FuncCall::FuncCall(const FuncCall& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      args_(from.args_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_name()) {
    name_ = new ::Pasc::Expression(*from.name_);
  } else {
    name_ = NULL;
  }
  if (from.has_returntype()) {
    returntype_ = new ::Pasc::Type(*from.returntype_);
  } else {
    returntype_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:Pasc.FuncCall)
}

void FuncCall::SharedCtor() {
  ::memset(&name_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&returntype_) -
      reinterpret_cast<char*>(&name_)) + sizeof(returntype_));
}

FuncCall::~FuncCall() {
  // @@protoc_insertion_point(destructor:Pasc.FuncCall)
  SharedDtor();
}

void FuncCall::SharedDtor() {
  if (this != internal_default_instance()) delete name_;
  if (this != internal_default_instance()) delete returntype_;
}

void FuncCall::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* FuncCall::descriptor() {
  ::protobuf_proto_2fexpression_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_proto_2fexpression_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const FuncCall& FuncCall::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_proto_2fexpression_2eproto::scc_info_BinaryExpr.base);
  return *internal_default_instance();
}


void FuncCall::Clear() {
// @@protoc_insertion_point(message_clear_start:Pasc.FuncCall)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  args_.Clear();
  if (GetArenaNoVirtual() == NULL && name_ != NULL) {
    delete name_;
  }
  name_ = NULL;
  if (GetArenaNoVirtual() == NULL && returntype_ != NULL) {
    delete returntype_;
  }
  returntype_ = NULL;
  _internal_metadata_.Clear();
}

bool FuncCall::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Pasc.FuncCall)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .Pasc.Expression name = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_name()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .Pasc.Expression args = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_args()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .Pasc.Type returnType = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_returntype()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Pasc.FuncCall)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Pasc.FuncCall)
  return false;
#undef DO_
}

void FuncCall::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Pasc.FuncCall)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .Pasc.Expression name = 1;
  if (this->has_name()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_name(), output);
  }

  // repeated .Pasc.Expression args = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->args_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2,
      this->args(static_cast<int>(i)),
      output);
  }

  // .Pasc.Type returnType = 3;
  if (this->has_returntype()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->_internal_returntype(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:Pasc.FuncCall)
}

::google::protobuf::uint8* FuncCall::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:Pasc.FuncCall)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .Pasc.Expression name = 1;
  if (this->has_name()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_name(), deterministic, target);
  }

  // repeated .Pasc.Expression args = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->args_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->args(static_cast<int>(i)), deterministic, target);
  }

  // .Pasc.Type returnType = 3;
  if (this->has_returntype()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->_internal_returntype(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Pasc.FuncCall)
  return target;
}

size_t FuncCall::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Pasc.FuncCall)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .Pasc.Expression args = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->args_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->args(static_cast<int>(i)));
    }
  }

  // .Pasc.Expression name = 1;
  if (this->has_name()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *name_);
  }

  // .Pasc.Type returnType = 3;
  if (this->has_returntype()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *returntype_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void FuncCall::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Pasc.FuncCall)
  GOOGLE_DCHECK_NE(&from, this);
  const FuncCall* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const FuncCall>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Pasc.FuncCall)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Pasc.FuncCall)
    MergeFrom(*source);
  }
}

void FuncCall::MergeFrom(const FuncCall& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Pasc.FuncCall)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  args_.MergeFrom(from.args_);
  if (from.has_name()) {
    mutable_name()->::Pasc::Expression::MergeFrom(from.name());
  }
  if (from.has_returntype()) {
    mutable_returntype()->::Pasc::Type::MergeFrom(from.returntype());
  }
}

void FuncCall::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Pasc.FuncCall)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void FuncCall::CopyFrom(const FuncCall& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Pasc.FuncCall)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool FuncCall::IsInitialized() const {
  return true;
}

void FuncCall::Swap(FuncCall* other) {
  if (other == this) return;
  InternalSwap(other);
}
void FuncCall::InternalSwap(FuncCall* other) {
  using std::swap;
  CastToBase(&args_)->InternalSwap(CastToBase(&other->args_));
  swap(name_, other->name_);
  swap(returntype_, other->returntype_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata FuncCall::GetMetadata() const {
  protobuf_proto_2fexpression_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_proto_2fexpression_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Operator::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Operator::kOpFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Operator::Operator()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_proto_2fexpression_2eproto::scc_info_Operator.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:Pasc.Operator)
}
Operator::Operator(const Operator& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  op_ = from.op_;
  // @@protoc_insertion_point(copy_constructor:Pasc.Operator)
}

void Operator::SharedCtor() {
  op_ = 0;
}

Operator::~Operator() {
  // @@protoc_insertion_point(destructor:Pasc.Operator)
  SharedDtor();
}

void Operator::SharedDtor() {
}

void Operator::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Operator::descriptor() {
  ::protobuf_proto_2fexpression_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_proto_2fexpression_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Operator& Operator::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_proto_2fexpression_2eproto::scc_info_Operator.base);
  return *internal_default_instance();
}


void Operator::Clear() {
// @@protoc_insertion_point(message_clear_start:Pasc.Operator)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  op_ = 0;
  _internal_metadata_.Clear();
}

bool Operator::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Pasc.Operator)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .Pasc.Operator.OpKind op = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_op(static_cast< ::Pasc::Operator_OpKind >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Pasc.Operator)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Pasc.Operator)
  return false;
#undef DO_
}

void Operator::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Pasc.Operator)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .Pasc.Operator.OpKind op = 1;
  if (this->op() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->op(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:Pasc.Operator)
}

::google::protobuf::uint8* Operator::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:Pasc.Operator)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .Pasc.Operator.OpKind op = 1;
  if (this->op() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->op(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Pasc.Operator)
  return target;
}

size_t Operator::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Pasc.Operator)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .Pasc.Operator.OpKind op = 1;
  if (this->op() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->op());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Operator::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Pasc.Operator)
  GOOGLE_DCHECK_NE(&from, this);
  const Operator* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Operator>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Pasc.Operator)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Pasc.Operator)
    MergeFrom(*source);
  }
}

void Operator::MergeFrom(const Operator& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Pasc.Operator)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.op() != 0) {
    set_op(from.op());
  }
}

void Operator::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Pasc.Operator)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Operator::CopyFrom(const Operator& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Pasc.Operator)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Operator::IsInitialized() const {
  return true;
}

void Operator::Swap(Operator* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Operator::InternalSwap(Operator* other) {
  using std::swap;
  swap(op_, other->op_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Operator::GetMetadata() const {
  protobuf_proto_2fexpression_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_proto_2fexpression_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace Pasc
namespace google {
namespace protobuf {
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::Pasc::Identifier_Variable* Arena::CreateMaybeMessage< ::Pasc::Identifier_Variable >(Arena* arena) {
  return Arena::CreateInternal< ::Pasc::Identifier_Variable >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::Pasc::Identifier_IndexedVariable* Arena::CreateMaybeMessage< ::Pasc::Identifier_IndexedVariable >(Arena* arena) {
  return Arena::CreateInternal< ::Pasc::Identifier_IndexedVariable >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::Pasc::Identifier_FieldDesignator* Arena::CreateMaybeMessage< ::Pasc::Identifier_FieldDesignator >(Arena* arena) {
  return Arena::CreateInternal< ::Pasc::Identifier_FieldDesignator >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::Pasc::Identifier* Arena::CreateMaybeMessage< ::Pasc::Identifier >(Arena* arena) {
  return Arena::CreateInternal< ::Pasc::Identifier >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::Pasc::Expression* Arena::CreateMaybeMessage< ::Pasc::Expression >(Arena* arena) {
  return Arena::CreateInternal< ::Pasc::Expression >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::Pasc::WriteParameter* Arena::CreateMaybeMessage< ::Pasc::WriteParameter >(Arena* arena) {
  return Arena::CreateInternal< ::Pasc::WriteParameter >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::Pasc::BinaryExpr* Arena::CreateMaybeMessage< ::Pasc::BinaryExpr >(Arena* arena) {
  return Arena::CreateInternal< ::Pasc::BinaryExpr >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::Pasc::UIntLiteral* Arena::CreateMaybeMessage< ::Pasc::UIntLiteral >(Arena* arena) {
  return Arena::CreateInternal< ::Pasc::UIntLiteral >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::Pasc::FuncCall* Arena::CreateMaybeMessage< ::Pasc::FuncCall >(Arena* arena) {
  return Arena::CreateInternal< ::Pasc::FuncCall >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::Pasc::Operator* Arena::CreateMaybeMessage< ::Pasc::Operator >(Arena* arena) {
  return Arena::CreateInternal< ::Pasc::Operator >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
