// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: proto/statement.proto

#include "proto/statement.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)

namespace protobuf_proto_2fexpression_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_proto_2fexpression_2eproto ::google::protobuf::internal::SCCInfo<4> scc_info_BinaryExpr;
}  // namespace protobuf_proto_2fexpression_2eproto
namespace protobuf_proto_2fstatement_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_proto_2fstatement_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_ProcedureStatement_Read;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_proto_2fstatement_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_ProcedureStatement_ReadLn;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_proto_2fstatement_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_ProcedureStatement_Write;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_proto_2fstatement_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_AssignStatement;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_proto_2fstatement_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_ProcedureStatement_ProcStmt;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_proto_2fstatement_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_ProcedureStatement_WriteLn;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_proto_2fstatement_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_ReturnStatement;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_proto_2fstatement_2eproto ::google::protobuf::internal::SCCInfo<4> scc_info_CompoundStatement;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_proto_2fstatement_2eproto ::google::protobuf::internal::SCCInfo<5> scc_info_ProcedureStatement;
}  // namespace protobuf_proto_2fstatement_2eproto
namespace Pasc {
class ProcedureStatement_WriteLnDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ProcedureStatement_WriteLn>
      _instance;
} _ProcedureStatement_WriteLn_default_instance_;
class ProcedureStatement_WriteDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ProcedureStatement_Write>
      _instance;
} _ProcedureStatement_Write_default_instance_;
class ProcedureStatement_ReadDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ProcedureStatement_Read>
      _instance;
} _ProcedureStatement_Read_default_instance_;
class ProcedureStatement_ReadLnDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ProcedureStatement_ReadLn>
      _instance;
} _ProcedureStatement_ReadLn_default_instance_;
class ProcedureStatement_ProcStmtDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ProcedureStatement_ProcStmt>
      _instance;
} _ProcedureStatement_ProcStmt_default_instance_;
class ProcedureStatementDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ProcedureStatement>
      _instance;
  const ::Pasc::ProcedureStatement_Write* wrt_;
  const ::Pasc::ProcedureStatement_WriteLn* wrtln_;
  const ::Pasc::ProcedureStatement_Read* rd_;
  const ::Pasc::ProcedureStatement_ReadLn* rdln_;
  const ::Pasc::ProcedureStatement_ProcStmt* ps_;
} _ProcedureStatement_default_instance_;
class AssignStatementDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<AssignStatement>
      _instance;
} _AssignStatement_default_instance_;
class IfStatementDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<IfStatement>
      _instance;
} _IfStatement_default_instance_;
class ReturnStatementDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ReturnStatement>
      _instance;
} _ReturnStatement_default_instance_;
class WhileStatementDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<WhileStatement>
      _instance;
} _WhileStatement_default_instance_;
class CompoundStatementDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CompoundStatement>
      _instance;
} _CompoundStatement_default_instance_;
class RepeatStatementDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<RepeatStatement>
      _instance;
} _RepeatStatement_default_instance_;
class ForStatementDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ForStatement>
      _instance;
} _ForStatement_default_instance_;
class StatementDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Statement>
      _instance;
  const ::Pasc::AssignStatement* assignstmt_;
  const ::Pasc::ProcedureStatement* procstmt_;
  const ::Pasc::IfStatement* ifstmt_;
  const ::Pasc::ReturnStatement* retstmt_;
  const ::Pasc::WhileStatement* whilestmt_;
  const ::Pasc::CompoundStatement* cmpdstmt_;
  const ::Pasc::RepeatStatement* rptstmt_;
  const ::Pasc::ForStatement* forstmt_;
} _Statement_default_instance_;
}  // namespace Pasc
namespace protobuf_proto_2fstatement_2eproto {
static void InitDefaultsProcedureStatement_WriteLn() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::Pasc::_ProcedureStatement_WriteLn_default_instance_;
    new (ptr) ::Pasc::ProcedureStatement_WriteLn();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::Pasc::ProcedureStatement_WriteLn::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_ProcedureStatement_WriteLn =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsProcedureStatement_WriteLn}, {
      &protobuf_proto_2fexpression_2eproto::scc_info_BinaryExpr.base,}};

static void InitDefaultsProcedureStatement_Write() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::Pasc::_ProcedureStatement_Write_default_instance_;
    new (ptr) ::Pasc::ProcedureStatement_Write();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::Pasc::ProcedureStatement_Write::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_ProcedureStatement_Write =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsProcedureStatement_Write}, {}};

static void InitDefaultsProcedureStatement_Read() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::Pasc::_ProcedureStatement_Read_default_instance_;
    new (ptr) ::Pasc::ProcedureStatement_Read();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::Pasc::ProcedureStatement_Read::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_ProcedureStatement_Read =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsProcedureStatement_Read}, {}};

static void InitDefaultsProcedureStatement_ReadLn() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::Pasc::_ProcedureStatement_ReadLn_default_instance_;
    new (ptr) ::Pasc::ProcedureStatement_ReadLn();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::Pasc::ProcedureStatement_ReadLn::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_ProcedureStatement_ReadLn =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsProcedureStatement_ReadLn}, {}};

static void InitDefaultsProcedureStatement_ProcStmt() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::Pasc::_ProcedureStatement_ProcStmt_default_instance_;
    new (ptr) ::Pasc::ProcedureStatement_ProcStmt();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::Pasc::ProcedureStatement_ProcStmt::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_ProcedureStatement_ProcStmt =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsProcedureStatement_ProcStmt}, {
      &protobuf_proto_2fexpression_2eproto::scc_info_BinaryExpr.base,}};

static void InitDefaultsProcedureStatement() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::Pasc::_ProcedureStatement_default_instance_;
    new (ptr) ::Pasc::ProcedureStatement();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::Pasc::ProcedureStatement::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<5> scc_info_ProcedureStatement =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 5, InitDefaultsProcedureStatement}, {
      &protobuf_proto_2fstatement_2eproto::scc_info_ProcedureStatement_Write.base,
      &protobuf_proto_2fstatement_2eproto::scc_info_ProcedureStatement_WriteLn.base,
      &protobuf_proto_2fstatement_2eproto::scc_info_ProcedureStatement_Read.base,
      &protobuf_proto_2fstatement_2eproto::scc_info_ProcedureStatement_ReadLn.base,
      &protobuf_proto_2fstatement_2eproto::scc_info_ProcedureStatement_ProcStmt.base,}};

static void InitDefaultsAssignStatement() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::Pasc::_AssignStatement_default_instance_;
    new (ptr) ::Pasc::AssignStatement();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::Pasc::AssignStatement::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_AssignStatement =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsAssignStatement}, {
      &protobuf_proto_2fexpression_2eproto::scc_info_BinaryExpr.base,}};

static void InitDefaultsReturnStatement() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::Pasc::_ReturnStatement_default_instance_;
    new (ptr) ::Pasc::ReturnStatement();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::Pasc::ReturnStatement::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_ReturnStatement =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsReturnStatement}, {
      &protobuf_proto_2fexpression_2eproto::scc_info_BinaryExpr.base,}};

static void InitDefaultsCompoundStatement() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::Pasc::_IfStatement_default_instance_;
    new (ptr) ::Pasc::IfStatement();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  {
    void* ptr = &::Pasc::_WhileStatement_default_instance_;
    new (ptr) ::Pasc::WhileStatement();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  {
    void* ptr = &::Pasc::_CompoundStatement_default_instance_;
    new (ptr) ::Pasc::CompoundStatement();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  {
    void* ptr = &::Pasc::_RepeatStatement_default_instance_;
    new (ptr) ::Pasc::RepeatStatement();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  {
    void* ptr = &::Pasc::_ForStatement_default_instance_;
    new (ptr) ::Pasc::ForStatement();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  {
    void* ptr = &::Pasc::_Statement_default_instance_;
    new (ptr) ::Pasc::Statement();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::Pasc::IfStatement::InitAsDefaultInstance();
  ::Pasc::WhileStatement::InitAsDefaultInstance();
  ::Pasc::CompoundStatement::InitAsDefaultInstance();
  ::Pasc::RepeatStatement::InitAsDefaultInstance();
  ::Pasc::ForStatement::InitAsDefaultInstance();
  ::Pasc::Statement::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<4> scc_info_CompoundStatement =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 4, InitDefaultsCompoundStatement}, {
      &protobuf_proto_2fexpression_2eproto::scc_info_BinaryExpr.base,
      &protobuf_proto_2fstatement_2eproto::scc_info_AssignStatement.base,
      &protobuf_proto_2fstatement_2eproto::scc_info_ProcedureStatement.base,
      &protobuf_proto_2fstatement_2eproto::scc_info_ReturnStatement.base,}};

void InitDefaults() {
  ::google::protobuf::internal::InitSCC(&scc_info_ProcedureStatement_WriteLn.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ProcedureStatement_Write.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ProcedureStatement_Read.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ProcedureStatement_ReadLn.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ProcedureStatement_ProcStmt.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ProcedureStatement.base);
  ::google::protobuf::internal::InitSCC(&scc_info_AssignStatement.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ReturnStatement.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CompoundStatement.base);
}

::google::protobuf::Metadata file_level_metadata[14];
const ::google::protobuf::EnumDescriptor* file_level_enum_descriptors[2];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Pasc::ProcedureStatement_WriteLn, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Pasc::ProcedureStatement_WriteLn, name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Pasc::ProcedureStatement_WriteLn, file_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Pasc::ProcedureStatement_WriteLn, params_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Pasc::ProcedureStatement_Write, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Pasc::ProcedureStatement_Read, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Pasc::ProcedureStatement_ReadLn, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Pasc::ProcedureStatement_ProcStmt, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Pasc::ProcedureStatement_ProcStmt, name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Pasc::ProcedureStatement_ProcStmt, params_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Pasc::ProcedureStatement, _internal_metadata_),
  ~0u,  // no _extensions_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Pasc::ProcedureStatement, _oneof_case_[0]),
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Pasc::ProcedureStatement, kind_),
  offsetof(::Pasc::ProcedureStatementDefaultTypeInternal, wrt_),
  offsetof(::Pasc::ProcedureStatementDefaultTypeInternal, wrtln_),
  offsetof(::Pasc::ProcedureStatementDefaultTypeInternal, rd_),
  offsetof(::Pasc::ProcedureStatementDefaultTypeInternal, rdln_),
  offsetof(::Pasc::ProcedureStatementDefaultTypeInternal, ps_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Pasc::ProcedureStatement, stmt_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Pasc::AssignStatement, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Pasc::AssignStatement, variable_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Pasc::AssignStatement, value_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Pasc::IfStatement, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Pasc::IfStatement, cond_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Pasc::IfStatement, truepath_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Pasc::IfStatement, elsepath_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Pasc::ReturnStatement, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Pasc::ReturnStatement, value_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Pasc::WhileStatement, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Pasc::WhileStatement, cond_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Pasc::WhileStatement, body_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Pasc::CompoundStatement, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Pasc::CompoundStatement, stmts_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Pasc::RepeatStatement, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Pasc::RepeatStatement, stmts_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Pasc::RepeatStatement, cond_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Pasc::ForStatement, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Pasc::ForStatement, ctlvar_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Pasc::ForStatement, initvalue_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Pasc::ForStatement, finalvalue_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Pasc::ForStatement, body_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Pasc::ForStatement, dir_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Pasc::Statement, _internal_metadata_),
  ~0u,  // no _extensions_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Pasc::Statement, _oneof_case_[0]),
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Pasc::Statement, kind_),
  offsetof(::Pasc::StatementDefaultTypeInternal, assignstmt_),
  offsetof(::Pasc::StatementDefaultTypeInternal, procstmt_),
  offsetof(::Pasc::StatementDefaultTypeInternal, ifstmt_),
  offsetof(::Pasc::StatementDefaultTypeInternal, retstmt_),
  offsetof(::Pasc::StatementDefaultTypeInternal, whilestmt_),
  offsetof(::Pasc::StatementDefaultTypeInternal, cmpdstmt_),
  offsetof(::Pasc::StatementDefaultTypeInternal, rptstmt_),
  offsetof(::Pasc::StatementDefaultTypeInternal, forstmt_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Pasc::Statement, stmt_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::Pasc::ProcedureStatement_WriteLn)},
  { 8, -1, sizeof(::Pasc::ProcedureStatement_Write)},
  { 13, -1, sizeof(::Pasc::ProcedureStatement_Read)},
  { 18, -1, sizeof(::Pasc::ProcedureStatement_ReadLn)},
  { 23, -1, sizeof(::Pasc::ProcedureStatement_ProcStmt)},
  { 30, -1, sizeof(::Pasc::ProcedureStatement)},
  { 42, -1, sizeof(::Pasc::AssignStatement)},
  { 49, -1, sizeof(::Pasc::IfStatement)},
  { 57, -1, sizeof(::Pasc::ReturnStatement)},
  { 63, -1, sizeof(::Pasc::WhileStatement)},
  { 70, -1, sizeof(::Pasc::CompoundStatement)},
  { 76, -1, sizeof(::Pasc::RepeatStatement)},
  { 83, -1, sizeof(::Pasc::ForStatement)},
  { 93, -1, sizeof(::Pasc::Statement)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::Pasc::_ProcedureStatement_WriteLn_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::Pasc::_ProcedureStatement_Write_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::Pasc::_ProcedureStatement_Read_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::Pasc::_ProcedureStatement_ReadLn_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::Pasc::_ProcedureStatement_ProcStmt_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::Pasc::_ProcedureStatement_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::Pasc::_AssignStatement_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::Pasc::_IfStatement_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::Pasc::_ReturnStatement_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::Pasc::_WhileStatement_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::Pasc::_CompoundStatement_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::Pasc::_RepeatStatement_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::Pasc::_ForStatement_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::Pasc::_Statement_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  AssignDescriptors(
      "proto/statement.proto", schemas, file_default_instances, TableStruct::offsets,
      file_level_metadata, file_level_enum_descriptors, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 14);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\025proto/statement.proto\022\004Pasc\032\021proto/tok"
      "en.proto\032\026proto/expression.proto\"\302\004\n\022Pro"
      "cedureStatement\022-\n\004kind\030\001 \001(\0162\037.Pasc.Pro"
      "cedureStatement.PSKind\022-\n\003wrt\030\002 \001(\0132\036.Pa"
      "sc.ProcedureStatement.WriteH\000\0221\n\005wrtLn\030\003"
      " \001(\0132 .Pasc.ProcedureStatement.WriteLnH\000"
      "\022+\n\002rd\030\004 \001(\0132\035.Pasc.ProcedureStatement.R"
      "eadH\000\022/\n\004rdLn\030\005 \001(\0132\037.Pasc.ProcedureStat"
      "ement.ReadLnH\000\022/\n\002ps\030\006 \001(\0132!.Pasc.Proced"
      "ureStatement.ProcStmtH\000\032Y\n\007WriteLn\022\014\n\004na"
      "me\030\001 \001(\t\022\036\n\004file\030\002 \001(\0132\020.Pasc.Expression"
      "\022 \n\006params\030\003 \003(\0132\020.Pasc.Expression\032\007\n\005Wr"
      "ite\032\006\n\004Read\032\010\n\006ReadLn\032L\n\010ProcStmt\022\036\n\004nam"
      "e\030\001 \001(\0132\020.Pasc.Expression\022 \n\006params\030\002 \003("
      "\0132\020.Pasc.Expression\"@\n\006PSKind\022\007\n\003wln\020\000\022\t"
      "\n\005write\020\001\022\010\n\004read\020\002\022\n\n\006readLn\020\003\022\014\n\010procS"
      "tmt\020\004B\006\n\004stmt\"V\n\017AssignStatement\022\"\n\010vari"
      "able\030\001 \001(\0132\020.Pasc.Expression\022\037\n\005value\030\002 "
      "\001(\0132\020.Pasc.Expression\"s\n\013IfStatement\022\036\n\004"
      "cond\030\001 \001(\0132\020.Pasc.Expression\022!\n\010truePath"
      "\030\002 \001(\0132\017.Pasc.Statement\022!\n\010elsePath\030\003 \001("
      "\0132\017.Pasc.Statement\"2\n\017ReturnStatement\022\037\n"
      "\005value\030\001 \001(\0132\020.Pasc.Expression\"O\n\016WhileS"
      "tatement\022\036\n\004cond\030\001 \001(\0132\020.Pasc.Expression"
      "\022\035\n\004body\030\002 \001(\0132\017.Pasc.Statement\"3\n\021Compo"
      "undStatement\022\036\n\005stmts\030\001 \003(\0132\017.Pasc.State"
      "ment\"Q\n\017RepeatStatement\022\036\n\005stmts\030\001 \003(\0132\017"
      ".Pasc.Statement\022\036\n\004cond\030\002 \001(\0132\020.Pasc.Exp"
      "ression\"\270\001\n\014ForStatement\022 \n\006ctlVar\030\001 \001(\013"
      "2\020.Pasc.Expression\022#\n\tinitValue\030\002 \001(\0132\020."
      "Pasc.Expression\022$\n\nfinalValue\030\003 \001(\0132\020.Pa"
      "sc.Expression\022\035\n\004body\030\004 \001(\0132\017.Pasc.State"
      "ment\022\034\n\003dir\030\005 \001(\0162\017.Pasc.TokenKind\"\367\003\n\tS"
      "tatement\022&\n\004kind\030\001 \001(\0162\030.Pasc.Statement."
      "StmtKind\022+\n\nassignStmt\030\002 \001(\0132\025.Pasc.Assi"
      "gnStatementH\000\022,\n\010procStmt\030\003 \001(\0132\030.Pasc.P"
      "rocedureStatementH\000\022#\n\006ifStmt\030\004 \001(\0132\021.Pa"
      "sc.IfStatementH\000\022(\n\007retStmt\030\005 \001(\0132\025.Pasc"
      ".ReturnStatementH\000\022)\n\twhileStmt\030\006 \001(\0132\024."
      "Pasc.WhileStatementH\000\022+\n\010cmpdStmt\030\007 \001(\0132"
      "\027.Pasc.CompoundStatementH\000\022(\n\007rptStmt\030\010 "
      "\001(\0132\025.Pasc.RepeatStatementH\000\022%\n\007forStmt\030"
      "\t \001(\0132\022.Pasc.ForStatementH\000\"g\n\010StmtKind\022"
      "\006\n\002if\020\000\022\n\n\006assign\020\001\022\r\n\tprocedure\020\002\022\n\n\006re"
      "turn\020\003\022\t\n\005while\020\004\022\014\n\010compound\020\005\022\n\n\006repea"
      "t\020\006\022\007\n\003for\020\007B\006\n\004stmtB\030Z\026pkg/codegen/seri"
      "alizerb\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 1854);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "proto/statement.proto", &protobuf_RegisterTypes);
  ::protobuf_proto_2ftoken_2eproto::AddDescriptors();
  ::protobuf_proto_2fexpression_2eproto::AddDescriptors();
}

void AddDescriptors() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_proto_2fstatement_2eproto
namespace Pasc {
const ::google::protobuf::EnumDescriptor* ProcedureStatement_PSKind_descriptor() {
  protobuf_proto_2fstatement_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_proto_2fstatement_2eproto::file_level_enum_descriptors[0];
}
bool ProcedureStatement_PSKind_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const ProcedureStatement_PSKind ProcedureStatement::wln;
const ProcedureStatement_PSKind ProcedureStatement::write;
const ProcedureStatement_PSKind ProcedureStatement::read;
const ProcedureStatement_PSKind ProcedureStatement::readLn;
const ProcedureStatement_PSKind ProcedureStatement::procStmt;
const ProcedureStatement_PSKind ProcedureStatement::PSKind_MIN;
const ProcedureStatement_PSKind ProcedureStatement::PSKind_MAX;
const int ProcedureStatement::PSKind_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* Statement_StmtKind_descriptor() {
  protobuf_proto_2fstatement_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_proto_2fstatement_2eproto::file_level_enum_descriptors[1];
}
bool Statement_StmtKind_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const Statement_StmtKind Statement::if_;
const Statement_StmtKind Statement::assign;
const Statement_StmtKind Statement::procedure;
const Statement_StmtKind Statement::return_;
const Statement_StmtKind Statement::while_;
const Statement_StmtKind Statement::compound;
const Statement_StmtKind Statement::repeat;
const Statement_StmtKind Statement::for_;
const Statement_StmtKind Statement::StmtKind_MIN;
const Statement_StmtKind Statement::StmtKind_MAX;
const int Statement::StmtKind_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

// ===================================================================

void ProcedureStatement_WriteLn::InitAsDefaultInstance() {
  ::Pasc::_ProcedureStatement_WriteLn_default_instance_._instance.get_mutable()->file_ = const_cast< ::Pasc::Expression*>(
      ::Pasc::Expression::internal_default_instance());
}
void ProcedureStatement_WriteLn::clear_file() {
  if (GetArenaNoVirtual() == NULL && file_ != NULL) {
    delete file_;
  }
  file_ = NULL;
}
void ProcedureStatement_WriteLn::clear_params() {
  params_.Clear();
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ProcedureStatement_WriteLn::kNameFieldNumber;
const int ProcedureStatement_WriteLn::kFileFieldNumber;
const int ProcedureStatement_WriteLn::kParamsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ProcedureStatement_WriteLn::ProcedureStatement_WriteLn()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_proto_2fstatement_2eproto::scc_info_ProcedureStatement_WriteLn.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:Pasc.ProcedureStatement.WriteLn)
}
ProcedureStatement_WriteLn::ProcedureStatement_WriteLn(const ProcedureStatement_WriteLn& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      params_(from.params_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.name().size() > 0) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.has_file()) {
    file_ = new ::Pasc::Expression(*from.file_);
  } else {
    file_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:Pasc.ProcedureStatement.WriteLn)
}

void ProcedureStatement_WriteLn::SharedCtor() {
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  file_ = NULL;
}

ProcedureStatement_WriteLn::~ProcedureStatement_WriteLn() {
  // @@protoc_insertion_point(destructor:Pasc.ProcedureStatement.WriteLn)
  SharedDtor();
}

void ProcedureStatement_WriteLn::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete file_;
}

void ProcedureStatement_WriteLn::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ProcedureStatement_WriteLn::descriptor() {
  ::protobuf_proto_2fstatement_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_proto_2fstatement_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ProcedureStatement_WriteLn& ProcedureStatement_WriteLn::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_proto_2fstatement_2eproto::scc_info_ProcedureStatement_WriteLn.base);
  return *internal_default_instance();
}


void ProcedureStatement_WriteLn::Clear() {
// @@protoc_insertion_point(message_clear_start:Pasc.ProcedureStatement.WriteLn)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  params_.Clear();
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && file_ != NULL) {
    delete file_;
  }
  file_ = NULL;
  _internal_metadata_.Clear();
}

bool ProcedureStatement_WriteLn::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Pasc.ProcedureStatement.WriteLn)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string name = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Pasc.ProcedureStatement.WriteLn.name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .Pasc.Expression file = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_file()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .Pasc.Expression params = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_params()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Pasc.ProcedureStatement.WriteLn)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Pasc.ProcedureStatement.WriteLn)
  return false;
#undef DO_
}

void ProcedureStatement_WriteLn::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Pasc.ProcedureStatement.WriteLn)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Pasc.ProcedureStatement.WriteLn.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  // .Pasc.Expression file = 2;
  if (this->has_file()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_file(), output);
  }

  // repeated .Pasc.Expression params = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->params_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3,
      this->params(static_cast<int>(i)),
      output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:Pasc.ProcedureStatement.WriteLn)
}

::google::protobuf::uint8* ProcedureStatement_WriteLn::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:Pasc.ProcedureStatement.WriteLn)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Pasc.ProcedureStatement.WriteLn.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  // .Pasc.Expression file = 2;
  if (this->has_file()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_file(), deterministic, target);
  }

  // repeated .Pasc.Expression params = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->params_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->params(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Pasc.ProcedureStatement.WriteLn)
  return target;
}

size_t ProcedureStatement_WriteLn::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Pasc.ProcedureStatement.WriteLn)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .Pasc.Expression params = 3;
  {
    unsigned int count = static_cast<unsigned int>(this->params_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->params(static_cast<int>(i)));
    }
  }

  // string name = 1;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  // .Pasc.Expression file = 2;
  if (this->has_file()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *file_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ProcedureStatement_WriteLn::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Pasc.ProcedureStatement.WriteLn)
  GOOGLE_DCHECK_NE(&from, this);
  const ProcedureStatement_WriteLn* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ProcedureStatement_WriteLn>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Pasc.ProcedureStatement.WriteLn)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Pasc.ProcedureStatement.WriteLn)
    MergeFrom(*source);
  }
}

void ProcedureStatement_WriteLn::MergeFrom(const ProcedureStatement_WriteLn& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Pasc.ProcedureStatement.WriteLn)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  params_.MergeFrom(from.params_);
  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.has_file()) {
    mutable_file()->::Pasc::Expression::MergeFrom(from.file());
  }
}

void ProcedureStatement_WriteLn::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Pasc.ProcedureStatement.WriteLn)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ProcedureStatement_WriteLn::CopyFrom(const ProcedureStatement_WriteLn& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Pasc.ProcedureStatement.WriteLn)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ProcedureStatement_WriteLn::IsInitialized() const {
  return true;
}

void ProcedureStatement_WriteLn::Swap(ProcedureStatement_WriteLn* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ProcedureStatement_WriteLn::InternalSwap(ProcedureStatement_WriteLn* other) {
  using std::swap;
  CastToBase(&params_)->InternalSwap(CastToBase(&other->params_));
  name_.Swap(&other->name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(file_, other->file_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ProcedureStatement_WriteLn::GetMetadata() const {
  protobuf_proto_2fstatement_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_proto_2fstatement_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ProcedureStatement_Write::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ProcedureStatement_Write::ProcedureStatement_Write()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_proto_2fstatement_2eproto::scc_info_ProcedureStatement_Write.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:Pasc.ProcedureStatement.Write)
}
ProcedureStatement_Write::ProcedureStatement_Write(const ProcedureStatement_Write& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:Pasc.ProcedureStatement.Write)
}

void ProcedureStatement_Write::SharedCtor() {
}

ProcedureStatement_Write::~ProcedureStatement_Write() {
  // @@protoc_insertion_point(destructor:Pasc.ProcedureStatement.Write)
  SharedDtor();
}

void ProcedureStatement_Write::SharedDtor() {
}

void ProcedureStatement_Write::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ProcedureStatement_Write::descriptor() {
  ::protobuf_proto_2fstatement_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_proto_2fstatement_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ProcedureStatement_Write& ProcedureStatement_Write::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_proto_2fstatement_2eproto::scc_info_ProcedureStatement_Write.base);
  return *internal_default_instance();
}


void ProcedureStatement_Write::Clear() {
// @@protoc_insertion_point(message_clear_start:Pasc.ProcedureStatement.Write)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear();
}

bool ProcedureStatement_Write::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Pasc.ProcedureStatement.Write)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, _internal_metadata_.mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:Pasc.ProcedureStatement.Write)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Pasc.ProcedureStatement.Write)
  return false;
#undef DO_
}

void ProcedureStatement_Write::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Pasc.ProcedureStatement.Write)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:Pasc.ProcedureStatement.Write)
}

::google::protobuf::uint8* ProcedureStatement_Write::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:Pasc.ProcedureStatement.Write)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Pasc.ProcedureStatement.Write)
  return target;
}

size_t ProcedureStatement_Write::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Pasc.ProcedureStatement.Write)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ProcedureStatement_Write::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Pasc.ProcedureStatement.Write)
  GOOGLE_DCHECK_NE(&from, this);
  const ProcedureStatement_Write* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ProcedureStatement_Write>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Pasc.ProcedureStatement.Write)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Pasc.ProcedureStatement.Write)
    MergeFrom(*source);
  }
}

void ProcedureStatement_Write::MergeFrom(const ProcedureStatement_Write& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Pasc.ProcedureStatement.Write)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void ProcedureStatement_Write::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Pasc.ProcedureStatement.Write)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ProcedureStatement_Write::CopyFrom(const ProcedureStatement_Write& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Pasc.ProcedureStatement.Write)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ProcedureStatement_Write::IsInitialized() const {
  return true;
}

void ProcedureStatement_Write::Swap(ProcedureStatement_Write* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ProcedureStatement_Write::InternalSwap(ProcedureStatement_Write* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ProcedureStatement_Write::GetMetadata() const {
  protobuf_proto_2fstatement_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_proto_2fstatement_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ProcedureStatement_Read::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ProcedureStatement_Read::ProcedureStatement_Read()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_proto_2fstatement_2eproto::scc_info_ProcedureStatement_Read.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:Pasc.ProcedureStatement.Read)
}
ProcedureStatement_Read::ProcedureStatement_Read(const ProcedureStatement_Read& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:Pasc.ProcedureStatement.Read)
}

void ProcedureStatement_Read::SharedCtor() {
}

ProcedureStatement_Read::~ProcedureStatement_Read() {
  // @@protoc_insertion_point(destructor:Pasc.ProcedureStatement.Read)
  SharedDtor();
}

void ProcedureStatement_Read::SharedDtor() {
}

void ProcedureStatement_Read::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ProcedureStatement_Read::descriptor() {
  ::protobuf_proto_2fstatement_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_proto_2fstatement_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ProcedureStatement_Read& ProcedureStatement_Read::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_proto_2fstatement_2eproto::scc_info_ProcedureStatement_Read.base);
  return *internal_default_instance();
}


void ProcedureStatement_Read::Clear() {
// @@protoc_insertion_point(message_clear_start:Pasc.ProcedureStatement.Read)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear();
}

bool ProcedureStatement_Read::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Pasc.ProcedureStatement.Read)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, _internal_metadata_.mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:Pasc.ProcedureStatement.Read)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Pasc.ProcedureStatement.Read)
  return false;
#undef DO_
}

void ProcedureStatement_Read::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Pasc.ProcedureStatement.Read)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:Pasc.ProcedureStatement.Read)
}

::google::protobuf::uint8* ProcedureStatement_Read::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:Pasc.ProcedureStatement.Read)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Pasc.ProcedureStatement.Read)
  return target;
}

size_t ProcedureStatement_Read::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Pasc.ProcedureStatement.Read)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ProcedureStatement_Read::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Pasc.ProcedureStatement.Read)
  GOOGLE_DCHECK_NE(&from, this);
  const ProcedureStatement_Read* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ProcedureStatement_Read>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Pasc.ProcedureStatement.Read)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Pasc.ProcedureStatement.Read)
    MergeFrom(*source);
  }
}

void ProcedureStatement_Read::MergeFrom(const ProcedureStatement_Read& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Pasc.ProcedureStatement.Read)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void ProcedureStatement_Read::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Pasc.ProcedureStatement.Read)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ProcedureStatement_Read::CopyFrom(const ProcedureStatement_Read& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Pasc.ProcedureStatement.Read)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ProcedureStatement_Read::IsInitialized() const {
  return true;
}

void ProcedureStatement_Read::Swap(ProcedureStatement_Read* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ProcedureStatement_Read::InternalSwap(ProcedureStatement_Read* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ProcedureStatement_Read::GetMetadata() const {
  protobuf_proto_2fstatement_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_proto_2fstatement_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ProcedureStatement_ReadLn::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ProcedureStatement_ReadLn::ProcedureStatement_ReadLn()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_proto_2fstatement_2eproto::scc_info_ProcedureStatement_ReadLn.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:Pasc.ProcedureStatement.ReadLn)
}
ProcedureStatement_ReadLn::ProcedureStatement_ReadLn(const ProcedureStatement_ReadLn& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:Pasc.ProcedureStatement.ReadLn)
}

void ProcedureStatement_ReadLn::SharedCtor() {
}

ProcedureStatement_ReadLn::~ProcedureStatement_ReadLn() {
  // @@protoc_insertion_point(destructor:Pasc.ProcedureStatement.ReadLn)
  SharedDtor();
}

void ProcedureStatement_ReadLn::SharedDtor() {
}

void ProcedureStatement_ReadLn::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ProcedureStatement_ReadLn::descriptor() {
  ::protobuf_proto_2fstatement_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_proto_2fstatement_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ProcedureStatement_ReadLn& ProcedureStatement_ReadLn::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_proto_2fstatement_2eproto::scc_info_ProcedureStatement_ReadLn.base);
  return *internal_default_instance();
}


void ProcedureStatement_ReadLn::Clear() {
// @@protoc_insertion_point(message_clear_start:Pasc.ProcedureStatement.ReadLn)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear();
}

bool ProcedureStatement_ReadLn::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Pasc.ProcedureStatement.ReadLn)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, _internal_metadata_.mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:Pasc.ProcedureStatement.ReadLn)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Pasc.ProcedureStatement.ReadLn)
  return false;
#undef DO_
}

void ProcedureStatement_ReadLn::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Pasc.ProcedureStatement.ReadLn)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:Pasc.ProcedureStatement.ReadLn)
}

::google::protobuf::uint8* ProcedureStatement_ReadLn::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:Pasc.ProcedureStatement.ReadLn)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Pasc.ProcedureStatement.ReadLn)
  return target;
}

size_t ProcedureStatement_ReadLn::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Pasc.ProcedureStatement.ReadLn)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ProcedureStatement_ReadLn::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Pasc.ProcedureStatement.ReadLn)
  GOOGLE_DCHECK_NE(&from, this);
  const ProcedureStatement_ReadLn* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ProcedureStatement_ReadLn>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Pasc.ProcedureStatement.ReadLn)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Pasc.ProcedureStatement.ReadLn)
    MergeFrom(*source);
  }
}

void ProcedureStatement_ReadLn::MergeFrom(const ProcedureStatement_ReadLn& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Pasc.ProcedureStatement.ReadLn)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void ProcedureStatement_ReadLn::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Pasc.ProcedureStatement.ReadLn)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ProcedureStatement_ReadLn::CopyFrom(const ProcedureStatement_ReadLn& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Pasc.ProcedureStatement.ReadLn)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ProcedureStatement_ReadLn::IsInitialized() const {
  return true;
}

void ProcedureStatement_ReadLn::Swap(ProcedureStatement_ReadLn* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ProcedureStatement_ReadLn::InternalSwap(ProcedureStatement_ReadLn* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ProcedureStatement_ReadLn::GetMetadata() const {
  protobuf_proto_2fstatement_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_proto_2fstatement_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ProcedureStatement_ProcStmt::InitAsDefaultInstance() {
  ::Pasc::_ProcedureStatement_ProcStmt_default_instance_._instance.get_mutable()->name_ = const_cast< ::Pasc::Expression*>(
      ::Pasc::Expression::internal_default_instance());
}
void ProcedureStatement_ProcStmt::clear_name() {
  if (GetArenaNoVirtual() == NULL && name_ != NULL) {
    delete name_;
  }
  name_ = NULL;
}
void ProcedureStatement_ProcStmt::clear_params() {
  params_.Clear();
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ProcedureStatement_ProcStmt::kNameFieldNumber;
const int ProcedureStatement_ProcStmt::kParamsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ProcedureStatement_ProcStmt::ProcedureStatement_ProcStmt()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_proto_2fstatement_2eproto::scc_info_ProcedureStatement_ProcStmt.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:Pasc.ProcedureStatement.ProcStmt)
}
ProcedureStatement_ProcStmt::ProcedureStatement_ProcStmt(const ProcedureStatement_ProcStmt& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      params_(from.params_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_name()) {
    name_ = new ::Pasc::Expression(*from.name_);
  } else {
    name_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:Pasc.ProcedureStatement.ProcStmt)
}

void ProcedureStatement_ProcStmt::SharedCtor() {
  name_ = NULL;
}

ProcedureStatement_ProcStmt::~ProcedureStatement_ProcStmt() {
  // @@protoc_insertion_point(destructor:Pasc.ProcedureStatement.ProcStmt)
  SharedDtor();
}

void ProcedureStatement_ProcStmt::SharedDtor() {
  if (this != internal_default_instance()) delete name_;
}

void ProcedureStatement_ProcStmt::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ProcedureStatement_ProcStmt::descriptor() {
  ::protobuf_proto_2fstatement_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_proto_2fstatement_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ProcedureStatement_ProcStmt& ProcedureStatement_ProcStmt::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_proto_2fstatement_2eproto::scc_info_ProcedureStatement_ProcStmt.base);
  return *internal_default_instance();
}


void ProcedureStatement_ProcStmt::Clear() {
// @@protoc_insertion_point(message_clear_start:Pasc.ProcedureStatement.ProcStmt)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  params_.Clear();
  if (GetArenaNoVirtual() == NULL && name_ != NULL) {
    delete name_;
  }
  name_ = NULL;
  _internal_metadata_.Clear();
}

bool ProcedureStatement_ProcStmt::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Pasc.ProcedureStatement.ProcStmt)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .Pasc.Expression name = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_name()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .Pasc.Expression params = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_params()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Pasc.ProcedureStatement.ProcStmt)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Pasc.ProcedureStatement.ProcStmt)
  return false;
#undef DO_
}

void ProcedureStatement_ProcStmt::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Pasc.ProcedureStatement.ProcStmt)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .Pasc.Expression name = 1;
  if (this->has_name()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_name(), output);
  }

  // repeated .Pasc.Expression params = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->params_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2,
      this->params(static_cast<int>(i)),
      output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:Pasc.ProcedureStatement.ProcStmt)
}

::google::protobuf::uint8* ProcedureStatement_ProcStmt::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:Pasc.ProcedureStatement.ProcStmt)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .Pasc.Expression name = 1;
  if (this->has_name()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_name(), deterministic, target);
  }

  // repeated .Pasc.Expression params = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->params_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->params(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Pasc.ProcedureStatement.ProcStmt)
  return target;
}

size_t ProcedureStatement_ProcStmt::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Pasc.ProcedureStatement.ProcStmt)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .Pasc.Expression params = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->params_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->params(static_cast<int>(i)));
    }
  }

  // .Pasc.Expression name = 1;
  if (this->has_name()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *name_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ProcedureStatement_ProcStmt::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Pasc.ProcedureStatement.ProcStmt)
  GOOGLE_DCHECK_NE(&from, this);
  const ProcedureStatement_ProcStmt* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ProcedureStatement_ProcStmt>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Pasc.ProcedureStatement.ProcStmt)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Pasc.ProcedureStatement.ProcStmt)
    MergeFrom(*source);
  }
}

void ProcedureStatement_ProcStmt::MergeFrom(const ProcedureStatement_ProcStmt& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Pasc.ProcedureStatement.ProcStmt)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  params_.MergeFrom(from.params_);
  if (from.has_name()) {
    mutable_name()->::Pasc::Expression::MergeFrom(from.name());
  }
}

void ProcedureStatement_ProcStmt::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Pasc.ProcedureStatement.ProcStmt)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ProcedureStatement_ProcStmt::CopyFrom(const ProcedureStatement_ProcStmt& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Pasc.ProcedureStatement.ProcStmt)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ProcedureStatement_ProcStmt::IsInitialized() const {
  return true;
}

void ProcedureStatement_ProcStmt::Swap(ProcedureStatement_ProcStmt* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ProcedureStatement_ProcStmt::InternalSwap(ProcedureStatement_ProcStmt* other) {
  using std::swap;
  CastToBase(&params_)->InternalSwap(CastToBase(&other->params_));
  swap(name_, other->name_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ProcedureStatement_ProcStmt::GetMetadata() const {
  protobuf_proto_2fstatement_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_proto_2fstatement_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ProcedureStatement::InitAsDefaultInstance() {
  ::Pasc::_ProcedureStatement_default_instance_.wrt_ = const_cast< ::Pasc::ProcedureStatement_Write*>(
      ::Pasc::ProcedureStatement_Write::internal_default_instance());
  ::Pasc::_ProcedureStatement_default_instance_.wrtln_ = const_cast< ::Pasc::ProcedureStatement_WriteLn*>(
      ::Pasc::ProcedureStatement_WriteLn::internal_default_instance());
  ::Pasc::_ProcedureStatement_default_instance_.rd_ = const_cast< ::Pasc::ProcedureStatement_Read*>(
      ::Pasc::ProcedureStatement_Read::internal_default_instance());
  ::Pasc::_ProcedureStatement_default_instance_.rdln_ = const_cast< ::Pasc::ProcedureStatement_ReadLn*>(
      ::Pasc::ProcedureStatement_ReadLn::internal_default_instance());
  ::Pasc::_ProcedureStatement_default_instance_.ps_ = const_cast< ::Pasc::ProcedureStatement_ProcStmt*>(
      ::Pasc::ProcedureStatement_ProcStmt::internal_default_instance());
}
void ProcedureStatement::set_allocated_wrt(::Pasc::ProcedureStatement_Write* wrt) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_stmt();
  if (wrt) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      wrt = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, wrt, submessage_arena);
    }
    set_has_wrt();
    stmt_.wrt_ = wrt;
  }
  // @@protoc_insertion_point(field_set_allocated:Pasc.ProcedureStatement.wrt)
}
void ProcedureStatement::set_allocated_wrtln(::Pasc::ProcedureStatement_WriteLn* wrtln) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_stmt();
  if (wrtln) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      wrtln = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, wrtln, submessage_arena);
    }
    set_has_wrtln();
    stmt_.wrtln_ = wrtln;
  }
  // @@protoc_insertion_point(field_set_allocated:Pasc.ProcedureStatement.wrtLn)
}
void ProcedureStatement::set_allocated_rd(::Pasc::ProcedureStatement_Read* rd) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_stmt();
  if (rd) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      rd = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, rd, submessage_arena);
    }
    set_has_rd();
    stmt_.rd_ = rd;
  }
  // @@protoc_insertion_point(field_set_allocated:Pasc.ProcedureStatement.rd)
}
void ProcedureStatement::set_allocated_rdln(::Pasc::ProcedureStatement_ReadLn* rdln) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_stmt();
  if (rdln) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      rdln = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, rdln, submessage_arena);
    }
    set_has_rdln();
    stmt_.rdln_ = rdln;
  }
  // @@protoc_insertion_point(field_set_allocated:Pasc.ProcedureStatement.rdLn)
}
void ProcedureStatement::set_allocated_ps(::Pasc::ProcedureStatement_ProcStmt* ps) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_stmt();
  if (ps) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      ps = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, ps, submessage_arena);
    }
    set_has_ps();
    stmt_.ps_ = ps;
  }
  // @@protoc_insertion_point(field_set_allocated:Pasc.ProcedureStatement.ps)
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ProcedureStatement::kKindFieldNumber;
const int ProcedureStatement::kWrtFieldNumber;
const int ProcedureStatement::kWrtLnFieldNumber;
const int ProcedureStatement::kRdFieldNumber;
const int ProcedureStatement::kRdLnFieldNumber;
const int ProcedureStatement::kPsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ProcedureStatement::ProcedureStatement()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_proto_2fstatement_2eproto::scc_info_ProcedureStatement.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:Pasc.ProcedureStatement)
}
ProcedureStatement::ProcedureStatement(const ProcedureStatement& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  kind_ = from.kind_;
  clear_has_stmt();
  switch (from.stmt_case()) {
    case kWrt: {
      mutable_wrt()->::Pasc::ProcedureStatement_Write::MergeFrom(from.wrt());
      break;
    }
    case kWrtLn: {
      mutable_wrtln()->::Pasc::ProcedureStatement_WriteLn::MergeFrom(from.wrtln());
      break;
    }
    case kRd: {
      mutable_rd()->::Pasc::ProcedureStatement_Read::MergeFrom(from.rd());
      break;
    }
    case kRdLn: {
      mutable_rdln()->::Pasc::ProcedureStatement_ReadLn::MergeFrom(from.rdln());
      break;
    }
    case kPs: {
      mutable_ps()->::Pasc::ProcedureStatement_ProcStmt::MergeFrom(from.ps());
      break;
    }
    case STMT_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:Pasc.ProcedureStatement)
}

void ProcedureStatement::SharedCtor() {
  kind_ = 0;
  clear_has_stmt();
}

ProcedureStatement::~ProcedureStatement() {
  // @@protoc_insertion_point(destructor:Pasc.ProcedureStatement)
  SharedDtor();
}

void ProcedureStatement::SharedDtor() {
  if (has_stmt()) {
    clear_stmt();
  }
}

void ProcedureStatement::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ProcedureStatement::descriptor() {
  ::protobuf_proto_2fstatement_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_proto_2fstatement_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ProcedureStatement& ProcedureStatement::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_proto_2fstatement_2eproto::scc_info_ProcedureStatement.base);
  return *internal_default_instance();
}


void ProcedureStatement::clear_stmt() {
// @@protoc_insertion_point(one_of_clear_start:Pasc.ProcedureStatement)
  switch (stmt_case()) {
    case kWrt: {
      delete stmt_.wrt_;
      break;
    }
    case kWrtLn: {
      delete stmt_.wrtln_;
      break;
    }
    case kRd: {
      delete stmt_.rd_;
      break;
    }
    case kRdLn: {
      delete stmt_.rdln_;
      break;
    }
    case kPs: {
      delete stmt_.ps_;
      break;
    }
    case STMT_NOT_SET: {
      break;
    }
  }
  _oneof_case_[0] = STMT_NOT_SET;
}


void ProcedureStatement::Clear() {
// @@protoc_insertion_point(message_clear_start:Pasc.ProcedureStatement)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  kind_ = 0;
  clear_stmt();
  _internal_metadata_.Clear();
}

bool ProcedureStatement::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Pasc.ProcedureStatement)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .Pasc.ProcedureStatement.PSKind kind = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_kind(static_cast< ::Pasc::ProcedureStatement_PSKind >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .Pasc.ProcedureStatement.Write wrt = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_wrt()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .Pasc.ProcedureStatement.WriteLn wrtLn = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_wrtln()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .Pasc.ProcedureStatement.Read rd = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_rd()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .Pasc.ProcedureStatement.ReadLn rdLn = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_rdln()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .Pasc.ProcedureStatement.ProcStmt ps = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_ps()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Pasc.ProcedureStatement)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Pasc.ProcedureStatement)
  return false;
#undef DO_
}

void ProcedureStatement::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Pasc.ProcedureStatement)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .Pasc.ProcedureStatement.PSKind kind = 1;
  if (this->kind() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->kind(), output);
  }

  // .Pasc.ProcedureStatement.Write wrt = 2;
  if (has_wrt()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_wrt(), output);
  }

  // .Pasc.ProcedureStatement.WriteLn wrtLn = 3;
  if (has_wrtln()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->_internal_wrtln(), output);
  }

  // .Pasc.ProcedureStatement.Read rd = 4;
  if (has_rd()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->_internal_rd(), output);
  }

  // .Pasc.ProcedureStatement.ReadLn rdLn = 5;
  if (has_rdln()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, this->_internal_rdln(), output);
  }

  // .Pasc.ProcedureStatement.ProcStmt ps = 6;
  if (has_ps()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6, this->_internal_ps(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:Pasc.ProcedureStatement)
}

::google::protobuf::uint8* ProcedureStatement::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:Pasc.ProcedureStatement)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .Pasc.ProcedureStatement.PSKind kind = 1;
  if (this->kind() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->kind(), target);
  }

  // .Pasc.ProcedureStatement.Write wrt = 2;
  if (has_wrt()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_wrt(), deterministic, target);
  }

  // .Pasc.ProcedureStatement.WriteLn wrtLn = 3;
  if (has_wrtln()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->_internal_wrtln(), deterministic, target);
  }

  // .Pasc.ProcedureStatement.Read rd = 4;
  if (has_rd()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, this->_internal_rd(), deterministic, target);
  }

  // .Pasc.ProcedureStatement.ReadLn rdLn = 5;
  if (has_rdln()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        5, this->_internal_rdln(), deterministic, target);
  }

  // .Pasc.ProcedureStatement.ProcStmt ps = 6;
  if (has_ps()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        6, this->_internal_ps(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Pasc.ProcedureStatement)
  return target;
}

size_t ProcedureStatement::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Pasc.ProcedureStatement)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .Pasc.ProcedureStatement.PSKind kind = 1;
  if (this->kind() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->kind());
  }

  switch (stmt_case()) {
    // .Pasc.ProcedureStatement.Write wrt = 2;
    case kWrt: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *stmt_.wrt_);
      break;
    }
    // .Pasc.ProcedureStatement.WriteLn wrtLn = 3;
    case kWrtLn: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *stmt_.wrtln_);
      break;
    }
    // .Pasc.ProcedureStatement.Read rd = 4;
    case kRd: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *stmt_.rd_);
      break;
    }
    // .Pasc.ProcedureStatement.ReadLn rdLn = 5;
    case kRdLn: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *stmt_.rdln_);
      break;
    }
    // .Pasc.ProcedureStatement.ProcStmt ps = 6;
    case kPs: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *stmt_.ps_);
      break;
    }
    case STMT_NOT_SET: {
      break;
    }
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ProcedureStatement::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Pasc.ProcedureStatement)
  GOOGLE_DCHECK_NE(&from, this);
  const ProcedureStatement* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ProcedureStatement>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Pasc.ProcedureStatement)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Pasc.ProcedureStatement)
    MergeFrom(*source);
  }
}

void ProcedureStatement::MergeFrom(const ProcedureStatement& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Pasc.ProcedureStatement)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.kind() != 0) {
    set_kind(from.kind());
  }
  switch (from.stmt_case()) {
    case kWrt: {
      mutable_wrt()->::Pasc::ProcedureStatement_Write::MergeFrom(from.wrt());
      break;
    }
    case kWrtLn: {
      mutable_wrtln()->::Pasc::ProcedureStatement_WriteLn::MergeFrom(from.wrtln());
      break;
    }
    case kRd: {
      mutable_rd()->::Pasc::ProcedureStatement_Read::MergeFrom(from.rd());
      break;
    }
    case kRdLn: {
      mutable_rdln()->::Pasc::ProcedureStatement_ReadLn::MergeFrom(from.rdln());
      break;
    }
    case kPs: {
      mutable_ps()->::Pasc::ProcedureStatement_ProcStmt::MergeFrom(from.ps());
      break;
    }
    case STMT_NOT_SET: {
      break;
    }
  }
}

void ProcedureStatement::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Pasc.ProcedureStatement)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ProcedureStatement::CopyFrom(const ProcedureStatement& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Pasc.ProcedureStatement)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ProcedureStatement::IsInitialized() const {
  return true;
}

void ProcedureStatement::Swap(ProcedureStatement* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ProcedureStatement::InternalSwap(ProcedureStatement* other) {
  using std::swap;
  swap(kind_, other->kind_);
  swap(stmt_, other->stmt_);
  swap(_oneof_case_[0], other->_oneof_case_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ProcedureStatement::GetMetadata() const {
  protobuf_proto_2fstatement_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_proto_2fstatement_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void AssignStatement::InitAsDefaultInstance() {
  ::Pasc::_AssignStatement_default_instance_._instance.get_mutable()->variable_ = const_cast< ::Pasc::Expression*>(
      ::Pasc::Expression::internal_default_instance());
  ::Pasc::_AssignStatement_default_instance_._instance.get_mutable()->value_ = const_cast< ::Pasc::Expression*>(
      ::Pasc::Expression::internal_default_instance());
}
void AssignStatement::clear_variable() {
  if (GetArenaNoVirtual() == NULL && variable_ != NULL) {
    delete variable_;
  }
  variable_ = NULL;
}
void AssignStatement::clear_value() {
  if (GetArenaNoVirtual() == NULL && value_ != NULL) {
    delete value_;
  }
  value_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int AssignStatement::kVariableFieldNumber;
const int AssignStatement::kValueFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

AssignStatement::AssignStatement()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_proto_2fstatement_2eproto::scc_info_AssignStatement.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:Pasc.AssignStatement)
}
AssignStatement::AssignStatement(const AssignStatement& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_variable()) {
    variable_ = new ::Pasc::Expression(*from.variable_);
  } else {
    variable_ = NULL;
  }
  if (from.has_value()) {
    value_ = new ::Pasc::Expression(*from.value_);
  } else {
    value_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:Pasc.AssignStatement)
}

void AssignStatement::SharedCtor() {
  ::memset(&variable_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&value_) -
      reinterpret_cast<char*>(&variable_)) + sizeof(value_));
}

AssignStatement::~AssignStatement() {
  // @@protoc_insertion_point(destructor:Pasc.AssignStatement)
  SharedDtor();
}

void AssignStatement::SharedDtor() {
  if (this != internal_default_instance()) delete variable_;
  if (this != internal_default_instance()) delete value_;
}

void AssignStatement::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* AssignStatement::descriptor() {
  ::protobuf_proto_2fstatement_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_proto_2fstatement_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const AssignStatement& AssignStatement::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_proto_2fstatement_2eproto::scc_info_AssignStatement.base);
  return *internal_default_instance();
}


void AssignStatement::Clear() {
// @@protoc_insertion_point(message_clear_start:Pasc.AssignStatement)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && variable_ != NULL) {
    delete variable_;
  }
  variable_ = NULL;
  if (GetArenaNoVirtual() == NULL && value_ != NULL) {
    delete value_;
  }
  value_ = NULL;
  _internal_metadata_.Clear();
}

bool AssignStatement::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Pasc.AssignStatement)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .Pasc.Expression variable = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_variable()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .Pasc.Expression value = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_value()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Pasc.AssignStatement)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Pasc.AssignStatement)
  return false;
#undef DO_
}

void AssignStatement::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Pasc.AssignStatement)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .Pasc.Expression variable = 1;
  if (this->has_variable()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_variable(), output);
  }

  // .Pasc.Expression value = 2;
  if (this->has_value()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_value(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:Pasc.AssignStatement)
}

::google::protobuf::uint8* AssignStatement::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:Pasc.AssignStatement)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .Pasc.Expression variable = 1;
  if (this->has_variable()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_variable(), deterministic, target);
  }

  // .Pasc.Expression value = 2;
  if (this->has_value()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_value(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Pasc.AssignStatement)
  return target;
}

size_t AssignStatement::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Pasc.AssignStatement)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .Pasc.Expression variable = 1;
  if (this->has_variable()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *variable_);
  }

  // .Pasc.Expression value = 2;
  if (this->has_value()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *value_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void AssignStatement::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Pasc.AssignStatement)
  GOOGLE_DCHECK_NE(&from, this);
  const AssignStatement* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const AssignStatement>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Pasc.AssignStatement)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Pasc.AssignStatement)
    MergeFrom(*source);
  }
}

void AssignStatement::MergeFrom(const AssignStatement& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Pasc.AssignStatement)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_variable()) {
    mutable_variable()->::Pasc::Expression::MergeFrom(from.variable());
  }
  if (from.has_value()) {
    mutable_value()->::Pasc::Expression::MergeFrom(from.value());
  }
}

void AssignStatement::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Pasc.AssignStatement)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AssignStatement::CopyFrom(const AssignStatement& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Pasc.AssignStatement)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AssignStatement::IsInitialized() const {
  return true;
}

void AssignStatement::Swap(AssignStatement* other) {
  if (other == this) return;
  InternalSwap(other);
}
void AssignStatement::InternalSwap(AssignStatement* other) {
  using std::swap;
  swap(variable_, other->variable_);
  swap(value_, other->value_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata AssignStatement::GetMetadata() const {
  protobuf_proto_2fstatement_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_proto_2fstatement_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void IfStatement::InitAsDefaultInstance() {
  ::Pasc::_IfStatement_default_instance_._instance.get_mutable()->cond_ = const_cast< ::Pasc::Expression*>(
      ::Pasc::Expression::internal_default_instance());
  ::Pasc::_IfStatement_default_instance_._instance.get_mutable()->truepath_ = const_cast< ::Pasc::Statement*>(
      ::Pasc::Statement::internal_default_instance());
  ::Pasc::_IfStatement_default_instance_._instance.get_mutable()->elsepath_ = const_cast< ::Pasc::Statement*>(
      ::Pasc::Statement::internal_default_instance());
}
void IfStatement::clear_cond() {
  if (GetArenaNoVirtual() == NULL && cond_ != NULL) {
    delete cond_;
  }
  cond_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int IfStatement::kCondFieldNumber;
const int IfStatement::kTruePathFieldNumber;
const int IfStatement::kElsePathFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

IfStatement::IfStatement()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_proto_2fstatement_2eproto::scc_info_CompoundStatement.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:Pasc.IfStatement)
}
IfStatement::IfStatement(const IfStatement& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_cond()) {
    cond_ = new ::Pasc::Expression(*from.cond_);
  } else {
    cond_ = NULL;
  }
  if (from.has_truepath()) {
    truepath_ = new ::Pasc::Statement(*from.truepath_);
  } else {
    truepath_ = NULL;
  }
  if (from.has_elsepath()) {
    elsepath_ = new ::Pasc::Statement(*from.elsepath_);
  } else {
    elsepath_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:Pasc.IfStatement)
}

void IfStatement::SharedCtor() {
  ::memset(&cond_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&elsepath_) -
      reinterpret_cast<char*>(&cond_)) + sizeof(elsepath_));
}

IfStatement::~IfStatement() {
  // @@protoc_insertion_point(destructor:Pasc.IfStatement)
  SharedDtor();
}

void IfStatement::SharedDtor() {
  if (this != internal_default_instance()) delete cond_;
  if (this != internal_default_instance()) delete truepath_;
  if (this != internal_default_instance()) delete elsepath_;
}

void IfStatement::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* IfStatement::descriptor() {
  ::protobuf_proto_2fstatement_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_proto_2fstatement_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const IfStatement& IfStatement::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_proto_2fstatement_2eproto::scc_info_CompoundStatement.base);
  return *internal_default_instance();
}


void IfStatement::Clear() {
// @@protoc_insertion_point(message_clear_start:Pasc.IfStatement)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && cond_ != NULL) {
    delete cond_;
  }
  cond_ = NULL;
  if (GetArenaNoVirtual() == NULL && truepath_ != NULL) {
    delete truepath_;
  }
  truepath_ = NULL;
  if (GetArenaNoVirtual() == NULL && elsepath_ != NULL) {
    delete elsepath_;
  }
  elsepath_ = NULL;
  _internal_metadata_.Clear();
}

bool IfStatement::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Pasc.IfStatement)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .Pasc.Expression cond = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_cond()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .Pasc.Statement truePath = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_truepath()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .Pasc.Statement elsePath = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_elsepath()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Pasc.IfStatement)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Pasc.IfStatement)
  return false;
#undef DO_
}

void IfStatement::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Pasc.IfStatement)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .Pasc.Expression cond = 1;
  if (this->has_cond()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_cond(), output);
  }

  // .Pasc.Statement truePath = 2;
  if (this->has_truepath()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_truepath(), output);
  }

  // .Pasc.Statement elsePath = 3;
  if (this->has_elsepath()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->_internal_elsepath(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:Pasc.IfStatement)
}

::google::protobuf::uint8* IfStatement::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:Pasc.IfStatement)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .Pasc.Expression cond = 1;
  if (this->has_cond()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_cond(), deterministic, target);
  }

  // .Pasc.Statement truePath = 2;
  if (this->has_truepath()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_truepath(), deterministic, target);
  }

  // .Pasc.Statement elsePath = 3;
  if (this->has_elsepath()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->_internal_elsepath(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Pasc.IfStatement)
  return target;
}

size_t IfStatement::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Pasc.IfStatement)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .Pasc.Expression cond = 1;
  if (this->has_cond()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *cond_);
  }

  // .Pasc.Statement truePath = 2;
  if (this->has_truepath()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *truepath_);
  }

  // .Pasc.Statement elsePath = 3;
  if (this->has_elsepath()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *elsepath_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void IfStatement::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Pasc.IfStatement)
  GOOGLE_DCHECK_NE(&from, this);
  const IfStatement* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const IfStatement>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Pasc.IfStatement)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Pasc.IfStatement)
    MergeFrom(*source);
  }
}

void IfStatement::MergeFrom(const IfStatement& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Pasc.IfStatement)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_cond()) {
    mutable_cond()->::Pasc::Expression::MergeFrom(from.cond());
  }
  if (from.has_truepath()) {
    mutable_truepath()->::Pasc::Statement::MergeFrom(from.truepath());
  }
  if (from.has_elsepath()) {
    mutable_elsepath()->::Pasc::Statement::MergeFrom(from.elsepath());
  }
}

void IfStatement::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Pasc.IfStatement)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void IfStatement::CopyFrom(const IfStatement& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Pasc.IfStatement)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool IfStatement::IsInitialized() const {
  return true;
}

void IfStatement::Swap(IfStatement* other) {
  if (other == this) return;
  InternalSwap(other);
}
void IfStatement::InternalSwap(IfStatement* other) {
  using std::swap;
  swap(cond_, other->cond_);
  swap(truepath_, other->truepath_);
  swap(elsepath_, other->elsepath_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata IfStatement::GetMetadata() const {
  protobuf_proto_2fstatement_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_proto_2fstatement_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ReturnStatement::InitAsDefaultInstance() {
  ::Pasc::_ReturnStatement_default_instance_._instance.get_mutable()->value_ = const_cast< ::Pasc::Expression*>(
      ::Pasc::Expression::internal_default_instance());
}
void ReturnStatement::clear_value() {
  if (GetArenaNoVirtual() == NULL && value_ != NULL) {
    delete value_;
  }
  value_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ReturnStatement::kValueFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ReturnStatement::ReturnStatement()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_proto_2fstatement_2eproto::scc_info_ReturnStatement.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:Pasc.ReturnStatement)
}
ReturnStatement::ReturnStatement(const ReturnStatement& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_value()) {
    value_ = new ::Pasc::Expression(*from.value_);
  } else {
    value_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:Pasc.ReturnStatement)
}

void ReturnStatement::SharedCtor() {
  value_ = NULL;
}

ReturnStatement::~ReturnStatement() {
  // @@protoc_insertion_point(destructor:Pasc.ReturnStatement)
  SharedDtor();
}

void ReturnStatement::SharedDtor() {
  if (this != internal_default_instance()) delete value_;
}

void ReturnStatement::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ReturnStatement::descriptor() {
  ::protobuf_proto_2fstatement_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_proto_2fstatement_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ReturnStatement& ReturnStatement::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_proto_2fstatement_2eproto::scc_info_ReturnStatement.base);
  return *internal_default_instance();
}


void ReturnStatement::Clear() {
// @@protoc_insertion_point(message_clear_start:Pasc.ReturnStatement)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && value_ != NULL) {
    delete value_;
  }
  value_ = NULL;
  _internal_metadata_.Clear();
}

bool ReturnStatement::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Pasc.ReturnStatement)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .Pasc.Expression value = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_value()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Pasc.ReturnStatement)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Pasc.ReturnStatement)
  return false;
#undef DO_
}

void ReturnStatement::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Pasc.ReturnStatement)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .Pasc.Expression value = 1;
  if (this->has_value()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_value(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:Pasc.ReturnStatement)
}

::google::protobuf::uint8* ReturnStatement::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:Pasc.ReturnStatement)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .Pasc.Expression value = 1;
  if (this->has_value()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_value(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Pasc.ReturnStatement)
  return target;
}

size_t ReturnStatement::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Pasc.ReturnStatement)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .Pasc.Expression value = 1;
  if (this->has_value()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *value_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ReturnStatement::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Pasc.ReturnStatement)
  GOOGLE_DCHECK_NE(&from, this);
  const ReturnStatement* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ReturnStatement>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Pasc.ReturnStatement)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Pasc.ReturnStatement)
    MergeFrom(*source);
  }
}

void ReturnStatement::MergeFrom(const ReturnStatement& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Pasc.ReturnStatement)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_value()) {
    mutable_value()->::Pasc::Expression::MergeFrom(from.value());
  }
}

void ReturnStatement::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Pasc.ReturnStatement)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ReturnStatement::CopyFrom(const ReturnStatement& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Pasc.ReturnStatement)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ReturnStatement::IsInitialized() const {
  return true;
}

void ReturnStatement::Swap(ReturnStatement* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ReturnStatement::InternalSwap(ReturnStatement* other) {
  using std::swap;
  swap(value_, other->value_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ReturnStatement::GetMetadata() const {
  protobuf_proto_2fstatement_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_proto_2fstatement_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void WhileStatement::InitAsDefaultInstance() {
  ::Pasc::_WhileStatement_default_instance_._instance.get_mutable()->cond_ = const_cast< ::Pasc::Expression*>(
      ::Pasc::Expression::internal_default_instance());
  ::Pasc::_WhileStatement_default_instance_._instance.get_mutable()->body_ = const_cast< ::Pasc::Statement*>(
      ::Pasc::Statement::internal_default_instance());
}
void WhileStatement::clear_cond() {
  if (GetArenaNoVirtual() == NULL && cond_ != NULL) {
    delete cond_;
  }
  cond_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int WhileStatement::kCondFieldNumber;
const int WhileStatement::kBodyFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

WhileStatement::WhileStatement()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_proto_2fstatement_2eproto::scc_info_CompoundStatement.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:Pasc.WhileStatement)
}
WhileStatement::WhileStatement(const WhileStatement& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_cond()) {
    cond_ = new ::Pasc::Expression(*from.cond_);
  } else {
    cond_ = NULL;
  }
  if (from.has_body()) {
    body_ = new ::Pasc::Statement(*from.body_);
  } else {
    body_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:Pasc.WhileStatement)
}

void WhileStatement::SharedCtor() {
  ::memset(&cond_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&body_) -
      reinterpret_cast<char*>(&cond_)) + sizeof(body_));
}

WhileStatement::~WhileStatement() {
  // @@protoc_insertion_point(destructor:Pasc.WhileStatement)
  SharedDtor();
}

void WhileStatement::SharedDtor() {
  if (this != internal_default_instance()) delete cond_;
  if (this != internal_default_instance()) delete body_;
}

void WhileStatement::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* WhileStatement::descriptor() {
  ::protobuf_proto_2fstatement_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_proto_2fstatement_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const WhileStatement& WhileStatement::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_proto_2fstatement_2eproto::scc_info_CompoundStatement.base);
  return *internal_default_instance();
}


void WhileStatement::Clear() {
// @@protoc_insertion_point(message_clear_start:Pasc.WhileStatement)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && cond_ != NULL) {
    delete cond_;
  }
  cond_ = NULL;
  if (GetArenaNoVirtual() == NULL && body_ != NULL) {
    delete body_;
  }
  body_ = NULL;
  _internal_metadata_.Clear();
}

bool WhileStatement::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Pasc.WhileStatement)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .Pasc.Expression cond = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_cond()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .Pasc.Statement body = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_body()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Pasc.WhileStatement)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Pasc.WhileStatement)
  return false;
#undef DO_
}

void WhileStatement::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Pasc.WhileStatement)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .Pasc.Expression cond = 1;
  if (this->has_cond()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_cond(), output);
  }

  // .Pasc.Statement body = 2;
  if (this->has_body()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_body(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:Pasc.WhileStatement)
}

::google::protobuf::uint8* WhileStatement::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:Pasc.WhileStatement)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .Pasc.Expression cond = 1;
  if (this->has_cond()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_cond(), deterministic, target);
  }

  // .Pasc.Statement body = 2;
  if (this->has_body()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_body(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Pasc.WhileStatement)
  return target;
}

size_t WhileStatement::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Pasc.WhileStatement)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .Pasc.Expression cond = 1;
  if (this->has_cond()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *cond_);
  }

  // .Pasc.Statement body = 2;
  if (this->has_body()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *body_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void WhileStatement::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Pasc.WhileStatement)
  GOOGLE_DCHECK_NE(&from, this);
  const WhileStatement* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const WhileStatement>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Pasc.WhileStatement)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Pasc.WhileStatement)
    MergeFrom(*source);
  }
}

void WhileStatement::MergeFrom(const WhileStatement& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Pasc.WhileStatement)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_cond()) {
    mutable_cond()->::Pasc::Expression::MergeFrom(from.cond());
  }
  if (from.has_body()) {
    mutable_body()->::Pasc::Statement::MergeFrom(from.body());
  }
}

void WhileStatement::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Pasc.WhileStatement)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void WhileStatement::CopyFrom(const WhileStatement& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Pasc.WhileStatement)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool WhileStatement::IsInitialized() const {
  return true;
}

void WhileStatement::Swap(WhileStatement* other) {
  if (other == this) return;
  InternalSwap(other);
}
void WhileStatement::InternalSwap(WhileStatement* other) {
  using std::swap;
  swap(cond_, other->cond_);
  swap(body_, other->body_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata WhileStatement::GetMetadata() const {
  protobuf_proto_2fstatement_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_proto_2fstatement_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CompoundStatement::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CompoundStatement::kStmtsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CompoundStatement::CompoundStatement()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_proto_2fstatement_2eproto::scc_info_CompoundStatement.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:Pasc.CompoundStatement)
}
CompoundStatement::CompoundStatement(const CompoundStatement& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      stmts_(from.stmts_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:Pasc.CompoundStatement)
}

void CompoundStatement::SharedCtor() {
}

CompoundStatement::~CompoundStatement() {
  // @@protoc_insertion_point(destructor:Pasc.CompoundStatement)
  SharedDtor();
}

void CompoundStatement::SharedDtor() {
}

void CompoundStatement::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CompoundStatement::descriptor() {
  ::protobuf_proto_2fstatement_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_proto_2fstatement_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CompoundStatement& CompoundStatement::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_proto_2fstatement_2eproto::scc_info_CompoundStatement.base);
  return *internal_default_instance();
}


void CompoundStatement::Clear() {
// @@protoc_insertion_point(message_clear_start:Pasc.CompoundStatement)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  stmts_.Clear();
  _internal_metadata_.Clear();
}

bool CompoundStatement::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Pasc.CompoundStatement)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .Pasc.Statement stmts = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_stmts()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Pasc.CompoundStatement)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Pasc.CompoundStatement)
  return false;
#undef DO_
}

void CompoundStatement::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Pasc.CompoundStatement)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .Pasc.Statement stmts = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->stmts_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1,
      this->stmts(static_cast<int>(i)),
      output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:Pasc.CompoundStatement)
}

::google::protobuf::uint8* CompoundStatement::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:Pasc.CompoundStatement)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .Pasc.Statement stmts = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->stmts_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->stmts(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Pasc.CompoundStatement)
  return target;
}

size_t CompoundStatement::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Pasc.CompoundStatement)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .Pasc.Statement stmts = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->stmts_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->stmts(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CompoundStatement::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Pasc.CompoundStatement)
  GOOGLE_DCHECK_NE(&from, this);
  const CompoundStatement* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CompoundStatement>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Pasc.CompoundStatement)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Pasc.CompoundStatement)
    MergeFrom(*source);
  }
}

void CompoundStatement::MergeFrom(const CompoundStatement& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Pasc.CompoundStatement)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  stmts_.MergeFrom(from.stmts_);
}

void CompoundStatement::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Pasc.CompoundStatement)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CompoundStatement::CopyFrom(const CompoundStatement& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Pasc.CompoundStatement)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CompoundStatement::IsInitialized() const {
  return true;
}

void CompoundStatement::Swap(CompoundStatement* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CompoundStatement::InternalSwap(CompoundStatement* other) {
  using std::swap;
  CastToBase(&stmts_)->InternalSwap(CastToBase(&other->stmts_));
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CompoundStatement::GetMetadata() const {
  protobuf_proto_2fstatement_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_proto_2fstatement_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void RepeatStatement::InitAsDefaultInstance() {
  ::Pasc::_RepeatStatement_default_instance_._instance.get_mutable()->cond_ = const_cast< ::Pasc::Expression*>(
      ::Pasc::Expression::internal_default_instance());
}
void RepeatStatement::clear_cond() {
  if (GetArenaNoVirtual() == NULL && cond_ != NULL) {
    delete cond_;
  }
  cond_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int RepeatStatement::kStmtsFieldNumber;
const int RepeatStatement::kCondFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

RepeatStatement::RepeatStatement()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_proto_2fstatement_2eproto::scc_info_CompoundStatement.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:Pasc.RepeatStatement)
}
RepeatStatement::RepeatStatement(const RepeatStatement& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      stmts_(from.stmts_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_cond()) {
    cond_ = new ::Pasc::Expression(*from.cond_);
  } else {
    cond_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:Pasc.RepeatStatement)
}

void RepeatStatement::SharedCtor() {
  cond_ = NULL;
}

RepeatStatement::~RepeatStatement() {
  // @@protoc_insertion_point(destructor:Pasc.RepeatStatement)
  SharedDtor();
}

void RepeatStatement::SharedDtor() {
  if (this != internal_default_instance()) delete cond_;
}

void RepeatStatement::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* RepeatStatement::descriptor() {
  ::protobuf_proto_2fstatement_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_proto_2fstatement_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const RepeatStatement& RepeatStatement::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_proto_2fstatement_2eproto::scc_info_CompoundStatement.base);
  return *internal_default_instance();
}


void RepeatStatement::Clear() {
// @@protoc_insertion_point(message_clear_start:Pasc.RepeatStatement)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  stmts_.Clear();
  if (GetArenaNoVirtual() == NULL && cond_ != NULL) {
    delete cond_;
  }
  cond_ = NULL;
  _internal_metadata_.Clear();
}

bool RepeatStatement::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Pasc.RepeatStatement)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .Pasc.Statement stmts = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_stmts()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .Pasc.Expression cond = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_cond()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Pasc.RepeatStatement)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Pasc.RepeatStatement)
  return false;
#undef DO_
}

void RepeatStatement::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Pasc.RepeatStatement)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .Pasc.Statement stmts = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->stmts_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1,
      this->stmts(static_cast<int>(i)),
      output);
  }

  // .Pasc.Expression cond = 2;
  if (this->has_cond()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_cond(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:Pasc.RepeatStatement)
}

::google::protobuf::uint8* RepeatStatement::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:Pasc.RepeatStatement)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .Pasc.Statement stmts = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->stmts_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->stmts(static_cast<int>(i)), deterministic, target);
  }

  // .Pasc.Expression cond = 2;
  if (this->has_cond()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_cond(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Pasc.RepeatStatement)
  return target;
}

size_t RepeatStatement::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Pasc.RepeatStatement)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .Pasc.Statement stmts = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->stmts_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->stmts(static_cast<int>(i)));
    }
  }

  // .Pasc.Expression cond = 2;
  if (this->has_cond()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *cond_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void RepeatStatement::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Pasc.RepeatStatement)
  GOOGLE_DCHECK_NE(&from, this);
  const RepeatStatement* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const RepeatStatement>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Pasc.RepeatStatement)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Pasc.RepeatStatement)
    MergeFrom(*source);
  }
}

void RepeatStatement::MergeFrom(const RepeatStatement& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Pasc.RepeatStatement)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  stmts_.MergeFrom(from.stmts_);
  if (from.has_cond()) {
    mutable_cond()->::Pasc::Expression::MergeFrom(from.cond());
  }
}

void RepeatStatement::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Pasc.RepeatStatement)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RepeatStatement::CopyFrom(const RepeatStatement& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Pasc.RepeatStatement)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RepeatStatement::IsInitialized() const {
  return true;
}

void RepeatStatement::Swap(RepeatStatement* other) {
  if (other == this) return;
  InternalSwap(other);
}
void RepeatStatement::InternalSwap(RepeatStatement* other) {
  using std::swap;
  CastToBase(&stmts_)->InternalSwap(CastToBase(&other->stmts_));
  swap(cond_, other->cond_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata RepeatStatement::GetMetadata() const {
  protobuf_proto_2fstatement_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_proto_2fstatement_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ForStatement::InitAsDefaultInstance() {
  ::Pasc::_ForStatement_default_instance_._instance.get_mutable()->ctlvar_ = const_cast< ::Pasc::Expression*>(
      ::Pasc::Expression::internal_default_instance());
  ::Pasc::_ForStatement_default_instance_._instance.get_mutable()->initvalue_ = const_cast< ::Pasc::Expression*>(
      ::Pasc::Expression::internal_default_instance());
  ::Pasc::_ForStatement_default_instance_._instance.get_mutable()->finalvalue_ = const_cast< ::Pasc::Expression*>(
      ::Pasc::Expression::internal_default_instance());
  ::Pasc::_ForStatement_default_instance_._instance.get_mutable()->body_ = const_cast< ::Pasc::Statement*>(
      ::Pasc::Statement::internal_default_instance());
}
void ForStatement::clear_ctlvar() {
  if (GetArenaNoVirtual() == NULL && ctlvar_ != NULL) {
    delete ctlvar_;
  }
  ctlvar_ = NULL;
}
void ForStatement::clear_initvalue() {
  if (GetArenaNoVirtual() == NULL && initvalue_ != NULL) {
    delete initvalue_;
  }
  initvalue_ = NULL;
}
void ForStatement::clear_finalvalue() {
  if (GetArenaNoVirtual() == NULL && finalvalue_ != NULL) {
    delete finalvalue_;
  }
  finalvalue_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ForStatement::kCtlVarFieldNumber;
const int ForStatement::kInitValueFieldNumber;
const int ForStatement::kFinalValueFieldNumber;
const int ForStatement::kBodyFieldNumber;
const int ForStatement::kDirFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ForStatement::ForStatement()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_proto_2fstatement_2eproto::scc_info_CompoundStatement.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:Pasc.ForStatement)
}
ForStatement::ForStatement(const ForStatement& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_ctlvar()) {
    ctlvar_ = new ::Pasc::Expression(*from.ctlvar_);
  } else {
    ctlvar_ = NULL;
  }
  if (from.has_initvalue()) {
    initvalue_ = new ::Pasc::Expression(*from.initvalue_);
  } else {
    initvalue_ = NULL;
  }
  if (from.has_finalvalue()) {
    finalvalue_ = new ::Pasc::Expression(*from.finalvalue_);
  } else {
    finalvalue_ = NULL;
  }
  if (from.has_body()) {
    body_ = new ::Pasc::Statement(*from.body_);
  } else {
    body_ = NULL;
  }
  dir_ = from.dir_;
  // @@protoc_insertion_point(copy_constructor:Pasc.ForStatement)
}

void ForStatement::SharedCtor() {
  ::memset(&ctlvar_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&dir_) -
      reinterpret_cast<char*>(&ctlvar_)) + sizeof(dir_));
}

ForStatement::~ForStatement() {
  // @@protoc_insertion_point(destructor:Pasc.ForStatement)
  SharedDtor();
}

void ForStatement::SharedDtor() {
  if (this != internal_default_instance()) delete ctlvar_;
  if (this != internal_default_instance()) delete initvalue_;
  if (this != internal_default_instance()) delete finalvalue_;
  if (this != internal_default_instance()) delete body_;
}

void ForStatement::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ForStatement::descriptor() {
  ::protobuf_proto_2fstatement_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_proto_2fstatement_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ForStatement& ForStatement::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_proto_2fstatement_2eproto::scc_info_CompoundStatement.base);
  return *internal_default_instance();
}


void ForStatement::Clear() {
// @@protoc_insertion_point(message_clear_start:Pasc.ForStatement)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && ctlvar_ != NULL) {
    delete ctlvar_;
  }
  ctlvar_ = NULL;
  if (GetArenaNoVirtual() == NULL && initvalue_ != NULL) {
    delete initvalue_;
  }
  initvalue_ = NULL;
  if (GetArenaNoVirtual() == NULL && finalvalue_ != NULL) {
    delete finalvalue_;
  }
  finalvalue_ = NULL;
  if (GetArenaNoVirtual() == NULL && body_ != NULL) {
    delete body_;
  }
  body_ = NULL;
  dir_ = 0;
  _internal_metadata_.Clear();
}

bool ForStatement::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Pasc.ForStatement)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .Pasc.Expression ctlVar = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_ctlvar()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .Pasc.Expression initValue = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_initvalue()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .Pasc.Expression finalValue = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_finalvalue()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .Pasc.Statement body = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_body()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .Pasc.TokenKind dir = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_dir(static_cast< ::Pasc::TokenKind >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Pasc.ForStatement)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Pasc.ForStatement)
  return false;
#undef DO_
}

void ForStatement::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Pasc.ForStatement)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .Pasc.Expression ctlVar = 1;
  if (this->has_ctlvar()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_ctlvar(), output);
  }

  // .Pasc.Expression initValue = 2;
  if (this->has_initvalue()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_initvalue(), output);
  }

  // .Pasc.Expression finalValue = 3;
  if (this->has_finalvalue()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->_internal_finalvalue(), output);
  }

  // .Pasc.Statement body = 4;
  if (this->has_body()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->_internal_body(), output);
  }

  // .Pasc.TokenKind dir = 5;
  if (this->dir() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      5, this->dir(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:Pasc.ForStatement)
}

::google::protobuf::uint8* ForStatement::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:Pasc.ForStatement)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .Pasc.Expression ctlVar = 1;
  if (this->has_ctlvar()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_ctlvar(), deterministic, target);
  }

  // .Pasc.Expression initValue = 2;
  if (this->has_initvalue()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_initvalue(), deterministic, target);
  }

  // .Pasc.Expression finalValue = 3;
  if (this->has_finalvalue()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->_internal_finalvalue(), deterministic, target);
  }

  // .Pasc.Statement body = 4;
  if (this->has_body()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, this->_internal_body(), deterministic, target);
  }

  // .Pasc.TokenKind dir = 5;
  if (this->dir() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      5, this->dir(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Pasc.ForStatement)
  return target;
}

size_t ForStatement::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Pasc.ForStatement)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .Pasc.Expression ctlVar = 1;
  if (this->has_ctlvar()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *ctlvar_);
  }

  // .Pasc.Expression initValue = 2;
  if (this->has_initvalue()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *initvalue_);
  }

  // .Pasc.Expression finalValue = 3;
  if (this->has_finalvalue()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *finalvalue_);
  }

  // .Pasc.Statement body = 4;
  if (this->has_body()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *body_);
  }

  // .Pasc.TokenKind dir = 5;
  if (this->dir() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->dir());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ForStatement::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Pasc.ForStatement)
  GOOGLE_DCHECK_NE(&from, this);
  const ForStatement* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ForStatement>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Pasc.ForStatement)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Pasc.ForStatement)
    MergeFrom(*source);
  }
}

void ForStatement::MergeFrom(const ForStatement& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Pasc.ForStatement)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_ctlvar()) {
    mutable_ctlvar()->::Pasc::Expression::MergeFrom(from.ctlvar());
  }
  if (from.has_initvalue()) {
    mutable_initvalue()->::Pasc::Expression::MergeFrom(from.initvalue());
  }
  if (from.has_finalvalue()) {
    mutable_finalvalue()->::Pasc::Expression::MergeFrom(from.finalvalue());
  }
  if (from.has_body()) {
    mutable_body()->::Pasc::Statement::MergeFrom(from.body());
  }
  if (from.dir() != 0) {
    set_dir(from.dir());
  }
}

void ForStatement::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Pasc.ForStatement)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ForStatement::CopyFrom(const ForStatement& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Pasc.ForStatement)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ForStatement::IsInitialized() const {
  return true;
}

void ForStatement::Swap(ForStatement* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ForStatement::InternalSwap(ForStatement* other) {
  using std::swap;
  swap(ctlvar_, other->ctlvar_);
  swap(initvalue_, other->initvalue_);
  swap(finalvalue_, other->finalvalue_);
  swap(body_, other->body_);
  swap(dir_, other->dir_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ForStatement::GetMetadata() const {
  protobuf_proto_2fstatement_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_proto_2fstatement_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Statement::InitAsDefaultInstance() {
  ::Pasc::_Statement_default_instance_.assignstmt_ = const_cast< ::Pasc::AssignStatement*>(
      ::Pasc::AssignStatement::internal_default_instance());
  ::Pasc::_Statement_default_instance_.procstmt_ = const_cast< ::Pasc::ProcedureStatement*>(
      ::Pasc::ProcedureStatement::internal_default_instance());
  ::Pasc::_Statement_default_instance_.ifstmt_ = const_cast< ::Pasc::IfStatement*>(
      ::Pasc::IfStatement::internal_default_instance());
  ::Pasc::_Statement_default_instance_.retstmt_ = const_cast< ::Pasc::ReturnStatement*>(
      ::Pasc::ReturnStatement::internal_default_instance());
  ::Pasc::_Statement_default_instance_.whilestmt_ = const_cast< ::Pasc::WhileStatement*>(
      ::Pasc::WhileStatement::internal_default_instance());
  ::Pasc::_Statement_default_instance_.cmpdstmt_ = const_cast< ::Pasc::CompoundStatement*>(
      ::Pasc::CompoundStatement::internal_default_instance());
  ::Pasc::_Statement_default_instance_.rptstmt_ = const_cast< ::Pasc::RepeatStatement*>(
      ::Pasc::RepeatStatement::internal_default_instance());
  ::Pasc::_Statement_default_instance_.forstmt_ = const_cast< ::Pasc::ForStatement*>(
      ::Pasc::ForStatement::internal_default_instance());
}
void Statement::set_allocated_assignstmt(::Pasc::AssignStatement* assignstmt) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_stmt();
  if (assignstmt) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      assignstmt = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, assignstmt, submessage_arena);
    }
    set_has_assignstmt();
    stmt_.assignstmt_ = assignstmt;
  }
  // @@protoc_insertion_point(field_set_allocated:Pasc.Statement.assignStmt)
}
void Statement::set_allocated_procstmt(::Pasc::ProcedureStatement* procstmt) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_stmt();
  if (procstmt) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      procstmt = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, procstmt, submessage_arena);
    }
    set_has_procstmt();
    stmt_.procstmt_ = procstmt;
  }
  // @@protoc_insertion_point(field_set_allocated:Pasc.Statement.procStmt)
}
void Statement::set_allocated_ifstmt(::Pasc::IfStatement* ifstmt) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_stmt();
  if (ifstmt) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      ifstmt = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, ifstmt, submessage_arena);
    }
    set_has_ifstmt();
    stmt_.ifstmt_ = ifstmt;
  }
  // @@protoc_insertion_point(field_set_allocated:Pasc.Statement.ifStmt)
}
void Statement::set_allocated_retstmt(::Pasc::ReturnStatement* retstmt) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_stmt();
  if (retstmt) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      retstmt = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, retstmt, submessage_arena);
    }
    set_has_retstmt();
    stmt_.retstmt_ = retstmt;
  }
  // @@protoc_insertion_point(field_set_allocated:Pasc.Statement.retStmt)
}
void Statement::set_allocated_whilestmt(::Pasc::WhileStatement* whilestmt) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_stmt();
  if (whilestmt) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      whilestmt = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, whilestmt, submessage_arena);
    }
    set_has_whilestmt();
    stmt_.whilestmt_ = whilestmt;
  }
  // @@protoc_insertion_point(field_set_allocated:Pasc.Statement.whileStmt)
}
void Statement::set_allocated_cmpdstmt(::Pasc::CompoundStatement* cmpdstmt) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_stmt();
  if (cmpdstmt) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      cmpdstmt = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, cmpdstmt, submessage_arena);
    }
    set_has_cmpdstmt();
    stmt_.cmpdstmt_ = cmpdstmt;
  }
  // @@protoc_insertion_point(field_set_allocated:Pasc.Statement.cmpdStmt)
}
void Statement::set_allocated_rptstmt(::Pasc::RepeatStatement* rptstmt) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_stmt();
  if (rptstmt) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      rptstmt = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, rptstmt, submessage_arena);
    }
    set_has_rptstmt();
    stmt_.rptstmt_ = rptstmt;
  }
  // @@protoc_insertion_point(field_set_allocated:Pasc.Statement.rptStmt)
}
void Statement::set_allocated_forstmt(::Pasc::ForStatement* forstmt) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_stmt();
  if (forstmt) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      forstmt = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, forstmt, submessage_arena);
    }
    set_has_forstmt();
    stmt_.forstmt_ = forstmt;
  }
  // @@protoc_insertion_point(field_set_allocated:Pasc.Statement.forStmt)
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Statement::kKindFieldNumber;
const int Statement::kAssignStmtFieldNumber;
const int Statement::kProcStmtFieldNumber;
const int Statement::kIfStmtFieldNumber;
const int Statement::kRetStmtFieldNumber;
const int Statement::kWhileStmtFieldNumber;
const int Statement::kCmpdStmtFieldNumber;
const int Statement::kRptStmtFieldNumber;
const int Statement::kForStmtFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Statement::Statement()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_proto_2fstatement_2eproto::scc_info_CompoundStatement.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:Pasc.Statement)
}
Statement::Statement(const Statement& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  kind_ = from.kind_;
  clear_has_stmt();
  switch (from.stmt_case()) {
    case kAssignStmt: {
      mutable_assignstmt()->::Pasc::AssignStatement::MergeFrom(from.assignstmt());
      break;
    }
    case kProcStmt: {
      mutable_procstmt()->::Pasc::ProcedureStatement::MergeFrom(from.procstmt());
      break;
    }
    case kIfStmt: {
      mutable_ifstmt()->::Pasc::IfStatement::MergeFrom(from.ifstmt());
      break;
    }
    case kRetStmt: {
      mutable_retstmt()->::Pasc::ReturnStatement::MergeFrom(from.retstmt());
      break;
    }
    case kWhileStmt: {
      mutable_whilestmt()->::Pasc::WhileStatement::MergeFrom(from.whilestmt());
      break;
    }
    case kCmpdStmt: {
      mutable_cmpdstmt()->::Pasc::CompoundStatement::MergeFrom(from.cmpdstmt());
      break;
    }
    case kRptStmt: {
      mutable_rptstmt()->::Pasc::RepeatStatement::MergeFrom(from.rptstmt());
      break;
    }
    case kForStmt: {
      mutable_forstmt()->::Pasc::ForStatement::MergeFrom(from.forstmt());
      break;
    }
    case STMT_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:Pasc.Statement)
}

void Statement::SharedCtor() {
  kind_ = 0;
  clear_has_stmt();
}

Statement::~Statement() {
  // @@protoc_insertion_point(destructor:Pasc.Statement)
  SharedDtor();
}

void Statement::SharedDtor() {
  if (has_stmt()) {
    clear_stmt();
  }
}

void Statement::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Statement::descriptor() {
  ::protobuf_proto_2fstatement_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_proto_2fstatement_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Statement& Statement::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_proto_2fstatement_2eproto::scc_info_CompoundStatement.base);
  return *internal_default_instance();
}


void Statement::clear_stmt() {
// @@protoc_insertion_point(one_of_clear_start:Pasc.Statement)
  switch (stmt_case()) {
    case kAssignStmt: {
      delete stmt_.assignstmt_;
      break;
    }
    case kProcStmt: {
      delete stmt_.procstmt_;
      break;
    }
    case kIfStmt: {
      delete stmt_.ifstmt_;
      break;
    }
    case kRetStmt: {
      delete stmt_.retstmt_;
      break;
    }
    case kWhileStmt: {
      delete stmt_.whilestmt_;
      break;
    }
    case kCmpdStmt: {
      delete stmt_.cmpdstmt_;
      break;
    }
    case kRptStmt: {
      delete stmt_.rptstmt_;
      break;
    }
    case kForStmt: {
      delete stmt_.forstmt_;
      break;
    }
    case STMT_NOT_SET: {
      break;
    }
  }
  _oneof_case_[0] = STMT_NOT_SET;
}


void Statement::Clear() {
// @@protoc_insertion_point(message_clear_start:Pasc.Statement)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  kind_ = 0;
  clear_stmt();
  _internal_metadata_.Clear();
}

bool Statement::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Pasc.Statement)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .Pasc.Statement.StmtKind kind = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_kind(static_cast< ::Pasc::Statement_StmtKind >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .Pasc.AssignStatement assignStmt = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_assignstmt()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .Pasc.ProcedureStatement procStmt = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_procstmt()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .Pasc.IfStatement ifStmt = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_ifstmt()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .Pasc.ReturnStatement retStmt = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_retstmt()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .Pasc.WhileStatement whileStmt = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_whilestmt()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .Pasc.CompoundStatement cmpdStmt = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u /* 58 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_cmpdstmt()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .Pasc.RepeatStatement rptStmt = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(66u /* 66 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_rptstmt()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .Pasc.ForStatement forStmt = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(74u /* 74 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_forstmt()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Pasc.Statement)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Pasc.Statement)
  return false;
#undef DO_
}

void Statement::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Pasc.Statement)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .Pasc.Statement.StmtKind kind = 1;
  if (this->kind() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->kind(), output);
  }

  // .Pasc.AssignStatement assignStmt = 2;
  if (has_assignstmt()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_assignstmt(), output);
  }

  // .Pasc.ProcedureStatement procStmt = 3;
  if (has_procstmt()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->_internal_procstmt(), output);
  }

  // .Pasc.IfStatement ifStmt = 4;
  if (has_ifstmt()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->_internal_ifstmt(), output);
  }

  // .Pasc.ReturnStatement retStmt = 5;
  if (has_retstmt()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, this->_internal_retstmt(), output);
  }

  // .Pasc.WhileStatement whileStmt = 6;
  if (has_whilestmt()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6, this->_internal_whilestmt(), output);
  }

  // .Pasc.CompoundStatement cmpdStmt = 7;
  if (has_cmpdstmt()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      7, this->_internal_cmpdstmt(), output);
  }

  // .Pasc.RepeatStatement rptStmt = 8;
  if (has_rptstmt()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      8, this->_internal_rptstmt(), output);
  }

  // .Pasc.ForStatement forStmt = 9;
  if (has_forstmt()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      9, this->_internal_forstmt(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:Pasc.Statement)
}

::google::protobuf::uint8* Statement::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:Pasc.Statement)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .Pasc.Statement.StmtKind kind = 1;
  if (this->kind() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->kind(), target);
  }

  // .Pasc.AssignStatement assignStmt = 2;
  if (has_assignstmt()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_assignstmt(), deterministic, target);
  }

  // .Pasc.ProcedureStatement procStmt = 3;
  if (has_procstmt()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->_internal_procstmt(), deterministic, target);
  }

  // .Pasc.IfStatement ifStmt = 4;
  if (has_ifstmt()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, this->_internal_ifstmt(), deterministic, target);
  }

  // .Pasc.ReturnStatement retStmt = 5;
  if (has_retstmt()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        5, this->_internal_retstmt(), deterministic, target);
  }

  // .Pasc.WhileStatement whileStmt = 6;
  if (has_whilestmt()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        6, this->_internal_whilestmt(), deterministic, target);
  }

  // .Pasc.CompoundStatement cmpdStmt = 7;
  if (has_cmpdstmt()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        7, this->_internal_cmpdstmt(), deterministic, target);
  }

  // .Pasc.RepeatStatement rptStmt = 8;
  if (has_rptstmt()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        8, this->_internal_rptstmt(), deterministic, target);
  }

  // .Pasc.ForStatement forStmt = 9;
  if (has_forstmt()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        9, this->_internal_forstmt(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Pasc.Statement)
  return target;
}

size_t Statement::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Pasc.Statement)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .Pasc.Statement.StmtKind kind = 1;
  if (this->kind() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->kind());
  }

  switch (stmt_case()) {
    // .Pasc.AssignStatement assignStmt = 2;
    case kAssignStmt: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *stmt_.assignstmt_);
      break;
    }
    // .Pasc.ProcedureStatement procStmt = 3;
    case kProcStmt: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *stmt_.procstmt_);
      break;
    }
    // .Pasc.IfStatement ifStmt = 4;
    case kIfStmt: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *stmt_.ifstmt_);
      break;
    }
    // .Pasc.ReturnStatement retStmt = 5;
    case kRetStmt: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *stmt_.retstmt_);
      break;
    }
    // .Pasc.WhileStatement whileStmt = 6;
    case kWhileStmt: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *stmt_.whilestmt_);
      break;
    }
    // .Pasc.CompoundStatement cmpdStmt = 7;
    case kCmpdStmt: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *stmt_.cmpdstmt_);
      break;
    }
    // .Pasc.RepeatStatement rptStmt = 8;
    case kRptStmt: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *stmt_.rptstmt_);
      break;
    }
    // .Pasc.ForStatement forStmt = 9;
    case kForStmt: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *stmt_.forstmt_);
      break;
    }
    case STMT_NOT_SET: {
      break;
    }
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Statement::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Pasc.Statement)
  GOOGLE_DCHECK_NE(&from, this);
  const Statement* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Statement>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Pasc.Statement)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Pasc.Statement)
    MergeFrom(*source);
  }
}

void Statement::MergeFrom(const Statement& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Pasc.Statement)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.kind() != 0) {
    set_kind(from.kind());
  }
  switch (from.stmt_case()) {
    case kAssignStmt: {
      mutable_assignstmt()->::Pasc::AssignStatement::MergeFrom(from.assignstmt());
      break;
    }
    case kProcStmt: {
      mutable_procstmt()->::Pasc::ProcedureStatement::MergeFrom(from.procstmt());
      break;
    }
    case kIfStmt: {
      mutable_ifstmt()->::Pasc::IfStatement::MergeFrom(from.ifstmt());
      break;
    }
    case kRetStmt: {
      mutable_retstmt()->::Pasc::ReturnStatement::MergeFrom(from.retstmt());
      break;
    }
    case kWhileStmt: {
      mutable_whilestmt()->::Pasc::WhileStatement::MergeFrom(from.whilestmt());
      break;
    }
    case kCmpdStmt: {
      mutable_cmpdstmt()->::Pasc::CompoundStatement::MergeFrom(from.cmpdstmt());
      break;
    }
    case kRptStmt: {
      mutable_rptstmt()->::Pasc::RepeatStatement::MergeFrom(from.rptstmt());
      break;
    }
    case kForStmt: {
      mutable_forstmt()->::Pasc::ForStatement::MergeFrom(from.forstmt());
      break;
    }
    case STMT_NOT_SET: {
      break;
    }
  }
}

void Statement::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Pasc.Statement)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Statement::CopyFrom(const Statement& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Pasc.Statement)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Statement::IsInitialized() const {
  return true;
}

void Statement::Swap(Statement* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Statement::InternalSwap(Statement* other) {
  using std::swap;
  swap(kind_, other->kind_);
  swap(stmt_, other->stmt_);
  swap(_oneof_case_[0], other->_oneof_case_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Statement::GetMetadata() const {
  protobuf_proto_2fstatement_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_proto_2fstatement_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace Pasc
namespace google {
namespace protobuf {
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::Pasc::ProcedureStatement_WriteLn* Arena::CreateMaybeMessage< ::Pasc::ProcedureStatement_WriteLn >(Arena* arena) {
  return Arena::CreateInternal< ::Pasc::ProcedureStatement_WriteLn >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::Pasc::ProcedureStatement_Write* Arena::CreateMaybeMessage< ::Pasc::ProcedureStatement_Write >(Arena* arena) {
  return Arena::CreateInternal< ::Pasc::ProcedureStatement_Write >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::Pasc::ProcedureStatement_Read* Arena::CreateMaybeMessage< ::Pasc::ProcedureStatement_Read >(Arena* arena) {
  return Arena::CreateInternal< ::Pasc::ProcedureStatement_Read >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::Pasc::ProcedureStatement_ReadLn* Arena::CreateMaybeMessage< ::Pasc::ProcedureStatement_ReadLn >(Arena* arena) {
  return Arena::CreateInternal< ::Pasc::ProcedureStatement_ReadLn >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::Pasc::ProcedureStatement_ProcStmt* Arena::CreateMaybeMessage< ::Pasc::ProcedureStatement_ProcStmt >(Arena* arena) {
  return Arena::CreateInternal< ::Pasc::ProcedureStatement_ProcStmt >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::Pasc::ProcedureStatement* Arena::CreateMaybeMessage< ::Pasc::ProcedureStatement >(Arena* arena) {
  return Arena::CreateInternal< ::Pasc::ProcedureStatement >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::Pasc::AssignStatement* Arena::CreateMaybeMessage< ::Pasc::AssignStatement >(Arena* arena) {
  return Arena::CreateInternal< ::Pasc::AssignStatement >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::Pasc::IfStatement* Arena::CreateMaybeMessage< ::Pasc::IfStatement >(Arena* arena) {
  return Arena::CreateInternal< ::Pasc::IfStatement >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::Pasc::ReturnStatement* Arena::CreateMaybeMessage< ::Pasc::ReturnStatement >(Arena* arena) {
  return Arena::CreateInternal< ::Pasc::ReturnStatement >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::Pasc::WhileStatement* Arena::CreateMaybeMessage< ::Pasc::WhileStatement >(Arena* arena) {
  return Arena::CreateInternal< ::Pasc::WhileStatement >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::Pasc::CompoundStatement* Arena::CreateMaybeMessage< ::Pasc::CompoundStatement >(Arena* arena) {
  return Arena::CreateInternal< ::Pasc::CompoundStatement >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::Pasc::RepeatStatement* Arena::CreateMaybeMessage< ::Pasc::RepeatStatement >(Arena* arena) {
  return Arena::CreateInternal< ::Pasc::RepeatStatement >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::Pasc::ForStatement* Arena::CreateMaybeMessage< ::Pasc::ForStatement >(Arena* arena) {
  return Arena::CreateInternal< ::Pasc::ForStatement >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::Pasc::Statement* Arena::CreateMaybeMessage< ::Pasc::Statement >(Arena* arena) {
  return Arena::CreateInternal< ::Pasc::Statement >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
