// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: program.proto

#include "program.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)

namespace protobuf_program_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_program_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_Identifier_FieldDesignator;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_program_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_Identifier_IndexedVariable;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_program_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_Identifier_Variable;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_program_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_Operator;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_program_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_ProcedureStatement_Read;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_program_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_ProcedureStatement_ReadLn;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_program_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_ProcedureStatement_Write;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_program_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_Type_Boolean;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_program_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_Type_Char;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_program_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_Type_Integer;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_program_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_Type_Real;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_program_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_Type_Void;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_program_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_UIntLiteral;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_program_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_AssignStatement;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_program_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_ProcedureStatement_ProcStmt;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_program_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_ProcedureStatement_WriteLn;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_program_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_ReturnStatement;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_program_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_ValueParam;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_program_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_VariableParam;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_program_2eproto ::google::protobuf::internal::SCCInfo<2> scc_info_VarDeclaration;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_program_2eproto ::google::protobuf::internal::SCCInfo<3> scc_info_Block;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_program_2eproto ::google::protobuf::internal::SCCInfo<3> scc_info_FormalParameter;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_program_2eproto ::google::protobuf::internal::SCCInfo<3> scc_info_Identifier;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_program_2eproto ::google::protobuf::internal::SCCInfo<4> scc_info_BinaryExpr;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_program_2eproto ::google::protobuf::internal::SCCInfo<4> scc_info_IfStatement;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_program_2eproto ::google::protobuf::internal::SCCInfo<5> scc_info_ProcedureStatement;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_program_2eproto ::google::protobuf::internal::SCCInfo<5> scc_info_Type;
}  // namespace protobuf_program_2eproto
namespace Pasc {
class ProgramDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Program>
      _instance;
} _Program_default_instance_;
class BlockDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Block>
      _instance;
} _Block_default_instance_;
class CallableDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Callable>
      _instance;
  const ::Pasc::FuncDeclaration* funcdecl_;
  const ::Pasc::ProcDeclaration* procdecl_;
} _Callable_default_instance_;
class FormalParameterDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<FormalParameter>
      _instance;
  const ::Pasc::FuncHeading* fhead_;
  const ::Pasc::ProcHeading* phead_;
  const ::Pasc::VariableParam* vparam_;
  const ::Pasc::ValueParam* valparam_;
} _FormalParameter_default_instance_;
class VariableParamDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<VariableParam>
      _instance;
} _VariableParam_default_instance_;
class ValueParamDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ValueParam>
      _instance;
} _ValueParam_default_instance_;
class FuncHeadingDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<FuncHeading>
      _instance;
} _FuncHeading_default_instance_;
class ProcHeadingDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ProcHeading>
      _instance;
} _ProcHeading_default_instance_;
class FuncDeclarationDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<FuncDeclaration>
      _instance;
} _FuncDeclaration_default_instance_;
class ProcDeclarationDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ProcDeclaration>
      _instance;
} _ProcDeclaration_default_instance_;
class VarDeclarationDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<VarDeclaration>
      _instance;
} _VarDeclaration_default_instance_;
class ProcedureStatement_WriteLnDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ProcedureStatement_WriteLn>
      _instance;
} _ProcedureStatement_WriteLn_default_instance_;
class ProcedureStatement_WriteDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ProcedureStatement_Write>
      _instance;
} _ProcedureStatement_Write_default_instance_;
class ProcedureStatement_ReadDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ProcedureStatement_Read>
      _instance;
} _ProcedureStatement_Read_default_instance_;
class ProcedureStatement_ReadLnDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ProcedureStatement_ReadLn>
      _instance;
} _ProcedureStatement_ReadLn_default_instance_;
class ProcedureStatement_ProcStmtDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ProcedureStatement_ProcStmt>
      _instance;
} _ProcedureStatement_ProcStmt_default_instance_;
class ProcedureStatementDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ProcedureStatement>
      _instance;
  const ::Pasc::ProcedureStatement_Write* wrt_;
  const ::Pasc::ProcedureStatement_WriteLn* wrtln_;
  const ::Pasc::ProcedureStatement_Read* rd_;
  const ::Pasc::ProcedureStatement_ReadLn* rdln_;
  const ::Pasc::ProcedureStatement_ProcStmt* ps_;
} _ProcedureStatement_default_instance_;
class AssignStatementDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<AssignStatement>
      _instance;
} _AssignStatement_default_instance_;
class IfStatementDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<IfStatement>
      _instance;
} _IfStatement_default_instance_;
class ReturnStatementDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ReturnStatement>
      _instance;
} _ReturnStatement_default_instance_;
class StatementDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Statement>
      _instance;
  const ::Pasc::AssignStatement* assignstmt_;
  const ::Pasc::ProcedureStatement* procstmt_;
  const ::Pasc::IfStatement* ifstmt_;
  const ::Pasc::ReturnStatement* retstmt_;
} _Statement_default_instance_;
class Identifier_VariableDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Identifier_Variable>
      _instance;
} _Identifier_Variable_default_instance_;
class Identifier_IndexedVariableDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Identifier_IndexedVariable>
      _instance;
} _Identifier_IndexedVariable_default_instance_;
class Identifier_FieldDesignatorDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Identifier_FieldDesignator>
      _instance;
} _Identifier_FieldDesignator_default_instance_;
class IdentifierDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Identifier>
      _instance;
  const ::Pasc::Identifier_Variable* var_;
  const ::Pasc::Identifier_IndexedVariable* iv_;
  const ::Pasc::Identifier_FieldDesignator* fld_;
} _Identifier_default_instance_;
class ExpressionDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Expression>
      _instance;
  const ::Pasc::Identifier* id_;
  const ::Pasc::UIntLiteral* uint_;
  const ::Pasc::BinaryExpr* be_;
  const ::Pasc::WriteParameter* wp_;
  const ::Pasc::FuncCall* fc_;
} _Expression_default_instance_;
class WriteParameterDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<WriteParameter>
      _instance;
} _WriteParameter_default_instance_;
class BinaryExprDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<BinaryExpr>
      _instance;
} _BinaryExpr_default_instance_;
class UIntLiteralDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<UIntLiteral>
      _instance;
} _UIntLiteral_default_instance_;
class FuncCallDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<FuncCall>
      _instance;
} _FuncCall_default_instance_;
class Type_IntegerDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Type_Integer>
      _instance;
} _Type_Integer_default_instance_;
class Type_BooleanDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Type_Boolean>
      _instance;
} _Type_Boolean_default_instance_;
class Type_RealDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Type_Real>
      _instance;
} _Type_Real_default_instance_;
class Type_CharDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Type_Char>
      _instance;
} _Type_Char_default_instance_;
class Type_VoidDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Type_Void>
      _instance;
} _Type_Void_default_instance_;
class TypeDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Type>
      _instance;
  const ::Pasc::Type_Integer* int__;
  const ::Pasc::Type_Real* real_;
  const ::Pasc::Type_Boolean* bool__;
  const ::Pasc::Type_Char* char__;
  const ::Pasc::Type_Void* void__;
} _Type_default_instance_;
class OperatorDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Operator>
      _instance;
} _Operator_default_instance_;
}  // namespace Pasc
namespace protobuf_program_2eproto {
static void InitDefaultsProgram() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::Pasc::_Program_default_instance_;
    new (ptr) ::Pasc::Program();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::Pasc::Program::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_Program =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsProgram}, {
      &protobuf_program_2eproto::scc_info_Block.base,}};

static void InitDefaultsBlock() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::Pasc::_Block_default_instance_;
    new (ptr) ::Pasc::Block();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  {
    void* ptr = &::Pasc::_Callable_default_instance_;
    new (ptr) ::Pasc::Callable();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  {
    void* ptr = &::Pasc::_FuncDeclaration_default_instance_;
    new (ptr) ::Pasc::FuncDeclaration();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  {
    void* ptr = &::Pasc::_ProcDeclaration_default_instance_;
    new (ptr) ::Pasc::ProcDeclaration();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::Pasc::Block::InitAsDefaultInstance();
  ::Pasc::Callable::InitAsDefaultInstance();
  ::Pasc::FuncDeclaration::InitAsDefaultInstance();
  ::Pasc::ProcDeclaration::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<3> scc_info_Block =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 3, InitDefaultsBlock}, {
      &protobuf_program_2eproto::scc_info_VarDeclaration.base,
      &protobuf_program_2eproto::scc_info_IfStatement.base,
      &protobuf_program_2eproto::scc_info_FormalParameter.base,}};

static void InitDefaultsFormalParameter() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::Pasc::_FormalParameter_default_instance_;
    new (ptr) ::Pasc::FormalParameter();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  {
    void* ptr = &::Pasc::_FuncHeading_default_instance_;
    new (ptr) ::Pasc::FuncHeading();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  {
    void* ptr = &::Pasc::_ProcHeading_default_instance_;
    new (ptr) ::Pasc::ProcHeading();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::Pasc::FormalParameter::InitAsDefaultInstance();
  ::Pasc::FuncHeading::InitAsDefaultInstance();
  ::Pasc::ProcHeading::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<3> scc_info_FormalParameter =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 3, InitDefaultsFormalParameter}, {
      &protobuf_program_2eproto::scc_info_VariableParam.base,
      &protobuf_program_2eproto::scc_info_ValueParam.base,
      &protobuf_program_2eproto::scc_info_Type.base,}};

static void InitDefaultsVariableParam() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::Pasc::_VariableParam_default_instance_;
    new (ptr) ::Pasc::VariableParam();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::Pasc::VariableParam::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_VariableParam =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsVariableParam}, {
      &protobuf_program_2eproto::scc_info_Type.base,}};

static void InitDefaultsValueParam() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::Pasc::_ValueParam_default_instance_;
    new (ptr) ::Pasc::ValueParam();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::Pasc::ValueParam::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_ValueParam =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsValueParam}, {
      &protobuf_program_2eproto::scc_info_Type.base,}};

static void InitDefaultsVarDeclaration() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::Pasc::_VarDeclaration_default_instance_;
    new (ptr) ::Pasc::VarDeclaration();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::Pasc::VarDeclaration::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<2> scc_info_VarDeclaration =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 2, InitDefaultsVarDeclaration}, {
      &protobuf_program_2eproto::scc_info_BinaryExpr.base,
      &protobuf_program_2eproto::scc_info_Type.base,}};

static void InitDefaultsProcedureStatement_WriteLn() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::Pasc::_ProcedureStatement_WriteLn_default_instance_;
    new (ptr) ::Pasc::ProcedureStatement_WriteLn();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::Pasc::ProcedureStatement_WriteLn::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_ProcedureStatement_WriteLn =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsProcedureStatement_WriteLn}, {
      &protobuf_program_2eproto::scc_info_BinaryExpr.base,}};

static void InitDefaultsProcedureStatement_Write() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::Pasc::_ProcedureStatement_Write_default_instance_;
    new (ptr) ::Pasc::ProcedureStatement_Write();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::Pasc::ProcedureStatement_Write::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_ProcedureStatement_Write =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsProcedureStatement_Write}, {}};

static void InitDefaultsProcedureStatement_Read() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::Pasc::_ProcedureStatement_Read_default_instance_;
    new (ptr) ::Pasc::ProcedureStatement_Read();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::Pasc::ProcedureStatement_Read::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_ProcedureStatement_Read =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsProcedureStatement_Read}, {}};

static void InitDefaultsProcedureStatement_ReadLn() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::Pasc::_ProcedureStatement_ReadLn_default_instance_;
    new (ptr) ::Pasc::ProcedureStatement_ReadLn();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::Pasc::ProcedureStatement_ReadLn::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_ProcedureStatement_ReadLn =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsProcedureStatement_ReadLn}, {}};

static void InitDefaultsProcedureStatement_ProcStmt() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::Pasc::_ProcedureStatement_ProcStmt_default_instance_;
    new (ptr) ::Pasc::ProcedureStatement_ProcStmt();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::Pasc::ProcedureStatement_ProcStmt::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_ProcedureStatement_ProcStmt =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsProcedureStatement_ProcStmt}, {
      &protobuf_program_2eproto::scc_info_BinaryExpr.base,}};

static void InitDefaultsProcedureStatement() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::Pasc::_ProcedureStatement_default_instance_;
    new (ptr) ::Pasc::ProcedureStatement();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::Pasc::ProcedureStatement::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<5> scc_info_ProcedureStatement =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 5, InitDefaultsProcedureStatement}, {
      &protobuf_program_2eproto::scc_info_ProcedureStatement_Write.base,
      &protobuf_program_2eproto::scc_info_ProcedureStatement_WriteLn.base,
      &protobuf_program_2eproto::scc_info_ProcedureStatement_Read.base,
      &protobuf_program_2eproto::scc_info_ProcedureStatement_ReadLn.base,
      &protobuf_program_2eproto::scc_info_ProcedureStatement_ProcStmt.base,}};

static void InitDefaultsAssignStatement() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::Pasc::_AssignStatement_default_instance_;
    new (ptr) ::Pasc::AssignStatement();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::Pasc::AssignStatement::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_AssignStatement =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsAssignStatement}, {
      &protobuf_program_2eproto::scc_info_BinaryExpr.base,}};

static void InitDefaultsIfStatement() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::Pasc::_IfStatement_default_instance_;
    new (ptr) ::Pasc::IfStatement();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  {
    void* ptr = &::Pasc::_Statement_default_instance_;
    new (ptr) ::Pasc::Statement();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::Pasc::IfStatement::InitAsDefaultInstance();
  ::Pasc::Statement::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<4> scc_info_IfStatement =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 4, InitDefaultsIfStatement}, {
      &protobuf_program_2eproto::scc_info_BinaryExpr.base,
      &protobuf_program_2eproto::scc_info_AssignStatement.base,
      &protobuf_program_2eproto::scc_info_ProcedureStatement.base,
      &protobuf_program_2eproto::scc_info_ReturnStatement.base,}};

static void InitDefaultsReturnStatement() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::Pasc::_ReturnStatement_default_instance_;
    new (ptr) ::Pasc::ReturnStatement();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::Pasc::ReturnStatement::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_ReturnStatement =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsReturnStatement}, {
      &protobuf_program_2eproto::scc_info_BinaryExpr.base,}};

static void InitDefaultsIdentifier_Variable() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::Pasc::_Identifier_Variable_default_instance_;
    new (ptr) ::Pasc::Identifier_Variable();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::Pasc::Identifier_Variable::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_Identifier_Variable =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsIdentifier_Variable}, {}};

static void InitDefaultsIdentifier_IndexedVariable() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::Pasc::_Identifier_IndexedVariable_default_instance_;
    new (ptr) ::Pasc::Identifier_IndexedVariable();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::Pasc::Identifier_IndexedVariable::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_Identifier_IndexedVariable =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsIdentifier_IndexedVariable}, {}};

static void InitDefaultsIdentifier_FieldDesignator() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::Pasc::_Identifier_FieldDesignator_default_instance_;
    new (ptr) ::Pasc::Identifier_FieldDesignator();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::Pasc::Identifier_FieldDesignator::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_Identifier_FieldDesignator =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsIdentifier_FieldDesignator}, {}};

static void InitDefaultsIdentifier() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::Pasc::_Identifier_default_instance_;
    new (ptr) ::Pasc::Identifier();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::Pasc::Identifier::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<3> scc_info_Identifier =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 3, InitDefaultsIdentifier}, {
      &protobuf_program_2eproto::scc_info_Identifier_Variable.base,
      &protobuf_program_2eproto::scc_info_Identifier_IndexedVariable.base,
      &protobuf_program_2eproto::scc_info_Identifier_FieldDesignator.base,}};

static void InitDefaultsBinaryExpr() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::Pasc::_Expression_default_instance_;
    new (ptr) ::Pasc::Expression();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  {
    void* ptr = &::Pasc::_WriteParameter_default_instance_;
    new (ptr) ::Pasc::WriteParameter();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  {
    void* ptr = &::Pasc::_BinaryExpr_default_instance_;
    new (ptr) ::Pasc::BinaryExpr();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  {
    void* ptr = &::Pasc::_FuncCall_default_instance_;
    new (ptr) ::Pasc::FuncCall();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::Pasc::Expression::InitAsDefaultInstance();
  ::Pasc::WriteParameter::InitAsDefaultInstance();
  ::Pasc::BinaryExpr::InitAsDefaultInstance();
  ::Pasc::FuncCall::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<4> scc_info_BinaryExpr =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 4, InitDefaultsBinaryExpr}, {
      &protobuf_program_2eproto::scc_info_Operator.base,
      &protobuf_program_2eproto::scc_info_Identifier.base,
      &protobuf_program_2eproto::scc_info_UIntLiteral.base,
      &protobuf_program_2eproto::scc_info_Type.base,}};

static void InitDefaultsUIntLiteral() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::Pasc::_UIntLiteral_default_instance_;
    new (ptr) ::Pasc::UIntLiteral();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::Pasc::UIntLiteral::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_UIntLiteral =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsUIntLiteral}, {}};

static void InitDefaultsType_Integer() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::Pasc::_Type_Integer_default_instance_;
    new (ptr) ::Pasc::Type_Integer();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::Pasc::Type_Integer::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_Type_Integer =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsType_Integer}, {}};

static void InitDefaultsType_Boolean() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::Pasc::_Type_Boolean_default_instance_;
    new (ptr) ::Pasc::Type_Boolean();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::Pasc::Type_Boolean::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_Type_Boolean =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsType_Boolean}, {}};

static void InitDefaultsType_Real() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::Pasc::_Type_Real_default_instance_;
    new (ptr) ::Pasc::Type_Real();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::Pasc::Type_Real::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_Type_Real =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsType_Real}, {}};

static void InitDefaultsType_Char() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::Pasc::_Type_Char_default_instance_;
    new (ptr) ::Pasc::Type_Char();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::Pasc::Type_Char::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_Type_Char =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsType_Char}, {}};

static void InitDefaultsType_Void() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::Pasc::_Type_Void_default_instance_;
    new (ptr) ::Pasc::Type_Void();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::Pasc::Type_Void::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_Type_Void =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsType_Void}, {}};

static void InitDefaultsType() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::Pasc::_Type_default_instance_;
    new (ptr) ::Pasc::Type();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::Pasc::Type::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<5> scc_info_Type =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 5, InitDefaultsType}, {
      &protobuf_program_2eproto::scc_info_Type_Integer.base,
      &protobuf_program_2eproto::scc_info_Type_Real.base,
      &protobuf_program_2eproto::scc_info_Type_Boolean.base,
      &protobuf_program_2eproto::scc_info_Type_Char.base,
      &protobuf_program_2eproto::scc_info_Type_Void.base,}};

static void InitDefaultsOperator() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::Pasc::_Operator_default_instance_;
    new (ptr) ::Pasc::Operator();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::Pasc::Operator::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_Operator =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsOperator}, {}};

void InitDefaults() {
  ::google::protobuf::internal::InitSCC(&scc_info_Program.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Block.base);
  ::google::protobuf::internal::InitSCC(&scc_info_FormalParameter.base);
  ::google::protobuf::internal::InitSCC(&scc_info_VariableParam.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ValueParam.base);
  ::google::protobuf::internal::InitSCC(&scc_info_VarDeclaration.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ProcedureStatement_WriteLn.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ProcedureStatement_Write.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ProcedureStatement_Read.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ProcedureStatement_ReadLn.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ProcedureStatement_ProcStmt.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ProcedureStatement.base);
  ::google::protobuf::internal::InitSCC(&scc_info_AssignStatement.base);
  ::google::protobuf::internal::InitSCC(&scc_info_IfStatement.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ReturnStatement.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Identifier_Variable.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Identifier_IndexedVariable.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Identifier_FieldDesignator.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Identifier.base);
  ::google::protobuf::internal::InitSCC(&scc_info_BinaryExpr.base);
  ::google::protobuf::internal::InitSCC(&scc_info_UIntLiteral.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Type_Integer.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Type_Boolean.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Type_Real.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Type_Char.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Type_Void.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Type.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Operator.base);
}

::google::protobuf::Metadata file_level_metadata[37];
const ::google::protobuf::EnumDescriptor* file_level_enum_descriptors[9];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Pasc::Program, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Pasc::Program, kind_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Pasc::Program, name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Pasc::Program, params_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Pasc::Program, block_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Pasc::Block, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Pasc::Block, vardecl_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Pasc::Block, stmts_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Pasc::Block, callables_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Pasc::Callable, _internal_metadata_),
  ~0u,  // no _extensions_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Pasc::Callable, _oneof_case_[0]),
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Pasc::Callable, kind_),
  offsetof(::Pasc::CallableDefaultTypeInternal, funcdecl_),
  offsetof(::Pasc::CallableDefaultTypeInternal, procdecl_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Pasc::Callable, call_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Pasc::FormalParameter, _internal_metadata_),
  ~0u,  // no _extensions_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Pasc::FormalParameter, _oneof_case_[0]),
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Pasc::FormalParameter, kind_),
  offsetof(::Pasc::FormalParameterDefaultTypeInternal, fhead_),
  offsetof(::Pasc::FormalParameterDefaultTypeInternal, phead_),
  offsetof(::Pasc::FormalParameterDefaultTypeInternal, vparam_),
  offsetof(::Pasc::FormalParameterDefaultTypeInternal, valparam_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Pasc::FormalParameter, fp_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Pasc::VariableParam, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Pasc::VariableParam, names_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Pasc::VariableParam, type_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Pasc::ValueParam, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Pasc::ValueParam, names_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Pasc::ValueParam, type_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Pasc::FuncHeading, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Pasc::FuncHeading, name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Pasc::FuncHeading, params_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Pasc::FuncHeading, returntype_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Pasc::ProcHeading, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Pasc::ProcHeading, name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Pasc::ProcHeading, params_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Pasc::ProcHeading, returntype_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Pasc::FuncDeclaration, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Pasc::FuncDeclaration, funcheading_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Pasc::FuncDeclaration, blk_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Pasc::FuncDeclaration, dir_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Pasc::ProcDeclaration, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Pasc::ProcDeclaration, prochead_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Pasc::ProcDeclaration, blk_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Pasc::ProcDeclaration, dir_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Pasc::VarDeclaration, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Pasc::VarDeclaration, name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Pasc::VarDeclaration, type_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Pasc::ProcedureStatement_WriteLn, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Pasc::ProcedureStatement_WriteLn, name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Pasc::ProcedureStatement_WriteLn, file_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Pasc::ProcedureStatement_WriteLn, params_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Pasc::ProcedureStatement_Write, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Pasc::ProcedureStatement_Read, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Pasc::ProcedureStatement_ReadLn, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Pasc::ProcedureStatement_ProcStmt, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Pasc::ProcedureStatement_ProcStmt, name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Pasc::ProcedureStatement_ProcStmt, params_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Pasc::ProcedureStatement, _internal_metadata_),
  ~0u,  // no _extensions_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Pasc::ProcedureStatement, _oneof_case_[0]),
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Pasc::ProcedureStatement, kind_),
  offsetof(::Pasc::ProcedureStatementDefaultTypeInternal, wrt_),
  offsetof(::Pasc::ProcedureStatementDefaultTypeInternal, wrtln_),
  offsetof(::Pasc::ProcedureStatementDefaultTypeInternal, rd_),
  offsetof(::Pasc::ProcedureStatementDefaultTypeInternal, rdln_),
  offsetof(::Pasc::ProcedureStatementDefaultTypeInternal, ps_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Pasc::ProcedureStatement, stmt_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Pasc::AssignStatement, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Pasc::AssignStatement, variable_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Pasc::AssignStatement, value_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Pasc::IfStatement, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Pasc::IfStatement, cond_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Pasc::IfStatement, truepath_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Pasc::IfStatement, elsepath_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Pasc::ReturnStatement, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Pasc::ReturnStatement, value_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Pasc::Statement, _internal_metadata_),
  ~0u,  // no _extensions_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Pasc::Statement, _oneof_case_[0]),
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Pasc::Statement, kind_),
  offsetof(::Pasc::StatementDefaultTypeInternal, assignstmt_),
  offsetof(::Pasc::StatementDefaultTypeInternal, procstmt_),
  offsetof(::Pasc::StatementDefaultTypeInternal, ifstmt_),
  offsetof(::Pasc::StatementDefaultTypeInternal, retstmt_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Pasc::Statement, stmt_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Pasc::Identifier_Variable, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Pasc::Identifier_Variable, name_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Pasc::Identifier_IndexedVariable, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Pasc::Identifier_FieldDesignator, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Pasc::Identifier, _internal_metadata_),
  ~0u,  // no _extensions_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Pasc::Identifier, _oneof_case_[0]),
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Pasc::Identifier, kind_),
  offsetof(::Pasc::IdentifierDefaultTypeInternal, var_),
  offsetof(::Pasc::IdentifierDefaultTypeInternal, iv_),
  offsetof(::Pasc::IdentifierDefaultTypeInternal, fld_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Pasc::Identifier, value_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Pasc::Expression, _internal_metadata_),
  ~0u,  // no _extensions_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Pasc::Expression, _oneof_case_[0]),
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Pasc::Expression, kind_),
  offsetof(::Pasc::ExpressionDefaultTypeInternal, id_),
  offsetof(::Pasc::ExpressionDefaultTypeInternal, uint_),
  offsetof(::Pasc::ExpressionDefaultTypeInternal, be_),
  offsetof(::Pasc::ExpressionDefaultTypeInternal, wp_),
  offsetof(::Pasc::ExpressionDefaultTypeInternal, fc_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Pasc::Expression, expr_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Pasc::WriteParameter, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Pasc::WriteParameter, e_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Pasc::WriteParameter, totalwidth_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Pasc::WriteParameter, fracdigits_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Pasc::BinaryExpr, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Pasc::BinaryExpr, left_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Pasc::BinaryExpr, right_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Pasc::BinaryExpr, op_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Pasc::UIntLiteral, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Pasc::UIntLiteral, value_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Pasc::FuncCall, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Pasc::FuncCall, name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Pasc::FuncCall, args_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Pasc::FuncCall, returntype_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Pasc::Type_Integer, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Pasc::Type_Integer, name_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Pasc::Type_Boolean, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Pasc::Type_Boolean, name_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Pasc::Type_Real, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Pasc::Type_Real, name_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Pasc::Type_Char, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Pasc::Type_Char, name_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Pasc::Type_Void, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Pasc::Type_Void, name_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Pasc::Type, _internal_metadata_),
  ~0u,  // no _extensions_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Pasc::Type, _oneof_case_[0]),
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Pasc::Type, tk_),
  offsetof(::Pasc::TypeDefaultTypeInternal, int__),
  offsetof(::Pasc::TypeDefaultTypeInternal, real_),
  offsetof(::Pasc::TypeDefaultTypeInternal, bool__),
  offsetof(::Pasc::TypeDefaultTypeInternal, char__),
  offsetof(::Pasc::TypeDefaultTypeInternal, void__),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Pasc::Type, type_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Pasc::Operator, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Pasc::Operator, op_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::Pasc::Program)},
  { 9, -1, sizeof(::Pasc::Block)},
  { 17, -1, sizeof(::Pasc::Callable)},
  { 26, -1, sizeof(::Pasc::FormalParameter)},
  { 37, -1, sizeof(::Pasc::VariableParam)},
  { 44, -1, sizeof(::Pasc::ValueParam)},
  { 51, -1, sizeof(::Pasc::FuncHeading)},
  { 59, -1, sizeof(::Pasc::ProcHeading)},
  { 67, -1, sizeof(::Pasc::FuncDeclaration)},
  { 75, -1, sizeof(::Pasc::ProcDeclaration)},
  { 83, -1, sizeof(::Pasc::VarDeclaration)},
  { 90, -1, sizeof(::Pasc::ProcedureStatement_WriteLn)},
  { 98, -1, sizeof(::Pasc::ProcedureStatement_Write)},
  { 103, -1, sizeof(::Pasc::ProcedureStatement_Read)},
  { 108, -1, sizeof(::Pasc::ProcedureStatement_ReadLn)},
  { 113, -1, sizeof(::Pasc::ProcedureStatement_ProcStmt)},
  { 120, -1, sizeof(::Pasc::ProcedureStatement)},
  { 132, -1, sizeof(::Pasc::AssignStatement)},
  { 139, -1, sizeof(::Pasc::IfStatement)},
  { 147, -1, sizeof(::Pasc::ReturnStatement)},
  { 153, -1, sizeof(::Pasc::Statement)},
  { 164, -1, sizeof(::Pasc::Identifier_Variable)},
  { 170, -1, sizeof(::Pasc::Identifier_IndexedVariable)},
  { 175, -1, sizeof(::Pasc::Identifier_FieldDesignator)},
  { 180, -1, sizeof(::Pasc::Identifier)},
  { 190, -1, sizeof(::Pasc::Expression)},
  { 202, -1, sizeof(::Pasc::WriteParameter)},
  { 210, -1, sizeof(::Pasc::BinaryExpr)},
  { 218, -1, sizeof(::Pasc::UIntLiteral)},
  { 224, -1, sizeof(::Pasc::FuncCall)},
  { 232, -1, sizeof(::Pasc::Type_Integer)},
  { 238, -1, sizeof(::Pasc::Type_Boolean)},
  { 244, -1, sizeof(::Pasc::Type_Real)},
  { 250, -1, sizeof(::Pasc::Type_Char)},
  { 256, -1, sizeof(::Pasc::Type_Void)},
  { 262, -1, sizeof(::Pasc::Type)},
  { 274, -1, sizeof(::Pasc::Operator)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::Pasc::_Program_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::Pasc::_Block_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::Pasc::_Callable_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::Pasc::_FormalParameter_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::Pasc::_VariableParam_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::Pasc::_ValueParam_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::Pasc::_FuncHeading_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::Pasc::_ProcHeading_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::Pasc::_FuncDeclaration_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::Pasc::_ProcDeclaration_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::Pasc::_VarDeclaration_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::Pasc::_ProcedureStatement_WriteLn_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::Pasc::_ProcedureStatement_Write_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::Pasc::_ProcedureStatement_Read_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::Pasc::_ProcedureStatement_ReadLn_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::Pasc::_ProcedureStatement_ProcStmt_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::Pasc::_ProcedureStatement_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::Pasc::_AssignStatement_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::Pasc::_IfStatement_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::Pasc::_ReturnStatement_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::Pasc::_Statement_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::Pasc::_Identifier_Variable_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::Pasc::_Identifier_IndexedVariable_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::Pasc::_Identifier_FieldDesignator_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::Pasc::_Identifier_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::Pasc::_Expression_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::Pasc::_WriteParameter_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::Pasc::_BinaryExpr_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::Pasc::_UIntLiteral_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::Pasc::_FuncCall_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::Pasc::_Type_Integer_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::Pasc::_Type_Boolean_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::Pasc::_Type_Real_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::Pasc::_Type_Char_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::Pasc::_Type_Void_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::Pasc::_Type_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::Pasc::_Operator_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  AssignDescriptors(
      "program.proto", schemas, file_default_instances, TableStruct::offsets,
      file_level_metadata, file_level_enum_descriptors, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 37);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\rprogram.proto\022\004Pasc\"b\n\007Program\022\035\n\004kind"
      "\030\001 \001(\0162\017.Pasc.TokenKind\022\014\n\004name\030\002 \001(\t\022\016\n"
      "\006params\030\003 \003(\t\022\032\n\005block\030\004 \001(\0132\013.Pasc.Bloc"
      "k\"q\n\005Block\022%\n\007varDecl\030\001 \003(\0132\024.Pasc.VarDe"
      "claration\022\036\n\005stmts\030\002 \003(\0132\017.Pasc.Statemen"
      "t\022!\n\tcallables\030\003 \003(\0132\016.Pasc.Callable\"\257\001\n"
      "\010Callable\022%\n\004kind\030\001 \001(\0162\027.Pasc.Callable."
      "CallKind\022)\n\010funcDecl\030\002 \001(\0132\025.Pasc.FuncDe"
      "clarationH\000\022)\n\010procDecl\030\003 \001(\0132\025.Pasc.Pro"
      "cDeclarationH\000\"\036\n\010CallKind\022\010\n\004Func\020\000\022\010\n\004"
      "Proc\020\001B\006\n\004call\"\234\002\n\017FormalParameter\022*\n\004ki"
      "nd\030\001 \001(\0162\034.Pasc.FormalParameter.FPKind\022\""
      "\n\005fHead\030\002 \001(\0132\021.Pasc.FuncHeadingH\000\022\"\n\005pH"
      "ead\030\003 \001(\0132\021.Pasc.ProcHeadingH\000\022%\n\006vParam"
      "\030\004 \001(\0132\023.Pasc.VariableParamH\000\022$\n\010valPara"
      "m\030\005 \001(\0132\020.Pasc.ValueParamH\000\"B\n\006FPKind\022\014\n"
      "\010FuncHead\020\000\022\014\n\010ProcHead\020\001\022\014\n\010VarParam\020\002\022"
      "\016\n\nValueParam\020\003B\004\n\002fp\"8\n\rVariableParam\022\r"
      "\n\005names\030\001 \003(\t\022\030\n\004type\030\002 \001(\0132\n.Pasc.Type\""
      "5\n\nValueParam\022\r\n\005names\030\001 \003(\t\022\030\n\004type\030\002 \001"
      "(\0132\n.Pasc.Type\"b\n\013FuncHeading\022\014\n\004name\030\001 "
      "\001(\t\022%\n\006params\030\002 \003(\0132\025.Pasc.FormalParamet"
      "er\022\036\n\nreturnType\030\003 \001(\0132\n.Pasc.Type\"b\n\013Pr"
      "ocHeading\022\014\n\004name\030\001 \001(\t\022%\n\006params\030\002 \003(\0132"
      "\025.Pasc.FormalParameter\022\036\n\nreturnType\030\003 \001"
      "(\0132\n.Pasc.Type\"`\n\017FuncDeclaration\022&\n\013fun"
      "cHeading\030\001 \001(\0132\021.Pasc.FuncHeading\022\030\n\003blk"
      "\030\002 \001(\0132\013.Pasc.Block\022\013\n\003dir\030\003 \001(\t\"]\n\017Proc"
      "Declaration\022#\n\010procHead\030\001 \001(\0132\021.Pasc.Pro"
      "cHeading\022\030\n\003blk\030\002 \001(\0132\013.Pasc.Block\022\013\n\003di"
      "r\030\003 \001(\t\"J\n\016VarDeclaration\022\036\n\004name\030\001 \001(\0132"
      "\020.Pasc.Expression\022\030\n\004type\030\002 \001(\0132\n.Pasc.T"
      "ype\"\302\004\n\022ProcedureStatement\022-\n\004kind\030\001 \001(\016"
      "2\037.Pasc.ProcedureStatement.PSKind\022-\n\003wrt"
      "\030\002 \001(\0132\036.Pasc.ProcedureStatement.WriteH\000"
      "\0221\n\005wrtLn\030\003 \001(\0132 .Pasc.ProcedureStatemen"
      "t.WriteLnH\000\022+\n\002rd\030\004 \001(\0132\035.Pasc.Procedure"
      "Statement.ReadH\000\022/\n\004rdLn\030\005 \001(\0132\037.Pasc.Pr"
      "ocedureStatement.ReadLnH\000\022/\n\002ps\030\006 \001(\0132!."
      "Pasc.ProcedureStatement.ProcStmtH\000\032Y\n\007Wr"
      "iteLn\022\014\n\004name\030\001 \001(\t\022\036\n\004file\030\002 \001(\0132\020.Pasc"
      ".Expression\022 \n\006params\030\003 \003(\0132\020.Pasc.Expre"
      "ssion\032\007\n\005Write\032\006\n\004Read\032\010\n\006ReadLn\032L\n\010Proc"
      "Stmt\022\036\n\004name\030\001 \001(\0132\020.Pasc.Expression\022 \n\006"
      "params\030\002 \003(\0132\020.Pasc.Expression\"@\n\006PSKind"
      "\022\007\n\003wln\020\000\022\t\n\005write\020\001\022\010\n\004read\020\002\022\n\n\006readLn"
      "\020\003\022\014\n\010procStmt\020\004B\006\n\004stmt\"V\n\017AssignStatem"
      "ent\022\"\n\010variable\030\001 \001(\0132\020.Pasc.Expression\022"
      "\037\n\005value\030\002 \001(\0132\020.Pasc.Expression\"s\n\013IfSt"
      "atement\022\036\n\004cond\030\001 \001(\0132\020.Pasc.Expression\022"
      "!\n\010truePath\030\002 \001(\0132\017.Pasc.Statement\022!\n\010el"
      "sePath\030\003 \001(\0132\017.Pasc.Statement\"2\n\017ReturnS"
      "tatement\022\037\n\005value\030\001 \001(\0132\020.Pasc.Expressio"
      "n\"\240\002\n\tStatement\022&\n\004kind\030\001 \001(\0162\030.Pasc.Sta"
      "tement.StmtKind\022+\n\nassignStmt\030\002 \001(\0132\025.Pa"
      "sc.AssignStatementH\000\022,\n\010procStmt\030\003 \001(\0132\030"
      ".Pasc.ProcedureStatementH\000\022#\n\006ifStmt\030\004 \001"
      "(\0132\021.Pasc.IfStatementH\000\022(\n\007retStmt\030\005 \001(\013"
      "2\025.Pasc.ReturnStatementH\000\"9\n\010StmtKind\022\006\n"
      "\002if\020\000\022\n\n\006assign\020\001\022\r\n\tprocedure\020\002\022\n\n\006retu"
      "rn\020\003B\006\n\004stmt\"\267\002\n\nIdentifier\022%\n\004kind\030\001 \001("
      "\0162\027.Pasc.Identifier.IDKind\022(\n\003var\030\002 \001(\0132"
      "\031.Pasc.Identifier.VariableH\000\022.\n\002iv\030\003 \001(\013"
      "2 .Pasc.Identifier.IndexedVariableH\000\022/\n\003"
      "fld\030\004 \001(\0132 .Pasc.Identifier.FieldDesigna"
      "torH\000\032\030\n\010Variable\022\014\n\004name\030\001 \001(\t\032\021\n\017Index"
      "edVariable\032\021\n\017FieldDesignator\".\n\006IDKind\022"
      "\r\n\tEntireVar\020\000\022\n\n\006IdxVar\020\001\022\t\n\005Field\020\002B\007\n"
      "\005value\"\265\002\n\nExpression\022\'\n\004kind\030\001 \001(\0162\031.Pa"
      "sc.Expression.ExprKind\022\036\n\002id\030\002 \001(\0132\020.Pas"
      "c.IdentifierH\000\022!\n\004uint\030\003 \001(\0132\021.Pasc.UInt"
      "LiteralH\000\022\036\n\002be\030\004 \001(\0132\020.Pasc.BinaryExprH"
      "\000\022\"\n\002wp\030\005 \001(\0132\024.Pasc.WriteParameterH\000\022\034\n"
      "\002fc\030\006 \001(\0132\016.Pasc.FuncCallH\000\"Q\n\010ExprKind\022"
      "\010\n\004UInt\020\000\022\010\n\004Bool\020\001\022\t\n\005Ident\020\002\022\013\n\007BinExp"
      "r\020\003\022\016\n\nWriteParam\020\004\022\t\n\005FCall\020\005B\006\n\004expr\"y"
      "\n\016WriteParameter\022\033\n\001e\030\001 \001(\0132\020.Pasc.Expre"
      "ssion\022$\n\ntotalWidth\030\002 \001(\0132\020.Pasc.Express"
      "ion\022$\n\nfracDigits\030\003 \001(\0132\020.Pasc.Expressio"
      "n\"i\n\nBinaryExpr\022\036\n\004left\030\001 \001(\0132\020.Pasc.Exp"
      "ression\022\037\n\005right\030\002 \001(\0132\020.Pasc.Expression"
      "\022\032\n\002op\030\003 \001(\0132\016.Pasc.Operator\"\034\n\013UIntLite"
      "ral\022\r\n\005value\030\001 \001(\r\"j\n\010FuncCall\022\036\n\004name\030\001"
      " \001(\0132\020.Pasc.Expression\022\036\n\004args\030\002 \003(\0132\020.P"
      "asc.Expression\022\036\n\nreturnType\030\003 \001(\0132\n.Pas"
      "c.Type\"\221\003\n\004Type\022\037\n\002tk\030\001 \001(\0162\023.Pasc.Type."
      "TypeKind\022!\n\003int\030\002 \001(\0132\022.Pasc.Type.Intege"
      "rH\000\022\037\n\004real\030\003 \001(\0132\017.Pasc.Type.RealH\000\022\"\n\004"
      "bool\030\004 \001(\0132\022.Pasc.Type.BooleanH\000\022\037\n\004char"
      "\030\005 \001(\0132\017.Pasc.Type.CharH\000\022\037\n\004void\030\006 \001(\0132"
      "\017.Pasc.Type.VoidH\000\032\027\n\007Integer\022\014\n\004name\030\001 "
      "\001(\t\032\027\n\007Boolean\022\014\n\004name\030\001 \001(\t\032\024\n\004Real\022\014\n\004"
      "name\030\001 \001(\t\032\024\n\004Char\022\014\n\004name\030\001 \001(\t\032\024\n\004Void"
      "\022\014\n\004name\030\001 \001(\t\"B\n\010TypeKind\022\013\n\007INTEGER\020\000\022"
      "\010\n\004REAL\020\001\022\013\n\007BOOLEAN\020\002\022\010\n\004CHAR\020\003\022\010\n\004VOID"
      "\020\004B\006\n\004type\"\240\001\n\010Operator\022!\n\002op\030\001 \001(\0162\025.Pa"
      "sc.Operator.OpKind\"q\n\006OpKind\022\010\n\004Plus\020\000\022\t"
      "\n\005Minus\020\001\022\007\n\003Div\020\002\022\007\n\003Sub\020\003\022\007\n\003Mod\020\004\022\007\n\003"
      "And\020\005\022\006\n\002Or\020\006\022\006\n\002In\020\007\022\t\n\005Equal\020\010\022\010\n\004Less"
      "\020\t\022\t\n\005Great\020\n*m\n\tTokenKind\022\013\n\007PROGRAM\020\000\022"
      "\n\n\006ASSIGN\020\001\022\016\n\nIDENTIFIER\020\002\022\013\n\007UINTLIT\020\003"
      "\022\r\n\tPROCEDURE\020\004\022\010\n\004LESS\020\005\022\t\n\005GREAT\020\006\022\006\n\002"
      "IF\020\007B\030Z\026pkg/codegen/serializerb\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 4118);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "program.proto", &protobuf_RegisterTypes);
}

void AddDescriptors() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_program_2eproto
namespace Pasc {
const ::google::protobuf::EnumDescriptor* Callable_CallKind_descriptor() {
  protobuf_program_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_program_2eproto::file_level_enum_descriptors[0];
}
bool Callable_CallKind_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const Callable_CallKind Callable::Func;
const Callable_CallKind Callable::Proc;
const Callable_CallKind Callable::CallKind_MIN;
const Callable_CallKind Callable::CallKind_MAX;
const int Callable::CallKind_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* FormalParameter_FPKind_descriptor() {
  protobuf_program_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_program_2eproto::file_level_enum_descriptors[1];
}
bool FormalParameter_FPKind_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const FormalParameter_FPKind FormalParameter::FuncHead;
const FormalParameter_FPKind FormalParameter::ProcHead;
const FormalParameter_FPKind FormalParameter::VarParam;
const FormalParameter_FPKind FormalParameter::ValueParam;
const FormalParameter_FPKind FormalParameter::FPKind_MIN;
const FormalParameter_FPKind FormalParameter::FPKind_MAX;
const int FormalParameter::FPKind_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* ProcedureStatement_PSKind_descriptor() {
  protobuf_program_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_program_2eproto::file_level_enum_descriptors[2];
}
bool ProcedureStatement_PSKind_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const ProcedureStatement_PSKind ProcedureStatement::wln;
const ProcedureStatement_PSKind ProcedureStatement::write;
const ProcedureStatement_PSKind ProcedureStatement::read;
const ProcedureStatement_PSKind ProcedureStatement::readLn;
const ProcedureStatement_PSKind ProcedureStatement::procStmt;
const ProcedureStatement_PSKind ProcedureStatement::PSKind_MIN;
const ProcedureStatement_PSKind ProcedureStatement::PSKind_MAX;
const int ProcedureStatement::PSKind_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* Statement_StmtKind_descriptor() {
  protobuf_program_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_program_2eproto::file_level_enum_descriptors[3];
}
bool Statement_StmtKind_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const Statement_StmtKind Statement::if_;
const Statement_StmtKind Statement::assign;
const Statement_StmtKind Statement::procedure;
const Statement_StmtKind Statement::return_;
const Statement_StmtKind Statement::StmtKind_MIN;
const Statement_StmtKind Statement::StmtKind_MAX;
const int Statement::StmtKind_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* Identifier_IDKind_descriptor() {
  protobuf_program_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_program_2eproto::file_level_enum_descriptors[4];
}
bool Identifier_IDKind_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const Identifier_IDKind Identifier::EntireVar;
const Identifier_IDKind Identifier::IdxVar;
const Identifier_IDKind Identifier::Field;
const Identifier_IDKind Identifier::IDKind_MIN;
const Identifier_IDKind Identifier::IDKind_MAX;
const int Identifier::IDKind_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* Expression_ExprKind_descriptor() {
  protobuf_program_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_program_2eproto::file_level_enum_descriptors[5];
}
bool Expression_ExprKind_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const Expression_ExprKind Expression::UInt;
const Expression_ExprKind Expression::Bool;
const Expression_ExprKind Expression::Ident;
const Expression_ExprKind Expression::BinExpr;
const Expression_ExprKind Expression::WriteParam;
const Expression_ExprKind Expression::FCall;
const Expression_ExprKind Expression::ExprKind_MIN;
const Expression_ExprKind Expression::ExprKind_MAX;
const int Expression::ExprKind_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* Type_TypeKind_descriptor() {
  protobuf_program_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_program_2eproto::file_level_enum_descriptors[6];
}
bool Type_TypeKind_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const Type_TypeKind Type::INTEGER;
const Type_TypeKind Type::REAL;
const Type_TypeKind Type::BOOLEAN;
const Type_TypeKind Type::CHAR;
const Type_TypeKind Type::VOID;
const Type_TypeKind Type::TypeKind_MIN;
const Type_TypeKind Type::TypeKind_MAX;
const int Type::TypeKind_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* Operator_OpKind_descriptor() {
  protobuf_program_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_program_2eproto::file_level_enum_descriptors[7];
}
bool Operator_OpKind_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
    case 8:
    case 9:
    case 10:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const Operator_OpKind Operator::Plus;
const Operator_OpKind Operator::Minus;
const Operator_OpKind Operator::Div;
const Operator_OpKind Operator::Sub;
const Operator_OpKind Operator::Mod;
const Operator_OpKind Operator::And;
const Operator_OpKind Operator::Or;
const Operator_OpKind Operator::In;
const Operator_OpKind Operator::Equal;
const Operator_OpKind Operator::Less;
const Operator_OpKind Operator::Great;
const Operator_OpKind Operator::OpKind_MIN;
const Operator_OpKind Operator::OpKind_MAX;
const int Operator::OpKind_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* TokenKind_descriptor() {
  protobuf_program_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_program_2eproto::file_level_enum_descriptors[8];
}
bool TokenKind_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
      return true;
    default:
      return false;
  }
}


// ===================================================================

void Program::InitAsDefaultInstance() {
  ::Pasc::_Program_default_instance_._instance.get_mutable()->block_ = const_cast< ::Pasc::Block*>(
      ::Pasc::Block::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Program::kKindFieldNumber;
const int Program::kNameFieldNumber;
const int Program::kParamsFieldNumber;
const int Program::kBlockFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Program::Program()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_program_2eproto::scc_info_Program.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:Pasc.Program)
}
Program::Program(const Program& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      params_(from.params_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.name().size() > 0) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.has_block()) {
    block_ = new ::Pasc::Block(*from.block_);
  } else {
    block_ = NULL;
  }
  kind_ = from.kind_;
  // @@protoc_insertion_point(copy_constructor:Pasc.Program)
}

void Program::SharedCtor() {
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&block_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&kind_) -
      reinterpret_cast<char*>(&block_)) + sizeof(kind_));
}

Program::~Program() {
  // @@protoc_insertion_point(destructor:Pasc.Program)
  SharedDtor();
}

void Program::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete block_;
}

void Program::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Program::descriptor() {
  ::protobuf_program_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_program_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Program& Program::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_program_2eproto::scc_info_Program.base);
  return *internal_default_instance();
}


void Program::Clear() {
// @@protoc_insertion_point(message_clear_start:Pasc.Program)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  params_.Clear();
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && block_ != NULL) {
    delete block_;
  }
  block_ = NULL;
  kind_ = 0;
  _internal_metadata_.Clear();
}

bool Program::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Pasc.Program)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .Pasc.TokenKind kind = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_kind(static_cast< ::Pasc::TokenKind >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string name = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Pasc.Program.name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated string params = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_params()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->params(this->params_size() - 1).data(),
            static_cast<int>(this->params(this->params_size() - 1).length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Pasc.Program.params"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .Pasc.Block block = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_block()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Pasc.Program)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Pasc.Program)
  return false;
#undef DO_
}

void Program::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Pasc.Program)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .Pasc.TokenKind kind = 1;
  if (this->kind() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->kind(), output);
  }

  // string name = 2;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Pasc.Program.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->name(), output);
  }

  // repeated string params = 3;
  for (int i = 0, n = this->params_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->params(i).data(), static_cast<int>(this->params(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Pasc.Program.params");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      3, this->params(i), output);
  }

  // .Pasc.Block block = 4;
  if (this->has_block()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->_internal_block(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:Pasc.Program)
}

::google::protobuf::uint8* Program::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:Pasc.Program)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .Pasc.TokenKind kind = 1;
  if (this->kind() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->kind(), target);
  }

  // string name = 2;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Pasc.Program.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->name(), target);
  }

  // repeated string params = 3;
  for (int i = 0, n = this->params_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->params(i).data(), static_cast<int>(this->params(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Pasc.Program.params");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(3, this->params(i), target);
  }

  // .Pasc.Block block = 4;
  if (this->has_block()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, this->_internal_block(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Pasc.Program)
  return target;
}

size_t Program::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Pasc.Program)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated string params = 3;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->params_size());
  for (int i = 0, n = this->params_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->params(i));
  }

  // string name = 2;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  // .Pasc.Block block = 4;
  if (this->has_block()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *block_);
  }

  // .Pasc.TokenKind kind = 1;
  if (this->kind() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->kind());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Program::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Pasc.Program)
  GOOGLE_DCHECK_NE(&from, this);
  const Program* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Program>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Pasc.Program)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Pasc.Program)
    MergeFrom(*source);
  }
}

void Program::MergeFrom(const Program& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Pasc.Program)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  params_.MergeFrom(from.params_);
  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.has_block()) {
    mutable_block()->::Pasc::Block::MergeFrom(from.block());
  }
  if (from.kind() != 0) {
    set_kind(from.kind());
  }
}

void Program::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Pasc.Program)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Program::CopyFrom(const Program& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Pasc.Program)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Program::IsInitialized() const {
  return true;
}

void Program::Swap(Program* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Program::InternalSwap(Program* other) {
  using std::swap;
  params_.InternalSwap(CastToBase(&other->params_));
  name_.Swap(&other->name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(block_, other->block_);
  swap(kind_, other->kind_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Program::GetMetadata() const {
  protobuf_program_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_program_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Block::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Block::kVarDeclFieldNumber;
const int Block::kStmtsFieldNumber;
const int Block::kCallablesFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Block::Block()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_program_2eproto::scc_info_Block.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:Pasc.Block)
}
Block::Block(const Block& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      vardecl_(from.vardecl_),
      stmts_(from.stmts_),
      callables_(from.callables_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:Pasc.Block)
}

void Block::SharedCtor() {
}

Block::~Block() {
  // @@protoc_insertion_point(destructor:Pasc.Block)
  SharedDtor();
}

void Block::SharedDtor() {
}

void Block::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Block::descriptor() {
  ::protobuf_program_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_program_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Block& Block::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_program_2eproto::scc_info_Block.base);
  return *internal_default_instance();
}


void Block::Clear() {
// @@protoc_insertion_point(message_clear_start:Pasc.Block)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  vardecl_.Clear();
  stmts_.Clear();
  callables_.Clear();
  _internal_metadata_.Clear();
}

bool Block::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Pasc.Block)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .Pasc.VarDeclaration varDecl = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_vardecl()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .Pasc.Statement stmts = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_stmts()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .Pasc.Callable callables = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_callables()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Pasc.Block)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Pasc.Block)
  return false;
#undef DO_
}

void Block::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Pasc.Block)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .Pasc.VarDeclaration varDecl = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->vardecl_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1,
      this->vardecl(static_cast<int>(i)),
      output);
  }

  // repeated .Pasc.Statement stmts = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->stmts_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2,
      this->stmts(static_cast<int>(i)),
      output);
  }

  // repeated .Pasc.Callable callables = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->callables_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3,
      this->callables(static_cast<int>(i)),
      output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:Pasc.Block)
}

::google::protobuf::uint8* Block::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:Pasc.Block)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .Pasc.VarDeclaration varDecl = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->vardecl_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->vardecl(static_cast<int>(i)), deterministic, target);
  }

  // repeated .Pasc.Statement stmts = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->stmts_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->stmts(static_cast<int>(i)), deterministic, target);
  }

  // repeated .Pasc.Callable callables = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->callables_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->callables(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Pasc.Block)
  return target;
}

size_t Block::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Pasc.Block)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .Pasc.VarDeclaration varDecl = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->vardecl_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->vardecl(static_cast<int>(i)));
    }
  }

  // repeated .Pasc.Statement stmts = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->stmts_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->stmts(static_cast<int>(i)));
    }
  }

  // repeated .Pasc.Callable callables = 3;
  {
    unsigned int count = static_cast<unsigned int>(this->callables_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->callables(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Block::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Pasc.Block)
  GOOGLE_DCHECK_NE(&from, this);
  const Block* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Block>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Pasc.Block)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Pasc.Block)
    MergeFrom(*source);
  }
}

void Block::MergeFrom(const Block& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Pasc.Block)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  vardecl_.MergeFrom(from.vardecl_);
  stmts_.MergeFrom(from.stmts_);
  callables_.MergeFrom(from.callables_);
}

void Block::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Pasc.Block)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Block::CopyFrom(const Block& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Pasc.Block)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Block::IsInitialized() const {
  return true;
}

void Block::Swap(Block* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Block::InternalSwap(Block* other) {
  using std::swap;
  CastToBase(&vardecl_)->InternalSwap(CastToBase(&other->vardecl_));
  CastToBase(&stmts_)->InternalSwap(CastToBase(&other->stmts_));
  CastToBase(&callables_)->InternalSwap(CastToBase(&other->callables_));
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Block::GetMetadata() const {
  protobuf_program_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_program_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Callable::InitAsDefaultInstance() {
  ::Pasc::_Callable_default_instance_.funcdecl_ = const_cast< ::Pasc::FuncDeclaration*>(
      ::Pasc::FuncDeclaration::internal_default_instance());
  ::Pasc::_Callable_default_instance_.procdecl_ = const_cast< ::Pasc::ProcDeclaration*>(
      ::Pasc::ProcDeclaration::internal_default_instance());
}
void Callable::set_allocated_funcdecl(::Pasc::FuncDeclaration* funcdecl) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_call();
  if (funcdecl) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      funcdecl = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, funcdecl, submessage_arena);
    }
    set_has_funcdecl();
    call_.funcdecl_ = funcdecl;
  }
  // @@protoc_insertion_point(field_set_allocated:Pasc.Callable.funcDecl)
}
void Callable::set_allocated_procdecl(::Pasc::ProcDeclaration* procdecl) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_call();
  if (procdecl) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      procdecl = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, procdecl, submessage_arena);
    }
    set_has_procdecl();
    call_.procdecl_ = procdecl;
  }
  // @@protoc_insertion_point(field_set_allocated:Pasc.Callable.procDecl)
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Callable::kKindFieldNumber;
const int Callable::kFuncDeclFieldNumber;
const int Callable::kProcDeclFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Callable::Callable()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_program_2eproto::scc_info_Block.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:Pasc.Callable)
}
Callable::Callable(const Callable& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  kind_ = from.kind_;
  clear_has_call();
  switch (from.call_case()) {
    case kFuncDecl: {
      mutable_funcdecl()->::Pasc::FuncDeclaration::MergeFrom(from.funcdecl());
      break;
    }
    case kProcDecl: {
      mutable_procdecl()->::Pasc::ProcDeclaration::MergeFrom(from.procdecl());
      break;
    }
    case CALL_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:Pasc.Callable)
}

void Callable::SharedCtor() {
  kind_ = 0;
  clear_has_call();
}

Callable::~Callable() {
  // @@protoc_insertion_point(destructor:Pasc.Callable)
  SharedDtor();
}

void Callable::SharedDtor() {
  if (has_call()) {
    clear_call();
  }
}

void Callable::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Callable::descriptor() {
  ::protobuf_program_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_program_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Callable& Callable::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_program_2eproto::scc_info_Block.base);
  return *internal_default_instance();
}


void Callable::clear_call() {
// @@protoc_insertion_point(one_of_clear_start:Pasc.Callable)
  switch (call_case()) {
    case kFuncDecl: {
      delete call_.funcdecl_;
      break;
    }
    case kProcDecl: {
      delete call_.procdecl_;
      break;
    }
    case CALL_NOT_SET: {
      break;
    }
  }
  _oneof_case_[0] = CALL_NOT_SET;
}


void Callable::Clear() {
// @@protoc_insertion_point(message_clear_start:Pasc.Callable)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  kind_ = 0;
  clear_call();
  _internal_metadata_.Clear();
}

bool Callable::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Pasc.Callable)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .Pasc.Callable.CallKind kind = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_kind(static_cast< ::Pasc::Callable_CallKind >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .Pasc.FuncDeclaration funcDecl = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_funcdecl()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .Pasc.ProcDeclaration procDecl = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_procdecl()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Pasc.Callable)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Pasc.Callable)
  return false;
#undef DO_
}

void Callable::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Pasc.Callable)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .Pasc.Callable.CallKind kind = 1;
  if (this->kind() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->kind(), output);
  }

  // .Pasc.FuncDeclaration funcDecl = 2;
  if (has_funcdecl()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_funcdecl(), output);
  }

  // .Pasc.ProcDeclaration procDecl = 3;
  if (has_procdecl()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->_internal_procdecl(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:Pasc.Callable)
}

::google::protobuf::uint8* Callable::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:Pasc.Callable)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .Pasc.Callable.CallKind kind = 1;
  if (this->kind() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->kind(), target);
  }

  // .Pasc.FuncDeclaration funcDecl = 2;
  if (has_funcdecl()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_funcdecl(), deterministic, target);
  }

  // .Pasc.ProcDeclaration procDecl = 3;
  if (has_procdecl()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->_internal_procdecl(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Pasc.Callable)
  return target;
}

size_t Callable::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Pasc.Callable)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .Pasc.Callable.CallKind kind = 1;
  if (this->kind() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->kind());
  }

  switch (call_case()) {
    // .Pasc.FuncDeclaration funcDecl = 2;
    case kFuncDecl: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *call_.funcdecl_);
      break;
    }
    // .Pasc.ProcDeclaration procDecl = 3;
    case kProcDecl: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *call_.procdecl_);
      break;
    }
    case CALL_NOT_SET: {
      break;
    }
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Callable::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Pasc.Callable)
  GOOGLE_DCHECK_NE(&from, this);
  const Callable* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Callable>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Pasc.Callable)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Pasc.Callable)
    MergeFrom(*source);
  }
}

void Callable::MergeFrom(const Callable& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Pasc.Callable)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.kind() != 0) {
    set_kind(from.kind());
  }
  switch (from.call_case()) {
    case kFuncDecl: {
      mutable_funcdecl()->::Pasc::FuncDeclaration::MergeFrom(from.funcdecl());
      break;
    }
    case kProcDecl: {
      mutable_procdecl()->::Pasc::ProcDeclaration::MergeFrom(from.procdecl());
      break;
    }
    case CALL_NOT_SET: {
      break;
    }
  }
}

void Callable::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Pasc.Callable)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Callable::CopyFrom(const Callable& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Pasc.Callable)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Callable::IsInitialized() const {
  return true;
}

void Callable::Swap(Callable* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Callable::InternalSwap(Callable* other) {
  using std::swap;
  swap(kind_, other->kind_);
  swap(call_, other->call_);
  swap(_oneof_case_[0], other->_oneof_case_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Callable::GetMetadata() const {
  protobuf_program_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_program_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void FormalParameter::InitAsDefaultInstance() {
  ::Pasc::_FormalParameter_default_instance_.fhead_ = const_cast< ::Pasc::FuncHeading*>(
      ::Pasc::FuncHeading::internal_default_instance());
  ::Pasc::_FormalParameter_default_instance_.phead_ = const_cast< ::Pasc::ProcHeading*>(
      ::Pasc::ProcHeading::internal_default_instance());
  ::Pasc::_FormalParameter_default_instance_.vparam_ = const_cast< ::Pasc::VariableParam*>(
      ::Pasc::VariableParam::internal_default_instance());
  ::Pasc::_FormalParameter_default_instance_.valparam_ = const_cast< ::Pasc::ValueParam*>(
      ::Pasc::ValueParam::internal_default_instance());
}
void FormalParameter::set_allocated_fhead(::Pasc::FuncHeading* fhead) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_fp();
  if (fhead) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      fhead = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, fhead, submessage_arena);
    }
    set_has_fhead();
    fp_.fhead_ = fhead;
  }
  // @@protoc_insertion_point(field_set_allocated:Pasc.FormalParameter.fHead)
}
void FormalParameter::set_allocated_phead(::Pasc::ProcHeading* phead) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_fp();
  if (phead) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      phead = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, phead, submessage_arena);
    }
    set_has_phead();
    fp_.phead_ = phead;
  }
  // @@protoc_insertion_point(field_set_allocated:Pasc.FormalParameter.pHead)
}
void FormalParameter::set_allocated_vparam(::Pasc::VariableParam* vparam) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_fp();
  if (vparam) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      vparam = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, vparam, submessage_arena);
    }
    set_has_vparam();
    fp_.vparam_ = vparam;
  }
  // @@protoc_insertion_point(field_set_allocated:Pasc.FormalParameter.vParam)
}
void FormalParameter::set_allocated_valparam(::Pasc::ValueParam* valparam) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_fp();
  if (valparam) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      valparam = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, valparam, submessage_arena);
    }
    set_has_valparam();
    fp_.valparam_ = valparam;
  }
  // @@protoc_insertion_point(field_set_allocated:Pasc.FormalParameter.valParam)
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int FormalParameter::kKindFieldNumber;
const int FormalParameter::kFHeadFieldNumber;
const int FormalParameter::kPHeadFieldNumber;
const int FormalParameter::kVParamFieldNumber;
const int FormalParameter::kValParamFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

FormalParameter::FormalParameter()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_program_2eproto::scc_info_FormalParameter.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:Pasc.FormalParameter)
}
FormalParameter::FormalParameter(const FormalParameter& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  kind_ = from.kind_;
  clear_has_fp();
  switch (from.fp_case()) {
    case kFHead: {
      mutable_fhead()->::Pasc::FuncHeading::MergeFrom(from.fhead());
      break;
    }
    case kPHead: {
      mutable_phead()->::Pasc::ProcHeading::MergeFrom(from.phead());
      break;
    }
    case kVParam: {
      mutable_vparam()->::Pasc::VariableParam::MergeFrom(from.vparam());
      break;
    }
    case kValParam: {
      mutable_valparam()->::Pasc::ValueParam::MergeFrom(from.valparam());
      break;
    }
    case FP_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:Pasc.FormalParameter)
}

void FormalParameter::SharedCtor() {
  kind_ = 0;
  clear_has_fp();
}

FormalParameter::~FormalParameter() {
  // @@protoc_insertion_point(destructor:Pasc.FormalParameter)
  SharedDtor();
}

void FormalParameter::SharedDtor() {
  if (has_fp()) {
    clear_fp();
  }
}

void FormalParameter::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* FormalParameter::descriptor() {
  ::protobuf_program_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_program_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const FormalParameter& FormalParameter::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_program_2eproto::scc_info_FormalParameter.base);
  return *internal_default_instance();
}


void FormalParameter::clear_fp() {
// @@protoc_insertion_point(one_of_clear_start:Pasc.FormalParameter)
  switch (fp_case()) {
    case kFHead: {
      delete fp_.fhead_;
      break;
    }
    case kPHead: {
      delete fp_.phead_;
      break;
    }
    case kVParam: {
      delete fp_.vparam_;
      break;
    }
    case kValParam: {
      delete fp_.valparam_;
      break;
    }
    case FP_NOT_SET: {
      break;
    }
  }
  _oneof_case_[0] = FP_NOT_SET;
}


void FormalParameter::Clear() {
// @@protoc_insertion_point(message_clear_start:Pasc.FormalParameter)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  kind_ = 0;
  clear_fp();
  _internal_metadata_.Clear();
}

bool FormalParameter::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Pasc.FormalParameter)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .Pasc.FormalParameter.FPKind kind = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_kind(static_cast< ::Pasc::FormalParameter_FPKind >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .Pasc.FuncHeading fHead = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_fhead()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .Pasc.ProcHeading pHead = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_phead()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .Pasc.VariableParam vParam = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_vparam()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .Pasc.ValueParam valParam = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_valparam()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Pasc.FormalParameter)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Pasc.FormalParameter)
  return false;
#undef DO_
}

void FormalParameter::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Pasc.FormalParameter)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .Pasc.FormalParameter.FPKind kind = 1;
  if (this->kind() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->kind(), output);
  }

  // .Pasc.FuncHeading fHead = 2;
  if (has_fhead()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_fhead(), output);
  }

  // .Pasc.ProcHeading pHead = 3;
  if (has_phead()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->_internal_phead(), output);
  }

  // .Pasc.VariableParam vParam = 4;
  if (has_vparam()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->_internal_vparam(), output);
  }

  // .Pasc.ValueParam valParam = 5;
  if (has_valparam()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, this->_internal_valparam(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:Pasc.FormalParameter)
}

::google::protobuf::uint8* FormalParameter::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:Pasc.FormalParameter)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .Pasc.FormalParameter.FPKind kind = 1;
  if (this->kind() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->kind(), target);
  }

  // .Pasc.FuncHeading fHead = 2;
  if (has_fhead()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_fhead(), deterministic, target);
  }

  // .Pasc.ProcHeading pHead = 3;
  if (has_phead()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->_internal_phead(), deterministic, target);
  }

  // .Pasc.VariableParam vParam = 4;
  if (has_vparam()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, this->_internal_vparam(), deterministic, target);
  }

  // .Pasc.ValueParam valParam = 5;
  if (has_valparam()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        5, this->_internal_valparam(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Pasc.FormalParameter)
  return target;
}

size_t FormalParameter::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Pasc.FormalParameter)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .Pasc.FormalParameter.FPKind kind = 1;
  if (this->kind() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->kind());
  }

  switch (fp_case()) {
    // .Pasc.FuncHeading fHead = 2;
    case kFHead: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *fp_.fhead_);
      break;
    }
    // .Pasc.ProcHeading pHead = 3;
    case kPHead: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *fp_.phead_);
      break;
    }
    // .Pasc.VariableParam vParam = 4;
    case kVParam: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *fp_.vparam_);
      break;
    }
    // .Pasc.ValueParam valParam = 5;
    case kValParam: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *fp_.valparam_);
      break;
    }
    case FP_NOT_SET: {
      break;
    }
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void FormalParameter::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Pasc.FormalParameter)
  GOOGLE_DCHECK_NE(&from, this);
  const FormalParameter* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const FormalParameter>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Pasc.FormalParameter)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Pasc.FormalParameter)
    MergeFrom(*source);
  }
}

void FormalParameter::MergeFrom(const FormalParameter& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Pasc.FormalParameter)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.kind() != 0) {
    set_kind(from.kind());
  }
  switch (from.fp_case()) {
    case kFHead: {
      mutable_fhead()->::Pasc::FuncHeading::MergeFrom(from.fhead());
      break;
    }
    case kPHead: {
      mutable_phead()->::Pasc::ProcHeading::MergeFrom(from.phead());
      break;
    }
    case kVParam: {
      mutable_vparam()->::Pasc::VariableParam::MergeFrom(from.vparam());
      break;
    }
    case kValParam: {
      mutable_valparam()->::Pasc::ValueParam::MergeFrom(from.valparam());
      break;
    }
    case FP_NOT_SET: {
      break;
    }
  }
}

void FormalParameter::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Pasc.FormalParameter)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void FormalParameter::CopyFrom(const FormalParameter& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Pasc.FormalParameter)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool FormalParameter::IsInitialized() const {
  return true;
}

void FormalParameter::Swap(FormalParameter* other) {
  if (other == this) return;
  InternalSwap(other);
}
void FormalParameter::InternalSwap(FormalParameter* other) {
  using std::swap;
  swap(kind_, other->kind_);
  swap(fp_, other->fp_);
  swap(_oneof_case_[0], other->_oneof_case_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata FormalParameter::GetMetadata() const {
  protobuf_program_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_program_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void VariableParam::InitAsDefaultInstance() {
  ::Pasc::_VariableParam_default_instance_._instance.get_mutable()->type_ = const_cast< ::Pasc::Type*>(
      ::Pasc::Type::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int VariableParam::kNamesFieldNumber;
const int VariableParam::kTypeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

VariableParam::VariableParam()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_program_2eproto::scc_info_VariableParam.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:Pasc.VariableParam)
}
VariableParam::VariableParam(const VariableParam& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      names_(from.names_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_type()) {
    type_ = new ::Pasc::Type(*from.type_);
  } else {
    type_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:Pasc.VariableParam)
}

void VariableParam::SharedCtor() {
  type_ = NULL;
}

VariableParam::~VariableParam() {
  // @@protoc_insertion_point(destructor:Pasc.VariableParam)
  SharedDtor();
}

void VariableParam::SharedDtor() {
  if (this != internal_default_instance()) delete type_;
}

void VariableParam::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* VariableParam::descriptor() {
  ::protobuf_program_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_program_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const VariableParam& VariableParam::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_program_2eproto::scc_info_VariableParam.base);
  return *internal_default_instance();
}


void VariableParam::Clear() {
// @@protoc_insertion_point(message_clear_start:Pasc.VariableParam)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  names_.Clear();
  if (GetArenaNoVirtual() == NULL && type_ != NULL) {
    delete type_;
  }
  type_ = NULL;
  _internal_metadata_.Clear();
}

bool VariableParam::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Pasc.VariableParam)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated string names = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_names()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->names(this->names_size() - 1).data(),
            static_cast<int>(this->names(this->names_size() - 1).length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Pasc.VariableParam.names"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .Pasc.Type type = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_type()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Pasc.VariableParam)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Pasc.VariableParam)
  return false;
#undef DO_
}

void VariableParam::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Pasc.VariableParam)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated string names = 1;
  for (int i = 0, n = this->names_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->names(i).data(), static_cast<int>(this->names(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Pasc.VariableParam.names");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      1, this->names(i), output);
  }

  // .Pasc.Type type = 2;
  if (this->has_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_type(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:Pasc.VariableParam)
}

::google::protobuf::uint8* VariableParam::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:Pasc.VariableParam)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated string names = 1;
  for (int i = 0, n = this->names_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->names(i).data(), static_cast<int>(this->names(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Pasc.VariableParam.names");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(1, this->names(i), target);
  }

  // .Pasc.Type type = 2;
  if (this->has_type()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_type(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Pasc.VariableParam)
  return target;
}

size_t VariableParam::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Pasc.VariableParam)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated string names = 1;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->names_size());
  for (int i = 0, n = this->names_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->names(i));
  }

  // .Pasc.Type type = 2;
  if (this->has_type()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *type_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void VariableParam::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Pasc.VariableParam)
  GOOGLE_DCHECK_NE(&from, this);
  const VariableParam* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const VariableParam>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Pasc.VariableParam)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Pasc.VariableParam)
    MergeFrom(*source);
  }
}

void VariableParam::MergeFrom(const VariableParam& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Pasc.VariableParam)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  names_.MergeFrom(from.names_);
  if (from.has_type()) {
    mutable_type()->::Pasc::Type::MergeFrom(from.type());
  }
}

void VariableParam::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Pasc.VariableParam)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void VariableParam::CopyFrom(const VariableParam& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Pasc.VariableParam)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool VariableParam::IsInitialized() const {
  return true;
}

void VariableParam::Swap(VariableParam* other) {
  if (other == this) return;
  InternalSwap(other);
}
void VariableParam::InternalSwap(VariableParam* other) {
  using std::swap;
  names_.InternalSwap(CastToBase(&other->names_));
  swap(type_, other->type_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata VariableParam::GetMetadata() const {
  protobuf_program_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_program_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ValueParam::InitAsDefaultInstance() {
  ::Pasc::_ValueParam_default_instance_._instance.get_mutable()->type_ = const_cast< ::Pasc::Type*>(
      ::Pasc::Type::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ValueParam::kNamesFieldNumber;
const int ValueParam::kTypeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ValueParam::ValueParam()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_program_2eproto::scc_info_ValueParam.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:Pasc.ValueParam)
}
ValueParam::ValueParam(const ValueParam& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      names_(from.names_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_type()) {
    type_ = new ::Pasc::Type(*from.type_);
  } else {
    type_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:Pasc.ValueParam)
}

void ValueParam::SharedCtor() {
  type_ = NULL;
}

ValueParam::~ValueParam() {
  // @@protoc_insertion_point(destructor:Pasc.ValueParam)
  SharedDtor();
}

void ValueParam::SharedDtor() {
  if (this != internal_default_instance()) delete type_;
}

void ValueParam::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ValueParam::descriptor() {
  ::protobuf_program_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_program_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ValueParam& ValueParam::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_program_2eproto::scc_info_ValueParam.base);
  return *internal_default_instance();
}


void ValueParam::Clear() {
// @@protoc_insertion_point(message_clear_start:Pasc.ValueParam)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  names_.Clear();
  if (GetArenaNoVirtual() == NULL && type_ != NULL) {
    delete type_;
  }
  type_ = NULL;
  _internal_metadata_.Clear();
}

bool ValueParam::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Pasc.ValueParam)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated string names = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_names()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->names(this->names_size() - 1).data(),
            static_cast<int>(this->names(this->names_size() - 1).length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Pasc.ValueParam.names"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .Pasc.Type type = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_type()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Pasc.ValueParam)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Pasc.ValueParam)
  return false;
#undef DO_
}

void ValueParam::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Pasc.ValueParam)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated string names = 1;
  for (int i = 0, n = this->names_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->names(i).data(), static_cast<int>(this->names(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Pasc.ValueParam.names");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      1, this->names(i), output);
  }

  // .Pasc.Type type = 2;
  if (this->has_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_type(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:Pasc.ValueParam)
}

::google::protobuf::uint8* ValueParam::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:Pasc.ValueParam)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated string names = 1;
  for (int i = 0, n = this->names_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->names(i).data(), static_cast<int>(this->names(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Pasc.ValueParam.names");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(1, this->names(i), target);
  }

  // .Pasc.Type type = 2;
  if (this->has_type()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_type(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Pasc.ValueParam)
  return target;
}

size_t ValueParam::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Pasc.ValueParam)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated string names = 1;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->names_size());
  for (int i = 0, n = this->names_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->names(i));
  }

  // .Pasc.Type type = 2;
  if (this->has_type()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *type_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ValueParam::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Pasc.ValueParam)
  GOOGLE_DCHECK_NE(&from, this);
  const ValueParam* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ValueParam>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Pasc.ValueParam)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Pasc.ValueParam)
    MergeFrom(*source);
  }
}

void ValueParam::MergeFrom(const ValueParam& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Pasc.ValueParam)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  names_.MergeFrom(from.names_);
  if (from.has_type()) {
    mutable_type()->::Pasc::Type::MergeFrom(from.type());
  }
}

void ValueParam::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Pasc.ValueParam)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ValueParam::CopyFrom(const ValueParam& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Pasc.ValueParam)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ValueParam::IsInitialized() const {
  return true;
}

void ValueParam::Swap(ValueParam* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ValueParam::InternalSwap(ValueParam* other) {
  using std::swap;
  names_.InternalSwap(CastToBase(&other->names_));
  swap(type_, other->type_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ValueParam::GetMetadata() const {
  protobuf_program_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_program_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void FuncHeading::InitAsDefaultInstance() {
  ::Pasc::_FuncHeading_default_instance_._instance.get_mutable()->returntype_ = const_cast< ::Pasc::Type*>(
      ::Pasc::Type::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int FuncHeading::kNameFieldNumber;
const int FuncHeading::kParamsFieldNumber;
const int FuncHeading::kReturnTypeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

FuncHeading::FuncHeading()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_program_2eproto::scc_info_FormalParameter.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:Pasc.FuncHeading)
}
FuncHeading::FuncHeading(const FuncHeading& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      params_(from.params_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.name().size() > 0) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.has_returntype()) {
    returntype_ = new ::Pasc::Type(*from.returntype_);
  } else {
    returntype_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:Pasc.FuncHeading)
}

void FuncHeading::SharedCtor() {
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  returntype_ = NULL;
}

FuncHeading::~FuncHeading() {
  // @@protoc_insertion_point(destructor:Pasc.FuncHeading)
  SharedDtor();
}

void FuncHeading::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete returntype_;
}

void FuncHeading::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* FuncHeading::descriptor() {
  ::protobuf_program_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_program_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const FuncHeading& FuncHeading::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_program_2eproto::scc_info_FormalParameter.base);
  return *internal_default_instance();
}


void FuncHeading::Clear() {
// @@protoc_insertion_point(message_clear_start:Pasc.FuncHeading)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  params_.Clear();
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && returntype_ != NULL) {
    delete returntype_;
  }
  returntype_ = NULL;
  _internal_metadata_.Clear();
}

bool FuncHeading::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Pasc.FuncHeading)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string name = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Pasc.FuncHeading.name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .Pasc.FormalParameter params = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_params()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .Pasc.Type returnType = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_returntype()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Pasc.FuncHeading)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Pasc.FuncHeading)
  return false;
#undef DO_
}

void FuncHeading::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Pasc.FuncHeading)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Pasc.FuncHeading.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  // repeated .Pasc.FormalParameter params = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->params_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2,
      this->params(static_cast<int>(i)),
      output);
  }

  // .Pasc.Type returnType = 3;
  if (this->has_returntype()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->_internal_returntype(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:Pasc.FuncHeading)
}

::google::protobuf::uint8* FuncHeading::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:Pasc.FuncHeading)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Pasc.FuncHeading.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  // repeated .Pasc.FormalParameter params = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->params_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->params(static_cast<int>(i)), deterministic, target);
  }

  // .Pasc.Type returnType = 3;
  if (this->has_returntype()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->_internal_returntype(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Pasc.FuncHeading)
  return target;
}

size_t FuncHeading::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Pasc.FuncHeading)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .Pasc.FormalParameter params = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->params_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->params(static_cast<int>(i)));
    }
  }

  // string name = 1;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  // .Pasc.Type returnType = 3;
  if (this->has_returntype()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *returntype_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void FuncHeading::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Pasc.FuncHeading)
  GOOGLE_DCHECK_NE(&from, this);
  const FuncHeading* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const FuncHeading>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Pasc.FuncHeading)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Pasc.FuncHeading)
    MergeFrom(*source);
  }
}

void FuncHeading::MergeFrom(const FuncHeading& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Pasc.FuncHeading)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  params_.MergeFrom(from.params_);
  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.has_returntype()) {
    mutable_returntype()->::Pasc::Type::MergeFrom(from.returntype());
  }
}

void FuncHeading::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Pasc.FuncHeading)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void FuncHeading::CopyFrom(const FuncHeading& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Pasc.FuncHeading)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool FuncHeading::IsInitialized() const {
  return true;
}

void FuncHeading::Swap(FuncHeading* other) {
  if (other == this) return;
  InternalSwap(other);
}
void FuncHeading::InternalSwap(FuncHeading* other) {
  using std::swap;
  CastToBase(&params_)->InternalSwap(CastToBase(&other->params_));
  name_.Swap(&other->name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(returntype_, other->returntype_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata FuncHeading::GetMetadata() const {
  protobuf_program_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_program_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ProcHeading::InitAsDefaultInstance() {
  ::Pasc::_ProcHeading_default_instance_._instance.get_mutable()->returntype_ = const_cast< ::Pasc::Type*>(
      ::Pasc::Type::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ProcHeading::kNameFieldNumber;
const int ProcHeading::kParamsFieldNumber;
const int ProcHeading::kReturnTypeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ProcHeading::ProcHeading()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_program_2eproto::scc_info_FormalParameter.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:Pasc.ProcHeading)
}
ProcHeading::ProcHeading(const ProcHeading& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      params_(from.params_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.name().size() > 0) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.has_returntype()) {
    returntype_ = new ::Pasc::Type(*from.returntype_);
  } else {
    returntype_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:Pasc.ProcHeading)
}

void ProcHeading::SharedCtor() {
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  returntype_ = NULL;
}

ProcHeading::~ProcHeading() {
  // @@protoc_insertion_point(destructor:Pasc.ProcHeading)
  SharedDtor();
}

void ProcHeading::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete returntype_;
}

void ProcHeading::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ProcHeading::descriptor() {
  ::protobuf_program_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_program_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ProcHeading& ProcHeading::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_program_2eproto::scc_info_FormalParameter.base);
  return *internal_default_instance();
}


void ProcHeading::Clear() {
// @@protoc_insertion_point(message_clear_start:Pasc.ProcHeading)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  params_.Clear();
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && returntype_ != NULL) {
    delete returntype_;
  }
  returntype_ = NULL;
  _internal_metadata_.Clear();
}

bool ProcHeading::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Pasc.ProcHeading)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string name = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Pasc.ProcHeading.name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .Pasc.FormalParameter params = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_params()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .Pasc.Type returnType = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_returntype()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Pasc.ProcHeading)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Pasc.ProcHeading)
  return false;
#undef DO_
}

void ProcHeading::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Pasc.ProcHeading)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Pasc.ProcHeading.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  // repeated .Pasc.FormalParameter params = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->params_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2,
      this->params(static_cast<int>(i)),
      output);
  }

  // .Pasc.Type returnType = 3;
  if (this->has_returntype()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->_internal_returntype(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:Pasc.ProcHeading)
}

::google::protobuf::uint8* ProcHeading::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:Pasc.ProcHeading)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Pasc.ProcHeading.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  // repeated .Pasc.FormalParameter params = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->params_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->params(static_cast<int>(i)), deterministic, target);
  }

  // .Pasc.Type returnType = 3;
  if (this->has_returntype()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->_internal_returntype(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Pasc.ProcHeading)
  return target;
}

size_t ProcHeading::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Pasc.ProcHeading)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .Pasc.FormalParameter params = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->params_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->params(static_cast<int>(i)));
    }
  }

  // string name = 1;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  // .Pasc.Type returnType = 3;
  if (this->has_returntype()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *returntype_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ProcHeading::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Pasc.ProcHeading)
  GOOGLE_DCHECK_NE(&from, this);
  const ProcHeading* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ProcHeading>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Pasc.ProcHeading)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Pasc.ProcHeading)
    MergeFrom(*source);
  }
}

void ProcHeading::MergeFrom(const ProcHeading& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Pasc.ProcHeading)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  params_.MergeFrom(from.params_);
  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.has_returntype()) {
    mutable_returntype()->::Pasc::Type::MergeFrom(from.returntype());
  }
}

void ProcHeading::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Pasc.ProcHeading)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ProcHeading::CopyFrom(const ProcHeading& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Pasc.ProcHeading)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ProcHeading::IsInitialized() const {
  return true;
}

void ProcHeading::Swap(ProcHeading* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ProcHeading::InternalSwap(ProcHeading* other) {
  using std::swap;
  CastToBase(&params_)->InternalSwap(CastToBase(&other->params_));
  name_.Swap(&other->name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(returntype_, other->returntype_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ProcHeading::GetMetadata() const {
  protobuf_program_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_program_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void FuncDeclaration::InitAsDefaultInstance() {
  ::Pasc::_FuncDeclaration_default_instance_._instance.get_mutable()->funcheading_ = const_cast< ::Pasc::FuncHeading*>(
      ::Pasc::FuncHeading::internal_default_instance());
  ::Pasc::_FuncDeclaration_default_instance_._instance.get_mutable()->blk_ = const_cast< ::Pasc::Block*>(
      ::Pasc::Block::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int FuncDeclaration::kFuncHeadingFieldNumber;
const int FuncDeclaration::kBlkFieldNumber;
const int FuncDeclaration::kDirFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

FuncDeclaration::FuncDeclaration()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_program_2eproto::scc_info_Block.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:Pasc.FuncDeclaration)
}
FuncDeclaration::FuncDeclaration(const FuncDeclaration& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  dir_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.dir().size() > 0) {
    dir_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.dir_);
  }
  if (from.has_funcheading()) {
    funcheading_ = new ::Pasc::FuncHeading(*from.funcheading_);
  } else {
    funcheading_ = NULL;
  }
  if (from.has_blk()) {
    blk_ = new ::Pasc::Block(*from.blk_);
  } else {
    blk_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:Pasc.FuncDeclaration)
}

void FuncDeclaration::SharedCtor() {
  dir_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&funcheading_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&blk_) -
      reinterpret_cast<char*>(&funcheading_)) + sizeof(blk_));
}

FuncDeclaration::~FuncDeclaration() {
  // @@protoc_insertion_point(destructor:Pasc.FuncDeclaration)
  SharedDtor();
}

void FuncDeclaration::SharedDtor() {
  dir_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete funcheading_;
  if (this != internal_default_instance()) delete blk_;
}

void FuncDeclaration::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* FuncDeclaration::descriptor() {
  ::protobuf_program_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_program_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const FuncDeclaration& FuncDeclaration::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_program_2eproto::scc_info_Block.base);
  return *internal_default_instance();
}


void FuncDeclaration::Clear() {
// @@protoc_insertion_point(message_clear_start:Pasc.FuncDeclaration)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  dir_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && funcheading_ != NULL) {
    delete funcheading_;
  }
  funcheading_ = NULL;
  if (GetArenaNoVirtual() == NULL && blk_ != NULL) {
    delete blk_;
  }
  blk_ = NULL;
  _internal_metadata_.Clear();
}

bool FuncDeclaration::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Pasc.FuncDeclaration)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .Pasc.FuncHeading funcHeading = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_funcheading()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .Pasc.Block blk = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_blk()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string dir = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_dir()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->dir().data(), static_cast<int>(this->dir().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Pasc.FuncDeclaration.dir"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Pasc.FuncDeclaration)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Pasc.FuncDeclaration)
  return false;
#undef DO_
}

void FuncDeclaration::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Pasc.FuncDeclaration)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .Pasc.FuncHeading funcHeading = 1;
  if (this->has_funcheading()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_funcheading(), output);
  }

  // .Pasc.Block blk = 2;
  if (this->has_blk()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_blk(), output);
  }

  // string dir = 3;
  if (this->dir().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->dir().data(), static_cast<int>(this->dir().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Pasc.FuncDeclaration.dir");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->dir(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:Pasc.FuncDeclaration)
}

::google::protobuf::uint8* FuncDeclaration::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:Pasc.FuncDeclaration)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .Pasc.FuncHeading funcHeading = 1;
  if (this->has_funcheading()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_funcheading(), deterministic, target);
  }

  // .Pasc.Block blk = 2;
  if (this->has_blk()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_blk(), deterministic, target);
  }

  // string dir = 3;
  if (this->dir().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->dir().data(), static_cast<int>(this->dir().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Pasc.FuncDeclaration.dir");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->dir(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Pasc.FuncDeclaration)
  return target;
}

size_t FuncDeclaration::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Pasc.FuncDeclaration)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string dir = 3;
  if (this->dir().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->dir());
  }

  // .Pasc.FuncHeading funcHeading = 1;
  if (this->has_funcheading()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *funcheading_);
  }

  // .Pasc.Block blk = 2;
  if (this->has_blk()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *blk_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void FuncDeclaration::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Pasc.FuncDeclaration)
  GOOGLE_DCHECK_NE(&from, this);
  const FuncDeclaration* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const FuncDeclaration>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Pasc.FuncDeclaration)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Pasc.FuncDeclaration)
    MergeFrom(*source);
  }
}

void FuncDeclaration::MergeFrom(const FuncDeclaration& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Pasc.FuncDeclaration)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.dir().size() > 0) {

    dir_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.dir_);
  }
  if (from.has_funcheading()) {
    mutable_funcheading()->::Pasc::FuncHeading::MergeFrom(from.funcheading());
  }
  if (from.has_blk()) {
    mutable_blk()->::Pasc::Block::MergeFrom(from.blk());
  }
}

void FuncDeclaration::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Pasc.FuncDeclaration)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void FuncDeclaration::CopyFrom(const FuncDeclaration& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Pasc.FuncDeclaration)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool FuncDeclaration::IsInitialized() const {
  return true;
}

void FuncDeclaration::Swap(FuncDeclaration* other) {
  if (other == this) return;
  InternalSwap(other);
}
void FuncDeclaration::InternalSwap(FuncDeclaration* other) {
  using std::swap;
  dir_.Swap(&other->dir_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(funcheading_, other->funcheading_);
  swap(blk_, other->blk_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata FuncDeclaration::GetMetadata() const {
  protobuf_program_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_program_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ProcDeclaration::InitAsDefaultInstance() {
  ::Pasc::_ProcDeclaration_default_instance_._instance.get_mutable()->prochead_ = const_cast< ::Pasc::ProcHeading*>(
      ::Pasc::ProcHeading::internal_default_instance());
  ::Pasc::_ProcDeclaration_default_instance_._instance.get_mutable()->blk_ = const_cast< ::Pasc::Block*>(
      ::Pasc::Block::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ProcDeclaration::kProcHeadFieldNumber;
const int ProcDeclaration::kBlkFieldNumber;
const int ProcDeclaration::kDirFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ProcDeclaration::ProcDeclaration()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_program_2eproto::scc_info_Block.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:Pasc.ProcDeclaration)
}
ProcDeclaration::ProcDeclaration(const ProcDeclaration& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  dir_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.dir().size() > 0) {
    dir_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.dir_);
  }
  if (from.has_prochead()) {
    prochead_ = new ::Pasc::ProcHeading(*from.prochead_);
  } else {
    prochead_ = NULL;
  }
  if (from.has_blk()) {
    blk_ = new ::Pasc::Block(*from.blk_);
  } else {
    blk_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:Pasc.ProcDeclaration)
}

void ProcDeclaration::SharedCtor() {
  dir_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&prochead_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&blk_) -
      reinterpret_cast<char*>(&prochead_)) + sizeof(blk_));
}

ProcDeclaration::~ProcDeclaration() {
  // @@protoc_insertion_point(destructor:Pasc.ProcDeclaration)
  SharedDtor();
}

void ProcDeclaration::SharedDtor() {
  dir_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete prochead_;
  if (this != internal_default_instance()) delete blk_;
}

void ProcDeclaration::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ProcDeclaration::descriptor() {
  ::protobuf_program_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_program_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ProcDeclaration& ProcDeclaration::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_program_2eproto::scc_info_Block.base);
  return *internal_default_instance();
}


void ProcDeclaration::Clear() {
// @@protoc_insertion_point(message_clear_start:Pasc.ProcDeclaration)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  dir_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && prochead_ != NULL) {
    delete prochead_;
  }
  prochead_ = NULL;
  if (GetArenaNoVirtual() == NULL && blk_ != NULL) {
    delete blk_;
  }
  blk_ = NULL;
  _internal_metadata_.Clear();
}

bool ProcDeclaration::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Pasc.ProcDeclaration)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .Pasc.ProcHeading procHead = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_prochead()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .Pasc.Block blk = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_blk()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string dir = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_dir()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->dir().data(), static_cast<int>(this->dir().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Pasc.ProcDeclaration.dir"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Pasc.ProcDeclaration)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Pasc.ProcDeclaration)
  return false;
#undef DO_
}

void ProcDeclaration::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Pasc.ProcDeclaration)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .Pasc.ProcHeading procHead = 1;
  if (this->has_prochead()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_prochead(), output);
  }

  // .Pasc.Block blk = 2;
  if (this->has_blk()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_blk(), output);
  }

  // string dir = 3;
  if (this->dir().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->dir().data(), static_cast<int>(this->dir().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Pasc.ProcDeclaration.dir");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->dir(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:Pasc.ProcDeclaration)
}

::google::protobuf::uint8* ProcDeclaration::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:Pasc.ProcDeclaration)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .Pasc.ProcHeading procHead = 1;
  if (this->has_prochead()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_prochead(), deterministic, target);
  }

  // .Pasc.Block blk = 2;
  if (this->has_blk()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_blk(), deterministic, target);
  }

  // string dir = 3;
  if (this->dir().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->dir().data(), static_cast<int>(this->dir().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Pasc.ProcDeclaration.dir");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->dir(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Pasc.ProcDeclaration)
  return target;
}

size_t ProcDeclaration::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Pasc.ProcDeclaration)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string dir = 3;
  if (this->dir().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->dir());
  }

  // .Pasc.ProcHeading procHead = 1;
  if (this->has_prochead()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *prochead_);
  }

  // .Pasc.Block blk = 2;
  if (this->has_blk()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *blk_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ProcDeclaration::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Pasc.ProcDeclaration)
  GOOGLE_DCHECK_NE(&from, this);
  const ProcDeclaration* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ProcDeclaration>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Pasc.ProcDeclaration)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Pasc.ProcDeclaration)
    MergeFrom(*source);
  }
}

void ProcDeclaration::MergeFrom(const ProcDeclaration& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Pasc.ProcDeclaration)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.dir().size() > 0) {

    dir_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.dir_);
  }
  if (from.has_prochead()) {
    mutable_prochead()->::Pasc::ProcHeading::MergeFrom(from.prochead());
  }
  if (from.has_blk()) {
    mutable_blk()->::Pasc::Block::MergeFrom(from.blk());
  }
}

void ProcDeclaration::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Pasc.ProcDeclaration)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ProcDeclaration::CopyFrom(const ProcDeclaration& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Pasc.ProcDeclaration)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ProcDeclaration::IsInitialized() const {
  return true;
}

void ProcDeclaration::Swap(ProcDeclaration* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ProcDeclaration::InternalSwap(ProcDeclaration* other) {
  using std::swap;
  dir_.Swap(&other->dir_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(prochead_, other->prochead_);
  swap(blk_, other->blk_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ProcDeclaration::GetMetadata() const {
  protobuf_program_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_program_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void VarDeclaration::InitAsDefaultInstance() {
  ::Pasc::_VarDeclaration_default_instance_._instance.get_mutable()->name_ = const_cast< ::Pasc::Expression*>(
      ::Pasc::Expression::internal_default_instance());
  ::Pasc::_VarDeclaration_default_instance_._instance.get_mutable()->type_ = const_cast< ::Pasc::Type*>(
      ::Pasc::Type::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int VarDeclaration::kNameFieldNumber;
const int VarDeclaration::kTypeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

VarDeclaration::VarDeclaration()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_program_2eproto::scc_info_VarDeclaration.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:Pasc.VarDeclaration)
}
VarDeclaration::VarDeclaration(const VarDeclaration& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_name()) {
    name_ = new ::Pasc::Expression(*from.name_);
  } else {
    name_ = NULL;
  }
  if (from.has_type()) {
    type_ = new ::Pasc::Type(*from.type_);
  } else {
    type_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:Pasc.VarDeclaration)
}

void VarDeclaration::SharedCtor() {
  ::memset(&name_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&type_) -
      reinterpret_cast<char*>(&name_)) + sizeof(type_));
}

VarDeclaration::~VarDeclaration() {
  // @@protoc_insertion_point(destructor:Pasc.VarDeclaration)
  SharedDtor();
}

void VarDeclaration::SharedDtor() {
  if (this != internal_default_instance()) delete name_;
  if (this != internal_default_instance()) delete type_;
}

void VarDeclaration::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* VarDeclaration::descriptor() {
  ::protobuf_program_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_program_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const VarDeclaration& VarDeclaration::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_program_2eproto::scc_info_VarDeclaration.base);
  return *internal_default_instance();
}


void VarDeclaration::Clear() {
// @@protoc_insertion_point(message_clear_start:Pasc.VarDeclaration)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && name_ != NULL) {
    delete name_;
  }
  name_ = NULL;
  if (GetArenaNoVirtual() == NULL && type_ != NULL) {
    delete type_;
  }
  type_ = NULL;
  _internal_metadata_.Clear();
}

bool VarDeclaration::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Pasc.VarDeclaration)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .Pasc.Expression name = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_name()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .Pasc.Type type = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_type()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Pasc.VarDeclaration)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Pasc.VarDeclaration)
  return false;
#undef DO_
}

void VarDeclaration::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Pasc.VarDeclaration)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .Pasc.Expression name = 1;
  if (this->has_name()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_name(), output);
  }

  // .Pasc.Type type = 2;
  if (this->has_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_type(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:Pasc.VarDeclaration)
}

::google::protobuf::uint8* VarDeclaration::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:Pasc.VarDeclaration)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .Pasc.Expression name = 1;
  if (this->has_name()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_name(), deterministic, target);
  }

  // .Pasc.Type type = 2;
  if (this->has_type()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_type(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Pasc.VarDeclaration)
  return target;
}

size_t VarDeclaration::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Pasc.VarDeclaration)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .Pasc.Expression name = 1;
  if (this->has_name()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *name_);
  }

  // .Pasc.Type type = 2;
  if (this->has_type()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *type_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void VarDeclaration::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Pasc.VarDeclaration)
  GOOGLE_DCHECK_NE(&from, this);
  const VarDeclaration* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const VarDeclaration>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Pasc.VarDeclaration)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Pasc.VarDeclaration)
    MergeFrom(*source);
  }
}

void VarDeclaration::MergeFrom(const VarDeclaration& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Pasc.VarDeclaration)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_name()) {
    mutable_name()->::Pasc::Expression::MergeFrom(from.name());
  }
  if (from.has_type()) {
    mutable_type()->::Pasc::Type::MergeFrom(from.type());
  }
}

void VarDeclaration::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Pasc.VarDeclaration)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void VarDeclaration::CopyFrom(const VarDeclaration& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Pasc.VarDeclaration)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool VarDeclaration::IsInitialized() const {
  return true;
}

void VarDeclaration::Swap(VarDeclaration* other) {
  if (other == this) return;
  InternalSwap(other);
}
void VarDeclaration::InternalSwap(VarDeclaration* other) {
  using std::swap;
  swap(name_, other->name_);
  swap(type_, other->type_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata VarDeclaration::GetMetadata() const {
  protobuf_program_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_program_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ProcedureStatement_WriteLn::InitAsDefaultInstance() {
  ::Pasc::_ProcedureStatement_WriteLn_default_instance_._instance.get_mutable()->file_ = const_cast< ::Pasc::Expression*>(
      ::Pasc::Expression::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ProcedureStatement_WriteLn::kNameFieldNumber;
const int ProcedureStatement_WriteLn::kFileFieldNumber;
const int ProcedureStatement_WriteLn::kParamsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ProcedureStatement_WriteLn::ProcedureStatement_WriteLn()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_program_2eproto::scc_info_ProcedureStatement_WriteLn.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:Pasc.ProcedureStatement.WriteLn)
}
ProcedureStatement_WriteLn::ProcedureStatement_WriteLn(const ProcedureStatement_WriteLn& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      params_(from.params_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.name().size() > 0) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.has_file()) {
    file_ = new ::Pasc::Expression(*from.file_);
  } else {
    file_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:Pasc.ProcedureStatement.WriteLn)
}

void ProcedureStatement_WriteLn::SharedCtor() {
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  file_ = NULL;
}

ProcedureStatement_WriteLn::~ProcedureStatement_WriteLn() {
  // @@protoc_insertion_point(destructor:Pasc.ProcedureStatement.WriteLn)
  SharedDtor();
}

void ProcedureStatement_WriteLn::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete file_;
}

void ProcedureStatement_WriteLn::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ProcedureStatement_WriteLn::descriptor() {
  ::protobuf_program_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_program_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ProcedureStatement_WriteLn& ProcedureStatement_WriteLn::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_program_2eproto::scc_info_ProcedureStatement_WriteLn.base);
  return *internal_default_instance();
}


void ProcedureStatement_WriteLn::Clear() {
// @@protoc_insertion_point(message_clear_start:Pasc.ProcedureStatement.WriteLn)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  params_.Clear();
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && file_ != NULL) {
    delete file_;
  }
  file_ = NULL;
  _internal_metadata_.Clear();
}

bool ProcedureStatement_WriteLn::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Pasc.ProcedureStatement.WriteLn)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string name = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Pasc.ProcedureStatement.WriteLn.name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .Pasc.Expression file = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_file()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .Pasc.Expression params = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_params()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Pasc.ProcedureStatement.WriteLn)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Pasc.ProcedureStatement.WriteLn)
  return false;
#undef DO_
}

void ProcedureStatement_WriteLn::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Pasc.ProcedureStatement.WriteLn)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Pasc.ProcedureStatement.WriteLn.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  // .Pasc.Expression file = 2;
  if (this->has_file()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_file(), output);
  }

  // repeated .Pasc.Expression params = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->params_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3,
      this->params(static_cast<int>(i)),
      output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:Pasc.ProcedureStatement.WriteLn)
}

::google::protobuf::uint8* ProcedureStatement_WriteLn::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:Pasc.ProcedureStatement.WriteLn)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Pasc.ProcedureStatement.WriteLn.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  // .Pasc.Expression file = 2;
  if (this->has_file()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_file(), deterministic, target);
  }

  // repeated .Pasc.Expression params = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->params_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->params(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Pasc.ProcedureStatement.WriteLn)
  return target;
}

size_t ProcedureStatement_WriteLn::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Pasc.ProcedureStatement.WriteLn)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .Pasc.Expression params = 3;
  {
    unsigned int count = static_cast<unsigned int>(this->params_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->params(static_cast<int>(i)));
    }
  }

  // string name = 1;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  // .Pasc.Expression file = 2;
  if (this->has_file()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *file_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ProcedureStatement_WriteLn::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Pasc.ProcedureStatement.WriteLn)
  GOOGLE_DCHECK_NE(&from, this);
  const ProcedureStatement_WriteLn* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ProcedureStatement_WriteLn>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Pasc.ProcedureStatement.WriteLn)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Pasc.ProcedureStatement.WriteLn)
    MergeFrom(*source);
  }
}

void ProcedureStatement_WriteLn::MergeFrom(const ProcedureStatement_WriteLn& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Pasc.ProcedureStatement.WriteLn)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  params_.MergeFrom(from.params_);
  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.has_file()) {
    mutable_file()->::Pasc::Expression::MergeFrom(from.file());
  }
}

void ProcedureStatement_WriteLn::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Pasc.ProcedureStatement.WriteLn)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ProcedureStatement_WriteLn::CopyFrom(const ProcedureStatement_WriteLn& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Pasc.ProcedureStatement.WriteLn)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ProcedureStatement_WriteLn::IsInitialized() const {
  return true;
}

void ProcedureStatement_WriteLn::Swap(ProcedureStatement_WriteLn* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ProcedureStatement_WriteLn::InternalSwap(ProcedureStatement_WriteLn* other) {
  using std::swap;
  CastToBase(&params_)->InternalSwap(CastToBase(&other->params_));
  name_.Swap(&other->name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(file_, other->file_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ProcedureStatement_WriteLn::GetMetadata() const {
  protobuf_program_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_program_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ProcedureStatement_Write::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ProcedureStatement_Write::ProcedureStatement_Write()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_program_2eproto::scc_info_ProcedureStatement_Write.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:Pasc.ProcedureStatement.Write)
}
ProcedureStatement_Write::ProcedureStatement_Write(const ProcedureStatement_Write& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:Pasc.ProcedureStatement.Write)
}

void ProcedureStatement_Write::SharedCtor() {
}

ProcedureStatement_Write::~ProcedureStatement_Write() {
  // @@protoc_insertion_point(destructor:Pasc.ProcedureStatement.Write)
  SharedDtor();
}

void ProcedureStatement_Write::SharedDtor() {
}

void ProcedureStatement_Write::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ProcedureStatement_Write::descriptor() {
  ::protobuf_program_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_program_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ProcedureStatement_Write& ProcedureStatement_Write::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_program_2eproto::scc_info_ProcedureStatement_Write.base);
  return *internal_default_instance();
}


void ProcedureStatement_Write::Clear() {
// @@protoc_insertion_point(message_clear_start:Pasc.ProcedureStatement.Write)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear();
}

bool ProcedureStatement_Write::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Pasc.ProcedureStatement.Write)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, _internal_metadata_.mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:Pasc.ProcedureStatement.Write)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Pasc.ProcedureStatement.Write)
  return false;
#undef DO_
}

void ProcedureStatement_Write::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Pasc.ProcedureStatement.Write)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:Pasc.ProcedureStatement.Write)
}

::google::protobuf::uint8* ProcedureStatement_Write::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:Pasc.ProcedureStatement.Write)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Pasc.ProcedureStatement.Write)
  return target;
}

size_t ProcedureStatement_Write::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Pasc.ProcedureStatement.Write)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ProcedureStatement_Write::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Pasc.ProcedureStatement.Write)
  GOOGLE_DCHECK_NE(&from, this);
  const ProcedureStatement_Write* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ProcedureStatement_Write>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Pasc.ProcedureStatement.Write)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Pasc.ProcedureStatement.Write)
    MergeFrom(*source);
  }
}

void ProcedureStatement_Write::MergeFrom(const ProcedureStatement_Write& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Pasc.ProcedureStatement.Write)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void ProcedureStatement_Write::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Pasc.ProcedureStatement.Write)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ProcedureStatement_Write::CopyFrom(const ProcedureStatement_Write& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Pasc.ProcedureStatement.Write)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ProcedureStatement_Write::IsInitialized() const {
  return true;
}

void ProcedureStatement_Write::Swap(ProcedureStatement_Write* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ProcedureStatement_Write::InternalSwap(ProcedureStatement_Write* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ProcedureStatement_Write::GetMetadata() const {
  protobuf_program_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_program_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ProcedureStatement_Read::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ProcedureStatement_Read::ProcedureStatement_Read()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_program_2eproto::scc_info_ProcedureStatement_Read.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:Pasc.ProcedureStatement.Read)
}
ProcedureStatement_Read::ProcedureStatement_Read(const ProcedureStatement_Read& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:Pasc.ProcedureStatement.Read)
}

void ProcedureStatement_Read::SharedCtor() {
}

ProcedureStatement_Read::~ProcedureStatement_Read() {
  // @@protoc_insertion_point(destructor:Pasc.ProcedureStatement.Read)
  SharedDtor();
}

void ProcedureStatement_Read::SharedDtor() {
}

void ProcedureStatement_Read::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ProcedureStatement_Read::descriptor() {
  ::protobuf_program_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_program_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ProcedureStatement_Read& ProcedureStatement_Read::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_program_2eproto::scc_info_ProcedureStatement_Read.base);
  return *internal_default_instance();
}


void ProcedureStatement_Read::Clear() {
// @@protoc_insertion_point(message_clear_start:Pasc.ProcedureStatement.Read)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear();
}

bool ProcedureStatement_Read::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Pasc.ProcedureStatement.Read)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, _internal_metadata_.mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:Pasc.ProcedureStatement.Read)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Pasc.ProcedureStatement.Read)
  return false;
#undef DO_
}

void ProcedureStatement_Read::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Pasc.ProcedureStatement.Read)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:Pasc.ProcedureStatement.Read)
}

::google::protobuf::uint8* ProcedureStatement_Read::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:Pasc.ProcedureStatement.Read)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Pasc.ProcedureStatement.Read)
  return target;
}

size_t ProcedureStatement_Read::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Pasc.ProcedureStatement.Read)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ProcedureStatement_Read::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Pasc.ProcedureStatement.Read)
  GOOGLE_DCHECK_NE(&from, this);
  const ProcedureStatement_Read* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ProcedureStatement_Read>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Pasc.ProcedureStatement.Read)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Pasc.ProcedureStatement.Read)
    MergeFrom(*source);
  }
}

void ProcedureStatement_Read::MergeFrom(const ProcedureStatement_Read& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Pasc.ProcedureStatement.Read)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void ProcedureStatement_Read::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Pasc.ProcedureStatement.Read)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ProcedureStatement_Read::CopyFrom(const ProcedureStatement_Read& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Pasc.ProcedureStatement.Read)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ProcedureStatement_Read::IsInitialized() const {
  return true;
}

void ProcedureStatement_Read::Swap(ProcedureStatement_Read* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ProcedureStatement_Read::InternalSwap(ProcedureStatement_Read* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ProcedureStatement_Read::GetMetadata() const {
  protobuf_program_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_program_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ProcedureStatement_ReadLn::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ProcedureStatement_ReadLn::ProcedureStatement_ReadLn()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_program_2eproto::scc_info_ProcedureStatement_ReadLn.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:Pasc.ProcedureStatement.ReadLn)
}
ProcedureStatement_ReadLn::ProcedureStatement_ReadLn(const ProcedureStatement_ReadLn& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:Pasc.ProcedureStatement.ReadLn)
}

void ProcedureStatement_ReadLn::SharedCtor() {
}

ProcedureStatement_ReadLn::~ProcedureStatement_ReadLn() {
  // @@protoc_insertion_point(destructor:Pasc.ProcedureStatement.ReadLn)
  SharedDtor();
}

void ProcedureStatement_ReadLn::SharedDtor() {
}

void ProcedureStatement_ReadLn::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ProcedureStatement_ReadLn::descriptor() {
  ::protobuf_program_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_program_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ProcedureStatement_ReadLn& ProcedureStatement_ReadLn::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_program_2eproto::scc_info_ProcedureStatement_ReadLn.base);
  return *internal_default_instance();
}


void ProcedureStatement_ReadLn::Clear() {
// @@protoc_insertion_point(message_clear_start:Pasc.ProcedureStatement.ReadLn)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear();
}

bool ProcedureStatement_ReadLn::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Pasc.ProcedureStatement.ReadLn)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, _internal_metadata_.mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:Pasc.ProcedureStatement.ReadLn)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Pasc.ProcedureStatement.ReadLn)
  return false;
#undef DO_
}

void ProcedureStatement_ReadLn::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Pasc.ProcedureStatement.ReadLn)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:Pasc.ProcedureStatement.ReadLn)
}

::google::protobuf::uint8* ProcedureStatement_ReadLn::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:Pasc.ProcedureStatement.ReadLn)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Pasc.ProcedureStatement.ReadLn)
  return target;
}

size_t ProcedureStatement_ReadLn::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Pasc.ProcedureStatement.ReadLn)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ProcedureStatement_ReadLn::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Pasc.ProcedureStatement.ReadLn)
  GOOGLE_DCHECK_NE(&from, this);
  const ProcedureStatement_ReadLn* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ProcedureStatement_ReadLn>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Pasc.ProcedureStatement.ReadLn)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Pasc.ProcedureStatement.ReadLn)
    MergeFrom(*source);
  }
}

void ProcedureStatement_ReadLn::MergeFrom(const ProcedureStatement_ReadLn& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Pasc.ProcedureStatement.ReadLn)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void ProcedureStatement_ReadLn::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Pasc.ProcedureStatement.ReadLn)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ProcedureStatement_ReadLn::CopyFrom(const ProcedureStatement_ReadLn& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Pasc.ProcedureStatement.ReadLn)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ProcedureStatement_ReadLn::IsInitialized() const {
  return true;
}

void ProcedureStatement_ReadLn::Swap(ProcedureStatement_ReadLn* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ProcedureStatement_ReadLn::InternalSwap(ProcedureStatement_ReadLn* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ProcedureStatement_ReadLn::GetMetadata() const {
  protobuf_program_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_program_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ProcedureStatement_ProcStmt::InitAsDefaultInstance() {
  ::Pasc::_ProcedureStatement_ProcStmt_default_instance_._instance.get_mutable()->name_ = const_cast< ::Pasc::Expression*>(
      ::Pasc::Expression::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ProcedureStatement_ProcStmt::kNameFieldNumber;
const int ProcedureStatement_ProcStmt::kParamsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ProcedureStatement_ProcStmt::ProcedureStatement_ProcStmt()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_program_2eproto::scc_info_ProcedureStatement_ProcStmt.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:Pasc.ProcedureStatement.ProcStmt)
}
ProcedureStatement_ProcStmt::ProcedureStatement_ProcStmt(const ProcedureStatement_ProcStmt& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      params_(from.params_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_name()) {
    name_ = new ::Pasc::Expression(*from.name_);
  } else {
    name_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:Pasc.ProcedureStatement.ProcStmt)
}

void ProcedureStatement_ProcStmt::SharedCtor() {
  name_ = NULL;
}

ProcedureStatement_ProcStmt::~ProcedureStatement_ProcStmt() {
  // @@protoc_insertion_point(destructor:Pasc.ProcedureStatement.ProcStmt)
  SharedDtor();
}

void ProcedureStatement_ProcStmt::SharedDtor() {
  if (this != internal_default_instance()) delete name_;
}

void ProcedureStatement_ProcStmt::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ProcedureStatement_ProcStmt::descriptor() {
  ::protobuf_program_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_program_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ProcedureStatement_ProcStmt& ProcedureStatement_ProcStmt::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_program_2eproto::scc_info_ProcedureStatement_ProcStmt.base);
  return *internal_default_instance();
}


void ProcedureStatement_ProcStmt::Clear() {
// @@protoc_insertion_point(message_clear_start:Pasc.ProcedureStatement.ProcStmt)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  params_.Clear();
  if (GetArenaNoVirtual() == NULL && name_ != NULL) {
    delete name_;
  }
  name_ = NULL;
  _internal_metadata_.Clear();
}

bool ProcedureStatement_ProcStmt::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Pasc.ProcedureStatement.ProcStmt)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .Pasc.Expression name = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_name()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .Pasc.Expression params = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_params()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Pasc.ProcedureStatement.ProcStmt)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Pasc.ProcedureStatement.ProcStmt)
  return false;
#undef DO_
}

void ProcedureStatement_ProcStmt::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Pasc.ProcedureStatement.ProcStmt)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .Pasc.Expression name = 1;
  if (this->has_name()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_name(), output);
  }

  // repeated .Pasc.Expression params = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->params_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2,
      this->params(static_cast<int>(i)),
      output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:Pasc.ProcedureStatement.ProcStmt)
}

::google::protobuf::uint8* ProcedureStatement_ProcStmt::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:Pasc.ProcedureStatement.ProcStmt)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .Pasc.Expression name = 1;
  if (this->has_name()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_name(), deterministic, target);
  }

  // repeated .Pasc.Expression params = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->params_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->params(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Pasc.ProcedureStatement.ProcStmt)
  return target;
}

size_t ProcedureStatement_ProcStmt::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Pasc.ProcedureStatement.ProcStmt)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .Pasc.Expression params = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->params_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->params(static_cast<int>(i)));
    }
  }

  // .Pasc.Expression name = 1;
  if (this->has_name()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *name_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ProcedureStatement_ProcStmt::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Pasc.ProcedureStatement.ProcStmt)
  GOOGLE_DCHECK_NE(&from, this);
  const ProcedureStatement_ProcStmt* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ProcedureStatement_ProcStmt>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Pasc.ProcedureStatement.ProcStmt)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Pasc.ProcedureStatement.ProcStmt)
    MergeFrom(*source);
  }
}

void ProcedureStatement_ProcStmt::MergeFrom(const ProcedureStatement_ProcStmt& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Pasc.ProcedureStatement.ProcStmt)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  params_.MergeFrom(from.params_);
  if (from.has_name()) {
    mutable_name()->::Pasc::Expression::MergeFrom(from.name());
  }
}

void ProcedureStatement_ProcStmt::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Pasc.ProcedureStatement.ProcStmt)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ProcedureStatement_ProcStmt::CopyFrom(const ProcedureStatement_ProcStmt& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Pasc.ProcedureStatement.ProcStmt)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ProcedureStatement_ProcStmt::IsInitialized() const {
  return true;
}

void ProcedureStatement_ProcStmt::Swap(ProcedureStatement_ProcStmt* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ProcedureStatement_ProcStmt::InternalSwap(ProcedureStatement_ProcStmt* other) {
  using std::swap;
  CastToBase(&params_)->InternalSwap(CastToBase(&other->params_));
  swap(name_, other->name_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ProcedureStatement_ProcStmt::GetMetadata() const {
  protobuf_program_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_program_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ProcedureStatement::InitAsDefaultInstance() {
  ::Pasc::_ProcedureStatement_default_instance_.wrt_ = const_cast< ::Pasc::ProcedureStatement_Write*>(
      ::Pasc::ProcedureStatement_Write::internal_default_instance());
  ::Pasc::_ProcedureStatement_default_instance_.wrtln_ = const_cast< ::Pasc::ProcedureStatement_WriteLn*>(
      ::Pasc::ProcedureStatement_WriteLn::internal_default_instance());
  ::Pasc::_ProcedureStatement_default_instance_.rd_ = const_cast< ::Pasc::ProcedureStatement_Read*>(
      ::Pasc::ProcedureStatement_Read::internal_default_instance());
  ::Pasc::_ProcedureStatement_default_instance_.rdln_ = const_cast< ::Pasc::ProcedureStatement_ReadLn*>(
      ::Pasc::ProcedureStatement_ReadLn::internal_default_instance());
  ::Pasc::_ProcedureStatement_default_instance_.ps_ = const_cast< ::Pasc::ProcedureStatement_ProcStmt*>(
      ::Pasc::ProcedureStatement_ProcStmt::internal_default_instance());
}
void ProcedureStatement::set_allocated_wrt(::Pasc::ProcedureStatement_Write* wrt) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_stmt();
  if (wrt) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      wrt = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, wrt, submessage_arena);
    }
    set_has_wrt();
    stmt_.wrt_ = wrt;
  }
  // @@protoc_insertion_point(field_set_allocated:Pasc.ProcedureStatement.wrt)
}
void ProcedureStatement::set_allocated_wrtln(::Pasc::ProcedureStatement_WriteLn* wrtln) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_stmt();
  if (wrtln) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      wrtln = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, wrtln, submessage_arena);
    }
    set_has_wrtln();
    stmt_.wrtln_ = wrtln;
  }
  // @@protoc_insertion_point(field_set_allocated:Pasc.ProcedureStatement.wrtLn)
}
void ProcedureStatement::set_allocated_rd(::Pasc::ProcedureStatement_Read* rd) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_stmt();
  if (rd) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      rd = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, rd, submessage_arena);
    }
    set_has_rd();
    stmt_.rd_ = rd;
  }
  // @@protoc_insertion_point(field_set_allocated:Pasc.ProcedureStatement.rd)
}
void ProcedureStatement::set_allocated_rdln(::Pasc::ProcedureStatement_ReadLn* rdln) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_stmt();
  if (rdln) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      rdln = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, rdln, submessage_arena);
    }
    set_has_rdln();
    stmt_.rdln_ = rdln;
  }
  // @@protoc_insertion_point(field_set_allocated:Pasc.ProcedureStatement.rdLn)
}
void ProcedureStatement::set_allocated_ps(::Pasc::ProcedureStatement_ProcStmt* ps) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_stmt();
  if (ps) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      ps = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, ps, submessage_arena);
    }
    set_has_ps();
    stmt_.ps_ = ps;
  }
  // @@protoc_insertion_point(field_set_allocated:Pasc.ProcedureStatement.ps)
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ProcedureStatement::kKindFieldNumber;
const int ProcedureStatement::kWrtFieldNumber;
const int ProcedureStatement::kWrtLnFieldNumber;
const int ProcedureStatement::kRdFieldNumber;
const int ProcedureStatement::kRdLnFieldNumber;
const int ProcedureStatement::kPsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ProcedureStatement::ProcedureStatement()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_program_2eproto::scc_info_ProcedureStatement.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:Pasc.ProcedureStatement)
}
ProcedureStatement::ProcedureStatement(const ProcedureStatement& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  kind_ = from.kind_;
  clear_has_stmt();
  switch (from.stmt_case()) {
    case kWrt: {
      mutable_wrt()->::Pasc::ProcedureStatement_Write::MergeFrom(from.wrt());
      break;
    }
    case kWrtLn: {
      mutable_wrtln()->::Pasc::ProcedureStatement_WriteLn::MergeFrom(from.wrtln());
      break;
    }
    case kRd: {
      mutable_rd()->::Pasc::ProcedureStatement_Read::MergeFrom(from.rd());
      break;
    }
    case kRdLn: {
      mutable_rdln()->::Pasc::ProcedureStatement_ReadLn::MergeFrom(from.rdln());
      break;
    }
    case kPs: {
      mutable_ps()->::Pasc::ProcedureStatement_ProcStmt::MergeFrom(from.ps());
      break;
    }
    case STMT_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:Pasc.ProcedureStatement)
}

void ProcedureStatement::SharedCtor() {
  kind_ = 0;
  clear_has_stmt();
}

ProcedureStatement::~ProcedureStatement() {
  // @@protoc_insertion_point(destructor:Pasc.ProcedureStatement)
  SharedDtor();
}

void ProcedureStatement::SharedDtor() {
  if (has_stmt()) {
    clear_stmt();
  }
}

void ProcedureStatement::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ProcedureStatement::descriptor() {
  ::protobuf_program_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_program_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ProcedureStatement& ProcedureStatement::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_program_2eproto::scc_info_ProcedureStatement.base);
  return *internal_default_instance();
}


void ProcedureStatement::clear_stmt() {
// @@protoc_insertion_point(one_of_clear_start:Pasc.ProcedureStatement)
  switch (stmt_case()) {
    case kWrt: {
      delete stmt_.wrt_;
      break;
    }
    case kWrtLn: {
      delete stmt_.wrtln_;
      break;
    }
    case kRd: {
      delete stmt_.rd_;
      break;
    }
    case kRdLn: {
      delete stmt_.rdln_;
      break;
    }
    case kPs: {
      delete stmt_.ps_;
      break;
    }
    case STMT_NOT_SET: {
      break;
    }
  }
  _oneof_case_[0] = STMT_NOT_SET;
}


void ProcedureStatement::Clear() {
// @@protoc_insertion_point(message_clear_start:Pasc.ProcedureStatement)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  kind_ = 0;
  clear_stmt();
  _internal_metadata_.Clear();
}

bool ProcedureStatement::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Pasc.ProcedureStatement)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .Pasc.ProcedureStatement.PSKind kind = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_kind(static_cast< ::Pasc::ProcedureStatement_PSKind >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .Pasc.ProcedureStatement.Write wrt = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_wrt()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .Pasc.ProcedureStatement.WriteLn wrtLn = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_wrtln()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .Pasc.ProcedureStatement.Read rd = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_rd()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .Pasc.ProcedureStatement.ReadLn rdLn = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_rdln()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .Pasc.ProcedureStatement.ProcStmt ps = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_ps()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Pasc.ProcedureStatement)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Pasc.ProcedureStatement)
  return false;
#undef DO_
}

void ProcedureStatement::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Pasc.ProcedureStatement)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .Pasc.ProcedureStatement.PSKind kind = 1;
  if (this->kind() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->kind(), output);
  }

  // .Pasc.ProcedureStatement.Write wrt = 2;
  if (has_wrt()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_wrt(), output);
  }

  // .Pasc.ProcedureStatement.WriteLn wrtLn = 3;
  if (has_wrtln()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->_internal_wrtln(), output);
  }

  // .Pasc.ProcedureStatement.Read rd = 4;
  if (has_rd()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->_internal_rd(), output);
  }

  // .Pasc.ProcedureStatement.ReadLn rdLn = 5;
  if (has_rdln()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, this->_internal_rdln(), output);
  }

  // .Pasc.ProcedureStatement.ProcStmt ps = 6;
  if (has_ps()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6, this->_internal_ps(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:Pasc.ProcedureStatement)
}

::google::protobuf::uint8* ProcedureStatement::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:Pasc.ProcedureStatement)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .Pasc.ProcedureStatement.PSKind kind = 1;
  if (this->kind() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->kind(), target);
  }

  // .Pasc.ProcedureStatement.Write wrt = 2;
  if (has_wrt()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_wrt(), deterministic, target);
  }

  // .Pasc.ProcedureStatement.WriteLn wrtLn = 3;
  if (has_wrtln()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->_internal_wrtln(), deterministic, target);
  }

  // .Pasc.ProcedureStatement.Read rd = 4;
  if (has_rd()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, this->_internal_rd(), deterministic, target);
  }

  // .Pasc.ProcedureStatement.ReadLn rdLn = 5;
  if (has_rdln()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        5, this->_internal_rdln(), deterministic, target);
  }

  // .Pasc.ProcedureStatement.ProcStmt ps = 6;
  if (has_ps()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        6, this->_internal_ps(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Pasc.ProcedureStatement)
  return target;
}

size_t ProcedureStatement::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Pasc.ProcedureStatement)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .Pasc.ProcedureStatement.PSKind kind = 1;
  if (this->kind() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->kind());
  }

  switch (stmt_case()) {
    // .Pasc.ProcedureStatement.Write wrt = 2;
    case kWrt: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *stmt_.wrt_);
      break;
    }
    // .Pasc.ProcedureStatement.WriteLn wrtLn = 3;
    case kWrtLn: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *stmt_.wrtln_);
      break;
    }
    // .Pasc.ProcedureStatement.Read rd = 4;
    case kRd: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *stmt_.rd_);
      break;
    }
    // .Pasc.ProcedureStatement.ReadLn rdLn = 5;
    case kRdLn: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *stmt_.rdln_);
      break;
    }
    // .Pasc.ProcedureStatement.ProcStmt ps = 6;
    case kPs: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *stmt_.ps_);
      break;
    }
    case STMT_NOT_SET: {
      break;
    }
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ProcedureStatement::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Pasc.ProcedureStatement)
  GOOGLE_DCHECK_NE(&from, this);
  const ProcedureStatement* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ProcedureStatement>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Pasc.ProcedureStatement)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Pasc.ProcedureStatement)
    MergeFrom(*source);
  }
}

void ProcedureStatement::MergeFrom(const ProcedureStatement& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Pasc.ProcedureStatement)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.kind() != 0) {
    set_kind(from.kind());
  }
  switch (from.stmt_case()) {
    case kWrt: {
      mutable_wrt()->::Pasc::ProcedureStatement_Write::MergeFrom(from.wrt());
      break;
    }
    case kWrtLn: {
      mutable_wrtln()->::Pasc::ProcedureStatement_WriteLn::MergeFrom(from.wrtln());
      break;
    }
    case kRd: {
      mutable_rd()->::Pasc::ProcedureStatement_Read::MergeFrom(from.rd());
      break;
    }
    case kRdLn: {
      mutable_rdln()->::Pasc::ProcedureStatement_ReadLn::MergeFrom(from.rdln());
      break;
    }
    case kPs: {
      mutable_ps()->::Pasc::ProcedureStatement_ProcStmt::MergeFrom(from.ps());
      break;
    }
    case STMT_NOT_SET: {
      break;
    }
  }
}

void ProcedureStatement::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Pasc.ProcedureStatement)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ProcedureStatement::CopyFrom(const ProcedureStatement& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Pasc.ProcedureStatement)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ProcedureStatement::IsInitialized() const {
  return true;
}

void ProcedureStatement::Swap(ProcedureStatement* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ProcedureStatement::InternalSwap(ProcedureStatement* other) {
  using std::swap;
  swap(kind_, other->kind_);
  swap(stmt_, other->stmt_);
  swap(_oneof_case_[0], other->_oneof_case_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ProcedureStatement::GetMetadata() const {
  protobuf_program_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_program_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void AssignStatement::InitAsDefaultInstance() {
  ::Pasc::_AssignStatement_default_instance_._instance.get_mutable()->variable_ = const_cast< ::Pasc::Expression*>(
      ::Pasc::Expression::internal_default_instance());
  ::Pasc::_AssignStatement_default_instance_._instance.get_mutable()->value_ = const_cast< ::Pasc::Expression*>(
      ::Pasc::Expression::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int AssignStatement::kVariableFieldNumber;
const int AssignStatement::kValueFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

AssignStatement::AssignStatement()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_program_2eproto::scc_info_AssignStatement.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:Pasc.AssignStatement)
}
AssignStatement::AssignStatement(const AssignStatement& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_variable()) {
    variable_ = new ::Pasc::Expression(*from.variable_);
  } else {
    variable_ = NULL;
  }
  if (from.has_value()) {
    value_ = new ::Pasc::Expression(*from.value_);
  } else {
    value_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:Pasc.AssignStatement)
}

void AssignStatement::SharedCtor() {
  ::memset(&variable_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&value_) -
      reinterpret_cast<char*>(&variable_)) + sizeof(value_));
}

AssignStatement::~AssignStatement() {
  // @@protoc_insertion_point(destructor:Pasc.AssignStatement)
  SharedDtor();
}

void AssignStatement::SharedDtor() {
  if (this != internal_default_instance()) delete variable_;
  if (this != internal_default_instance()) delete value_;
}

void AssignStatement::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* AssignStatement::descriptor() {
  ::protobuf_program_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_program_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const AssignStatement& AssignStatement::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_program_2eproto::scc_info_AssignStatement.base);
  return *internal_default_instance();
}


void AssignStatement::Clear() {
// @@protoc_insertion_point(message_clear_start:Pasc.AssignStatement)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && variable_ != NULL) {
    delete variable_;
  }
  variable_ = NULL;
  if (GetArenaNoVirtual() == NULL && value_ != NULL) {
    delete value_;
  }
  value_ = NULL;
  _internal_metadata_.Clear();
}

bool AssignStatement::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Pasc.AssignStatement)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .Pasc.Expression variable = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_variable()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .Pasc.Expression value = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_value()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Pasc.AssignStatement)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Pasc.AssignStatement)
  return false;
#undef DO_
}

void AssignStatement::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Pasc.AssignStatement)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .Pasc.Expression variable = 1;
  if (this->has_variable()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_variable(), output);
  }

  // .Pasc.Expression value = 2;
  if (this->has_value()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_value(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:Pasc.AssignStatement)
}

::google::protobuf::uint8* AssignStatement::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:Pasc.AssignStatement)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .Pasc.Expression variable = 1;
  if (this->has_variable()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_variable(), deterministic, target);
  }

  // .Pasc.Expression value = 2;
  if (this->has_value()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_value(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Pasc.AssignStatement)
  return target;
}

size_t AssignStatement::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Pasc.AssignStatement)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .Pasc.Expression variable = 1;
  if (this->has_variable()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *variable_);
  }

  // .Pasc.Expression value = 2;
  if (this->has_value()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *value_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void AssignStatement::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Pasc.AssignStatement)
  GOOGLE_DCHECK_NE(&from, this);
  const AssignStatement* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const AssignStatement>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Pasc.AssignStatement)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Pasc.AssignStatement)
    MergeFrom(*source);
  }
}

void AssignStatement::MergeFrom(const AssignStatement& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Pasc.AssignStatement)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_variable()) {
    mutable_variable()->::Pasc::Expression::MergeFrom(from.variable());
  }
  if (from.has_value()) {
    mutable_value()->::Pasc::Expression::MergeFrom(from.value());
  }
}

void AssignStatement::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Pasc.AssignStatement)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AssignStatement::CopyFrom(const AssignStatement& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Pasc.AssignStatement)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AssignStatement::IsInitialized() const {
  return true;
}

void AssignStatement::Swap(AssignStatement* other) {
  if (other == this) return;
  InternalSwap(other);
}
void AssignStatement::InternalSwap(AssignStatement* other) {
  using std::swap;
  swap(variable_, other->variable_);
  swap(value_, other->value_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata AssignStatement::GetMetadata() const {
  protobuf_program_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_program_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void IfStatement::InitAsDefaultInstance() {
  ::Pasc::_IfStatement_default_instance_._instance.get_mutable()->cond_ = const_cast< ::Pasc::Expression*>(
      ::Pasc::Expression::internal_default_instance());
  ::Pasc::_IfStatement_default_instance_._instance.get_mutable()->truepath_ = const_cast< ::Pasc::Statement*>(
      ::Pasc::Statement::internal_default_instance());
  ::Pasc::_IfStatement_default_instance_._instance.get_mutable()->elsepath_ = const_cast< ::Pasc::Statement*>(
      ::Pasc::Statement::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int IfStatement::kCondFieldNumber;
const int IfStatement::kTruePathFieldNumber;
const int IfStatement::kElsePathFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

IfStatement::IfStatement()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_program_2eproto::scc_info_IfStatement.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:Pasc.IfStatement)
}
IfStatement::IfStatement(const IfStatement& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_cond()) {
    cond_ = new ::Pasc::Expression(*from.cond_);
  } else {
    cond_ = NULL;
  }
  if (from.has_truepath()) {
    truepath_ = new ::Pasc::Statement(*from.truepath_);
  } else {
    truepath_ = NULL;
  }
  if (from.has_elsepath()) {
    elsepath_ = new ::Pasc::Statement(*from.elsepath_);
  } else {
    elsepath_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:Pasc.IfStatement)
}

void IfStatement::SharedCtor() {
  ::memset(&cond_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&elsepath_) -
      reinterpret_cast<char*>(&cond_)) + sizeof(elsepath_));
}

IfStatement::~IfStatement() {
  // @@protoc_insertion_point(destructor:Pasc.IfStatement)
  SharedDtor();
}

void IfStatement::SharedDtor() {
  if (this != internal_default_instance()) delete cond_;
  if (this != internal_default_instance()) delete truepath_;
  if (this != internal_default_instance()) delete elsepath_;
}

void IfStatement::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* IfStatement::descriptor() {
  ::protobuf_program_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_program_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const IfStatement& IfStatement::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_program_2eproto::scc_info_IfStatement.base);
  return *internal_default_instance();
}


void IfStatement::Clear() {
// @@protoc_insertion_point(message_clear_start:Pasc.IfStatement)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && cond_ != NULL) {
    delete cond_;
  }
  cond_ = NULL;
  if (GetArenaNoVirtual() == NULL && truepath_ != NULL) {
    delete truepath_;
  }
  truepath_ = NULL;
  if (GetArenaNoVirtual() == NULL && elsepath_ != NULL) {
    delete elsepath_;
  }
  elsepath_ = NULL;
  _internal_metadata_.Clear();
}

bool IfStatement::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Pasc.IfStatement)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .Pasc.Expression cond = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_cond()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .Pasc.Statement truePath = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_truepath()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .Pasc.Statement elsePath = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_elsepath()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Pasc.IfStatement)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Pasc.IfStatement)
  return false;
#undef DO_
}

void IfStatement::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Pasc.IfStatement)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .Pasc.Expression cond = 1;
  if (this->has_cond()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_cond(), output);
  }

  // .Pasc.Statement truePath = 2;
  if (this->has_truepath()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_truepath(), output);
  }

  // .Pasc.Statement elsePath = 3;
  if (this->has_elsepath()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->_internal_elsepath(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:Pasc.IfStatement)
}

::google::protobuf::uint8* IfStatement::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:Pasc.IfStatement)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .Pasc.Expression cond = 1;
  if (this->has_cond()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_cond(), deterministic, target);
  }

  // .Pasc.Statement truePath = 2;
  if (this->has_truepath()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_truepath(), deterministic, target);
  }

  // .Pasc.Statement elsePath = 3;
  if (this->has_elsepath()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->_internal_elsepath(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Pasc.IfStatement)
  return target;
}

size_t IfStatement::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Pasc.IfStatement)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .Pasc.Expression cond = 1;
  if (this->has_cond()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *cond_);
  }

  // .Pasc.Statement truePath = 2;
  if (this->has_truepath()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *truepath_);
  }

  // .Pasc.Statement elsePath = 3;
  if (this->has_elsepath()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *elsepath_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void IfStatement::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Pasc.IfStatement)
  GOOGLE_DCHECK_NE(&from, this);
  const IfStatement* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const IfStatement>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Pasc.IfStatement)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Pasc.IfStatement)
    MergeFrom(*source);
  }
}

void IfStatement::MergeFrom(const IfStatement& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Pasc.IfStatement)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_cond()) {
    mutable_cond()->::Pasc::Expression::MergeFrom(from.cond());
  }
  if (from.has_truepath()) {
    mutable_truepath()->::Pasc::Statement::MergeFrom(from.truepath());
  }
  if (from.has_elsepath()) {
    mutable_elsepath()->::Pasc::Statement::MergeFrom(from.elsepath());
  }
}

void IfStatement::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Pasc.IfStatement)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void IfStatement::CopyFrom(const IfStatement& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Pasc.IfStatement)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool IfStatement::IsInitialized() const {
  return true;
}

void IfStatement::Swap(IfStatement* other) {
  if (other == this) return;
  InternalSwap(other);
}
void IfStatement::InternalSwap(IfStatement* other) {
  using std::swap;
  swap(cond_, other->cond_);
  swap(truepath_, other->truepath_);
  swap(elsepath_, other->elsepath_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata IfStatement::GetMetadata() const {
  protobuf_program_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_program_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ReturnStatement::InitAsDefaultInstance() {
  ::Pasc::_ReturnStatement_default_instance_._instance.get_mutable()->value_ = const_cast< ::Pasc::Expression*>(
      ::Pasc::Expression::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ReturnStatement::kValueFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ReturnStatement::ReturnStatement()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_program_2eproto::scc_info_ReturnStatement.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:Pasc.ReturnStatement)
}
ReturnStatement::ReturnStatement(const ReturnStatement& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_value()) {
    value_ = new ::Pasc::Expression(*from.value_);
  } else {
    value_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:Pasc.ReturnStatement)
}

void ReturnStatement::SharedCtor() {
  value_ = NULL;
}

ReturnStatement::~ReturnStatement() {
  // @@protoc_insertion_point(destructor:Pasc.ReturnStatement)
  SharedDtor();
}

void ReturnStatement::SharedDtor() {
  if (this != internal_default_instance()) delete value_;
}

void ReturnStatement::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ReturnStatement::descriptor() {
  ::protobuf_program_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_program_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ReturnStatement& ReturnStatement::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_program_2eproto::scc_info_ReturnStatement.base);
  return *internal_default_instance();
}


void ReturnStatement::Clear() {
// @@protoc_insertion_point(message_clear_start:Pasc.ReturnStatement)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && value_ != NULL) {
    delete value_;
  }
  value_ = NULL;
  _internal_metadata_.Clear();
}

bool ReturnStatement::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Pasc.ReturnStatement)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .Pasc.Expression value = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_value()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Pasc.ReturnStatement)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Pasc.ReturnStatement)
  return false;
#undef DO_
}

void ReturnStatement::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Pasc.ReturnStatement)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .Pasc.Expression value = 1;
  if (this->has_value()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_value(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:Pasc.ReturnStatement)
}

::google::protobuf::uint8* ReturnStatement::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:Pasc.ReturnStatement)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .Pasc.Expression value = 1;
  if (this->has_value()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_value(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Pasc.ReturnStatement)
  return target;
}

size_t ReturnStatement::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Pasc.ReturnStatement)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .Pasc.Expression value = 1;
  if (this->has_value()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *value_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ReturnStatement::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Pasc.ReturnStatement)
  GOOGLE_DCHECK_NE(&from, this);
  const ReturnStatement* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ReturnStatement>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Pasc.ReturnStatement)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Pasc.ReturnStatement)
    MergeFrom(*source);
  }
}

void ReturnStatement::MergeFrom(const ReturnStatement& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Pasc.ReturnStatement)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_value()) {
    mutable_value()->::Pasc::Expression::MergeFrom(from.value());
  }
}

void ReturnStatement::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Pasc.ReturnStatement)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ReturnStatement::CopyFrom(const ReturnStatement& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Pasc.ReturnStatement)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ReturnStatement::IsInitialized() const {
  return true;
}

void ReturnStatement::Swap(ReturnStatement* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ReturnStatement::InternalSwap(ReturnStatement* other) {
  using std::swap;
  swap(value_, other->value_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ReturnStatement::GetMetadata() const {
  protobuf_program_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_program_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Statement::InitAsDefaultInstance() {
  ::Pasc::_Statement_default_instance_.assignstmt_ = const_cast< ::Pasc::AssignStatement*>(
      ::Pasc::AssignStatement::internal_default_instance());
  ::Pasc::_Statement_default_instance_.procstmt_ = const_cast< ::Pasc::ProcedureStatement*>(
      ::Pasc::ProcedureStatement::internal_default_instance());
  ::Pasc::_Statement_default_instance_.ifstmt_ = const_cast< ::Pasc::IfStatement*>(
      ::Pasc::IfStatement::internal_default_instance());
  ::Pasc::_Statement_default_instance_.retstmt_ = const_cast< ::Pasc::ReturnStatement*>(
      ::Pasc::ReturnStatement::internal_default_instance());
}
void Statement::set_allocated_assignstmt(::Pasc::AssignStatement* assignstmt) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_stmt();
  if (assignstmt) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      assignstmt = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, assignstmt, submessage_arena);
    }
    set_has_assignstmt();
    stmt_.assignstmt_ = assignstmt;
  }
  // @@protoc_insertion_point(field_set_allocated:Pasc.Statement.assignStmt)
}
void Statement::set_allocated_procstmt(::Pasc::ProcedureStatement* procstmt) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_stmt();
  if (procstmt) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      procstmt = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, procstmt, submessage_arena);
    }
    set_has_procstmt();
    stmt_.procstmt_ = procstmt;
  }
  // @@protoc_insertion_point(field_set_allocated:Pasc.Statement.procStmt)
}
void Statement::set_allocated_ifstmt(::Pasc::IfStatement* ifstmt) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_stmt();
  if (ifstmt) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      ifstmt = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, ifstmt, submessage_arena);
    }
    set_has_ifstmt();
    stmt_.ifstmt_ = ifstmt;
  }
  // @@protoc_insertion_point(field_set_allocated:Pasc.Statement.ifStmt)
}
void Statement::set_allocated_retstmt(::Pasc::ReturnStatement* retstmt) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_stmt();
  if (retstmt) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      retstmt = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, retstmt, submessage_arena);
    }
    set_has_retstmt();
    stmt_.retstmt_ = retstmt;
  }
  // @@protoc_insertion_point(field_set_allocated:Pasc.Statement.retStmt)
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Statement::kKindFieldNumber;
const int Statement::kAssignStmtFieldNumber;
const int Statement::kProcStmtFieldNumber;
const int Statement::kIfStmtFieldNumber;
const int Statement::kRetStmtFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Statement::Statement()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_program_2eproto::scc_info_IfStatement.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:Pasc.Statement)
}
Statement::Statement(const Statement& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  kind_ = from.kind_;
  clear_has_stmt();
  switch (from.stmt_case()) {
    case kAssignStmt: {
      mutable_assignstmt()->::Pasc::AssignStatement::MergeFrom(from.assignstmt());
      break;
    }
    case kProcStmt: {
      mutable_procstmt()->::Pasc::ProcedureStatement::MergeFrom(from.procstmt());
      break;
    }
    case kIfStmt: {
      mutable_ifstmt()->::Pasc::IfStatement::MergeFrom(from.ifstmt());
      break;
    }
    case kRetStmt: {
      mutable_retstmt()->::Pasc::ReturnStatement::MergeFrom(from.retstmt());
      break;
    }
    case STMT_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:Pasc.Statement)
}

void Statement::SharedCtor() {
  kind_ = 0;
  clear_has_stmt();
}

Statement::~Statement() {
  // @@protoc_insertion_point(destructor:Pasc.Statement)
  SharedDtor();
}

void Statement::SharedDtor() {
  if (has_stmt()) {
    clear_stmt();
  }
}

void Statement::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Statement::descriptor() {
  ::protobuf_program_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_program_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Statement& Statement::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_program_2eproto::scc_info_IfStatement.base);
  return *internal_default_instance();
}


void Statement::clear_stmt() {
// @@protoc_insertion_point(one_of_clear_start:Pasc.Statement)
  switch (stmt_case()) {
    case kAssignStmt: {
      delete stmt_.assignstmt_;
      break;
    }
    case kProcStmt: {
      delete stmt_.procstmt_;
      break;
    }
    case kIfStmt: {
      delete stmt_.ifstmt_;
      break;
    }
    case kRetStmt: {
      delete stmt_.retstmt_;
      break;
    }
    case STMT_NOT_SET: {
      break;
    }
  }
  _oneof_case_[0] = STMT_NOT_SET;
}


void Statement::Clear() {
// @@protoc_insertion_point(message_clear_start:Pasc.Statement)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  kind_ = 0;
  clear_stmt();
  _internal_metadata_.Clear();
}

bool Statement::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Pasc.Statement)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .Pasc.Statement.StmtKind kind = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_kind(static_cast< ::Pasc::Statement_StmtKind >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .Pasc.AssignStatement assignStmt = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_assignstmt()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .Pasc.ProcedureStatement procStmt = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_procstmt()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .Pasc.IfStatement ifStmt = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_ifstmt()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .Pasc.ReturnStatement retStmt = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_retstmt()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Pasc.Statement)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Pasc.Statement)
  return false;
#undef DO_
}

void Statement::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Pasc.Statement)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .Pasc.Statement.StmtKind kind = 1;
  if (this->kind() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->kind(), output);
  }

  // .Pasc.AssignStatement assignStmt = 2;
  if (has_assignstmt()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_assignstmt(), output);
  }

  // .Pasc.ProcedureStatement procStmt = 3;
  if (has_procstmt()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->_internal_procstmt(), output);
  }

  // .Pasc.IfStatement ifStmt = 4;
  if (has_ifstmt()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->_internal_ifstmt(), output);
  }

  // .Pasc.ReturnStatement retStmt = 5;
  if (has_retstmt()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, this->_internal_retstmt(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:Pasc.Statement)
}

::google::protobuf::uint8* Statement::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:Pasc.Statement)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .Pasc.Statement.StmtKind kind = 1;
  if (this->kind() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->kind(), target);
  }

  // .Pasc.AssignStatement assignStmt = 2;
  if (has_assignstmt()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_assignstmt(), deterministic, target);
  }

  // .Pasc.ProcedureStatement procStmt = 3;
  if (has_procstmt()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->_internal_procstmt(), deterministic, target);
  }

  // .Pasc.IfStatement ifStmt = 4;
  if (has_ifstmt()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, this->_internal_ifstmt(), deterministic, target);
  }

  // .Pasc.ReturnStatement retStmt = 5;
  if (has_retstmt()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        5, this->_internal_retstmt(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Pasc.Statement)
  return target;
}

size_t Statement::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Pasc.Statement)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .Pasc.Statement.StmtKind kind = 1;
  if (this->kind() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->kind());
  }

  switch (stmt_case()) {
    // .Pasc.AssignStatement assignStmt = 2;
    case kAssignStmt: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *stmt_.assignstmt_);
      break;
    }
    // .Pasc.ProcedureStatement procStmt = 3;
    case kProcStmt: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *stmt_.procstmt_);
      break;
    }
    // .Pasc.IfStatement ifStmt = 4;
    case kIfStmt: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *stmt_.ifstmt_);
      break;
    }
    // .Pasc.ReturnStatement retStmt = 5;
    case kRetStmt: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *stmt_.retstmt_);
      break;
    }
    case STMT_NOT_SET: {
      break;
    }
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Statement::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Pasc.Statement)
  GOOGLE_DCHECK_NE(&from, this);
  const Statement* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Statement>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Pasc.Statement)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Pasc.Statement)
    MergeFrom(*source);
  }
}

void Statement::MergeFrom(const Statement& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Pasc.Statement)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.kind() != 0) {
    set_kind(from.kind());
  }
  switch (from.stmt_case()) {
    case kAssignStmt: {
      mutable_assignstmt()->::Pasc::AssignStatement::MergeFrom(from.assignstmt());
      break;
    }
    case kProcStmt: {
      mutable_procstmt()->::Pasc::ProcedureStatement::MergeFrom(from.procstmt());
      break;
    }
    case kIfStmt: {
      mutable_ifstmt()->::Pasc::IfStatement::MergeFrom(from.ifstmt());
      break;
    }
    case kRetStmt: {
      mutable_retstmt()->::Pasc::ReturnStatement::MergeFrom(from.retstmt());
      break;
    }
    case STMT_NOT_SET: {
      break;
    }
  }
}

void Statement::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Pasc.Statement)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Statement::CopyFrom(const Statement& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Pasc.Statement)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Statement::IsInitialized() const {
  return true;
}

void Statement::Swap(Statement* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Statement::InternalSwap(Statement* other) {
  using std::swap;
  swap(kind_, other->kind_);
  swap(stmt_, other->stmt_);
  swap(_oneof_case_[0], other->_oneof_case_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Statement::GetMetadata() const {
  protobuf_program_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_program_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Identifier_Variable::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Identifier_Variable::kNameFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Identifier_Variable::Identifier_Variable()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_program_2eproto::scc_info_Identifier_Variable.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:Pasc.Identifier.Variable)
}
Identifier_Variable::Identifier_Variable(const Identifier_Variable& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.name().size() > 0) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  // @@protoc_insertion_point(copy_constructor:Pasc.Identifier.Variable)
}

void Identifier_Variable::SharedCtor() {
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

Identifier_Variable::~Identifier_Variable() {
  // @@protoc_insertion_point(destructor:Pasc.Identifier.Variable)
  SharedDtor();
}

void Identifier_Variable::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void Identifier_Variable::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Identifier_Variable::descriptor() {
  ::protobuf_program_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_program_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Identifier_Variable& Identifier_Variable::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_program_2eproto::scc_info_Identifier_Variable.base);
  return *internal_default_instance();
}


void Identifier_Variable::Clear() {
// @@protoc_insertion_point(message_clear_start:Pasc.Identifier.Variable)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool Identifier_Variable::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Pasc.Identifier.Variable)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string name = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Pasc.Identifier.Variable.name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Pasc.Identifier.Variable)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Pasc.Identifier.Variable)
  return false;
#undef DO_
}

void Identifier_Variable::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Pasc.Identifier.Variable)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Pasc.Identifier.Variable.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:Pasc.Identifier.Variable)
}

::google::protobuf::uint8* Identifier_Variable::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:Pasc.Identifier.Variable)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Pasc.Identifier.Variable.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Pasc.Identifier.Variable)
  return target;
}

size_t Identifier_Variable::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Pasc.Identifier.Variable)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string name = 1;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Identifier_Variable::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Pasc.Identifier.Variable)
  GOOGLE_DCHECK_NE(&from, this);
  const Identifier_Variable* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Identifier_Variable>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Pasc.Identifier.Variable)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Pasc.Identifier.Variable)
    MergeFrom(*source);
  }
}

void Identifier_Variable::MergeFrom(const Identifier_Variable& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Pasc.Identifier.Variable)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
}

void Identifier_Variable::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Pasc.Identifier.Variable)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Identifier_Variable::CopyFrom(const Identifier_Variable& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Pasc.Identifier.Variable)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Identifier_Variable::IsInitialized() const {
  return true;
}

void Identifier_Variable::Swap(Identifier_Variable* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Identifier_Variable::InternalSwap(Identifier_Variable* other) {
  using std::swap;
  name_.Swap(&other->name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Identifier_Variable::GetMetadata() const {
  protobuf_program_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_program_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Identifier_IndexedVariable::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Identifier_IndexedVariable::Identifier_IndexedVariable()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_program_2eproto::scc_info_Identifier_IndexedVariable.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:Pasc.Identifier.IndexedVariable)
}
Identifier_IndexedVariable::Identifier_IndexedVariable(const Identifier_IndexedVariable& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:Pasc.Identifier.IndexedVariable)
}

void Identifier_IndexedVariable::SharedCtor() {
}

Identifier_IndexedVariable::~Identifier_IndexedVariable() {
  // @@protoc_insertion_point(destructor:Pasc.Identifier.IndexedVariable)
  SharedDtor();
}

void Identifier_IndexedVariable::SharedDtor() {
}

void Identifier_IndexedVariable::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Identifier_IndexedVariable::descriptor() {
  ::protobuf_program_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_program_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Identifier_IndexedVariable& Identifier_IndexedVariable::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_program_2eproto::scc_info_Identifier_IndexedVariable.base);
  return *internal_default_instance();
}


void Identifier_IndexedVariable::Clear() {
// @@protoc_insertion_point(message_clear_start:Pasc.Identifier.IndexedVariable)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear();
}

bool Identifier_IndexedVariable::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Pasc.Identifier.IndexedVariable)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, _internal_metadata_.mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:Pasc.Identifier.IndexedVariable)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Pasc.Identifier.IndexedVariable)
  return false;
#undef DO_
}

void Identifier_IndexedVariable::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Pasc.Identifier.IndexedVariable)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:Pasc.Identifier.IndexedVariable)
}

::google::protobuf::uint8* Identifier_IndexedVariable::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:Pasc.Identifier.IndexedVariable)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Pasc.Identifier.IndexedVariable)
  return target;
}

size_t Identifier_IndexedVariable::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Pasc.Identifier.IndexedVariable)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Identifier_IndexedVariable::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Pasc.Identifier.IndexedVariable)
  GOOGLE_DCHECK_NE(&from, this);
  const Identifier_IndexedVariable* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Identifier_IndexedVariable>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Pasc.Identifier.IndexedVariable)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Pasc.Identifier.IndexedVariable)
    MergeFrom(*source);
  }
}

void Identifier_IndexedVariable::MergeFrom(const Identifier_IndexedVariable& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Pasc.Identifier.IndexedVariable)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void Identifier_IndexedVariable::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Pasc.Identifier.IndexedVariable)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Identifier_IndexedVariable::CopyFrom(const Identifier_IndexedVariable& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Pasc.Identifier.IndexedVariable)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Identifier_IndexedVariable::IsInitialized() const {
  return true;
}

void Identifier_IndexedVariable::Swap(Identifier_IndexedVariable* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Identifier_IndexedVariable::InternalSwap(Identifier_IndexedVariable* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Identifier_IndexedVariable::GetMetadata() const {
  protobuf_program_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_program_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Identifier_FieldDesignator::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Identifier_FieldDesignator::Identifier_FieldDesignator()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_program_2eproto::scc_info_Identifier_FieldDesignator.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:Pasc.Identifier.FieldDesignator)
}
Identifier_FieldDesignator::Identifier_FieldDesignator(const Identifier_FieldDesignator& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:Pasc.Identifier.FieldDesignator)
}

void Identifier_FieldDesignator::SharedCtor() {
}

Identifier_FieldDesignator::~Identifier_FieldDesignator() {
  // @@protoc_insertion_point(destructor:Pasc.Identifier.FieldDesignator)
  SharedDtor();
}

void Identifier_FieldDesignator::SharedDtor() {
}

void Identifier_FieldDesignator::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Identifier_FieldDesignator::descriptor() {
  ::protobuf_program_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_program_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Identifier_FieldDesignator& Identifier_FieldDesignator::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_program_2eproto::scc_info_Identifier_FieldDesignator.base);
  return *internal_default_instance();
}


void Identifier_FieldDesignator::Clear() {
// @@protoc_insertion_point(message_clear_start:Pasc.Identifier.FieldDesignator)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear();
}

bool Identifier_FieldDesignator::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Pasc.Identifier.FieldDesignator)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, _internal_metadata_.mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:Pasc.Identifier.FieldDesignator)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Pasc.Identifier.FieldDesignator)
  return false;
#undef DO_
}

void Identifier_FieldDesignator::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Pasc.Identifier.FieldDesignator)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:Pasc.Identifier.FieldDesignator)
}

::google::protobuf::uint8* Identifier_FieldDesignator::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:Pasc.Identifier.FieldDesignator)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Pasc.Identifier.FieldDesignator)
  return target;
}

size_t Identifier_FieldDesignator::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Pasc.Identifier.FieldDesignator)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Identifier_FieldDesignator::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Pasc.Identifier.FieldDesignator)
  GOOGLE_DCHECK_NE(&from, this);
  const Identifier_FieldDesignator* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Identifier_FieldDesignator>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Pasc.Identifier.FieldDesignator)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Pasc.Identifier.FieldDesignator)
    MergeFrom(*source);
  }
}

void Identifier_FieldDesignator::MergeFrom(const Identifier_FieldDesignator& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Pasc.Identifier.FieldDesignator)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void Identifier_FieldDesignator::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Pasc.Identifier.FieldDesignator)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Identifier_FieldDesignator::CopyFrom(const Identifier_FieldDesignator& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Pasc.Identifier.FieldDesignator)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Identifier_FieldDesignator::IsInitialized() const {
  return true;
}

void Identifier_FieldDesignator::Swap(Identifier_FieldDesignator* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Identifier_FieldDesignator::InternalSwap(Identifier_FieldDesignator* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Identifier_FieldDesignator::GetMetadata() const {
  protobuf_program_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_program_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Identifier::InitAsDefaultInstance() {
  ::Pasc::_Identifier_default_instance_.var_ = const_cast< ::Pasc::Identifier_Variable*>(
      ::Pasc::Identifier_Variable::internal_default_instance());
  ::Pasc::_Identifier_default_instance_.iv_ = const_cast< ::Pasc::Identifier_IndexedVariable*>(
      ::Pasc::Identifier_IndexedVariable::internal_default_instance());
  ::Pasc::_Identifier_default_instance_.fld_ = const_cast< ::Pasc::Identifier_FieldDesignator*>(
      ::Pasc::Identifier_FieldDesignator::internal_default_instance());
}
void Identifier::set_allocated_var(::Pasc::Identifier_Variable* var) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_value();
  if (var) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      var = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, var, submessage_arena);
    }
    set_has_var();
    value_.var_ = var;
  }
  // @@protoc_insertion_point(field_set_allocated:Pasc.Identifier.var)
}
void Identifier::set_allocated_iv(::Pasc::Identifier_IndexedVariable* iv) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_value();
  if (iv) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      iv = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, iv, submessage_arena);
    }
    set_has_iv();
    value_.iv_ = iv;
  }
  // @@protoc_insertion_point(field_set_allocated:Pasc.Identifier.iv)
}
void Identifier::set_allocated_fld(::Pasc::Identifier_FieldDesignator* fld) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_value();
  if (fld) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      fld = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, fld, submessage_arena);
    }
    set_has_fld();
    value_.fld_ = fld;
  }
  // @@protoc_insertion_point(field_set_allocated:Pasc.Identifier.fld)
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Identifier::kKindFieldNumber;
const int Identifier::kVarFieldNumber;
const int Identifier::kIvFieldNumber;
const int Identifier::kFldFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Identifier::Identifier()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_program_2eproto::scc_info_Identifier.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:Pasc.Identifier)
}
Identifier::Identifier(const Identifier& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  kind_ = from.kind_;
  clear_has_value();
  switch (from.value_case()) {
    case kVar: {
      mutable_var()->::Pasc::Identifier_Variable::MergeFrom(from.var());
      break;
    }
    case kIv: {
      mutable_iv()->::Pasc::Identifier_IndexedVariable::MergeFrom(from.iv());
      break;
    }
    case kFld: {
      mutable_fld()->::Pasc::Identifier_FieldDesignator::MergeFrom(from.fld());
      break;
    }
    case VALUE_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:Pasc.Identifier)
}

void Identifier::SharedCtor() {
  kind_ = 0;
  clear_has_value();
}

Identifier::~Identifier() {
  // @@protoc_insertion_point(destructor:Pasc.Identifier)
  SharedDtor();
}

void Identifier::SharedDtor() {
  if (has_value()) {
    clear_value();
  }
}

void Identifier::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Identifier::descriptor() {
  ::protobuf_program_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_program_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Identifier& Identifier::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_program_2eproto::scc_info_Identifier.base);
  return *internal_default_instance();
}


void Identifier::clear_value() {
// @@protoc_insertion_point(one_of_clear_start:Pasc.Identifier)
  switch (value_case()) {
    case kVar: {
      delete value_.var_;
      break;
    }
    case kIv: {
      delete value_.iv_;
      break;
    }
    case kFld: {
      delete value_.fld_;
      break;
    }
    case VALUE_NOT_SET: {
      break;
    }
  }
  _oneof_case_[0] = VALUE_NOT_SET;
}


void Identifier::Clear() {
// @@protoc_insertion_point(message_clear_start:Pasc.Identifier)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  kind_ = 0;
  clear_value();
  _internal_metadata_.Clear();
}

bool Identifier::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Pasc.Identifier)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .Pasc.Identifier.IDKind kind = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_kind(static_cast< ::Pasc::Identifier_IDKind >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .Pasc.Identifier.Variable var = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_var()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .Pasc.Identifier.IndexedVariable iv = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_iv()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .Pasc.Identifier.FieldDesignator fld = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_fld()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Pasc.Identifier)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Pasc.Identifier)
  return false;
#undef DO_
}

void Identifier::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Pasc.Identifier)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .Pasc.Identifier.IDKind kind = 1;
  if (this->kind() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->kind(), output);
  }

  // .Pasc.Identifier.Variable var = 2;
  if (has_var()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_var(), output);
  }

  // .Pasc.Identifier.IndexedVariable iv = 3;
  if (has_iv()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->_internal_iv(), output);
  }

  // .Pasc.Identifier.FieldDesignator fld = 4;
  if (has_fld()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->_internal_fld(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:Pasc.Identifier)
}

::google::protobuf::uint8* Identifier::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:Pasc.Identifier)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .Pasc.Identifier.IDKind kind = 1;
  if (this->kind() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->kind(), target);
  }

  // .Pasc.Identifier.Variable var = 2;
  if (has_var()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_var(), deterministic, target);
  }

  // .Pasc.Identifier.IndexedVariable iv = 3;
  if (has_iv()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->_internal_iv(), deterministic, target);
  }

  // .Pasc.Identifier.FieldDesignator fld = 4;
  if (has_fld()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, this->_internal_fld(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Pasc.Identifier)
  return target;
}

size_t Identifier::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Pasc.Identifier)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .Pasc.Identifier.IDKind kind = 1;
  if (this->kind() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->kind());
  }

  switch (value_case()) {
    // .Pasc.Identifier.Variable var = 2;
    case kVar: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *value_.var_);
      break;
    }
    // .Pasc.Identifier.IndexedVariable iv = 3;
    case kIv: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *value_.iv_);
      break;
    }
    // .Pasc.Identifier.FieldDesignator fld = 4;
    case kFld: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *value_.fld_);
      break;
    }
    case VALUE_NOT_SET: {
      break;
    }
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Identifier::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Pasc.Identifier)
  GOOGLE_DCHECK_NE(&from, this);
  const Identifier* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Identifier>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Pasc.Identifier)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Pasc.Identifier)
    MergeFrom(*source);
  }
}

void Identifier::MergeFrom(const Identifier& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Pasc.Identifier)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.kind() != 0) {
    set_kind(from.kind());
  }
  switch (from.value_case()) {
    case kVar: {
      mutable_var()->::Pasc::Identifier_Variable::MergeFrom(from.var());
      break;
    }
    case kIv: {
      mutable_iv()->::Pasc::Identifier_IndexedVariable::MergeFrom(from.iv());
      break;
    }
    case kFld: {
      mutable_fld()->::Pasc::Identifier_FieldDesignator::MergeFrom(from.fld());
      break;
    }
    case VALUE_NOT_SET: {
      break;
    }
  }
}

void Identifier::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Pasc.Identifier)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Identifier::CopyFrom(const Identifier& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Pasc.Identifier)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Identifier::IsInitialized() const {
  return true;
}

void Identifier::Swap(Identifier* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Identifier::InternalSwap(Identifier* other) {
  using std::swap;
  swap(kind_, other->kind_);
  swap(value_, other->value_);
  swap(_oneof_case_[0], other->_oneof_case_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Identifier::GetMetadata() const {
  protobuf_program_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_program_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Expression::InitAsDefaultInstance() {
  ::Pasc::_Expression_default_instance_.id_ = const_cast< ::Pasc::Identifier*>(
      ::Pasc::Identifier::internal_default_instance());
  ::Pasc::_Expression_default_instance_.uint_ = const_cast< ::Pasc::UIntLiteral*>(
      ::Pasc::UIntLiteral::internal_default_instance());
  ::Pasc::_Expression_default_instance_.be_ = const_cast< ::Pasc::BinaryExpr*>(
      ::Pasc::BinaryExpr::internal_default_instance());
  ::Pasc::_Expression_default_instance_.wp_ = const_cast< ::Pasc::WriteParameter*>(
      ::Pasc::WriteParameter::internal_default_instance());
  ::Pasc::_Expression_default_instance_.fc_ = const_cast< ::Pasc::FuncCall*>(
      ::Pasc::FuncCall::internal_default_instance());
}
void Expression::set_allocated_id(::Pasc::Identifier* id) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_expr();
  if (id) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      id = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, id, submessage_arena);
    }
    set_has_id();
    expr_.id_ = id;
  }
  // @@protoc_insertion_point(field_set_allocated:Pasc.Expression.id)
}
void Expression::set_allocated_uint(::Pasc::UIntLiteral* uint) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_expr();
  if (uint) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      uint = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, uint, submessage_arena);
    }
    set_has_uint();
    expr_.uint_ = uint;
  }
  // @@protoc_insertion_point(field_set_allocated:Pasc.Expression.uint)
}
void Expression::set_allocated_be(::Pasc::BinaryExpr* be) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_expr();
  if (be) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      be = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, be, submessage_arena);
    }
    set_has_be();
    expr_.be_ = be;
  }
  // @@protoc_insertion_point(field_set_allocated:Pasc.Expression.be)
}
void Expression::set_allocated_wp(::Pasc::WriteParameter* wp) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_expr();
  if (wp) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      wp = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, wp, submessage_arena);
    }
    set_has_wp();
    expr_.wp_ = wp;
  }
  // @@protoc_insertion_point(field_set_allocated:Pasc.Expression.wp)
}
void Expression::set_allocated_fc(::Pasc::FuncCall* fc) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_expr();
  if (fc) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      fc = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, fc, submessage_arena);
    }
    set_has_fc();
    expr_.fc_ = fc;
  }
  // @@protoc_insertion_point(field_set_allocated:Pasc.Expression.fc)
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Expression::kKindFieldNumber;
const int Expression::kIdFieldNumber;
const int Expression::kUintFieldNumber;
const int Expression::kBeFieldNumber;
const int Expression::kWpFieldNumber;
const int Expression::kFcFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Expression::Expression()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_program_2eproto::scc_info_BinaryExpr.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:Pasc.Expression)
}
Expression::Expression(const Expression& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  kind_ = from.kind_;
  clear_has_expr();
  switch (from.expr_case()) {
    case kId: {
      mutable_id()->::Pasc::Identifier::MergeFrom(from.id());
      break;
    }
    case kUint: {
      mutable_uint()->::Pasc::UIntLiteral::MergeFrom(from.uint());
      break;
    }
    case kBe: {
      mutable_be()->::Pasc::BinaryExpr::MergeFrom(from.be());
      break;
    }
    case kWp: {
      mutable_wp()->::Pasc::WriteParameter::MergeFrom(from.wp());
      break;
    }
    case kFc: {
      mutable_fc()->::Pasc::FuncCall::MergeFrom(from.fc());
      break;
    }
    case EXPR_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:Pasc.Expression)
}

void Expression::SharedCtor() {
  kind_ = 0;
  clear_has_expr();
}

Expression::~Expression() {
  // @@protoc_insertion_point(destructor:Pasc.Expression)
  SharedDtor();
}

void Expression::SharedDtor() {
  if (has_expr()) {
    clear_expr();
  }
}

void Expression::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Expression::descriptor() {
  ::protobuf_program_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_program_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Expression& Expression::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_program_2eproto::scc_info_BinaryExpr.base);
  return *internal_default_instance();
}


void Expression::clear_expr() {
// @@protoc_insertion_point(one_of_clear_start:Pasc.Expression)
  switch (expr_case()) {
    case kId: {
      delete expr_.id_;
      break;
    }
    case kUint: {
      delete expr_.uint_;
      break;
    }
    case kBe: {
      delete expr_.be_;
      break;
    }
    case kWp: {
      delete expr_.wp_;
      break;
    }
    case kFc: {
      delete expr_.fc_;
      break;
    }
    case EXPR_NOT_SET: {
      break;
    }
  }
  _oneof_case_[0] = EXPR_NOT_SET;
}


void Expression::Clear() {
// @@protoc_insertion_point(message_clear_start:Pasc.Expression)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  kind_ = 0;
  clear_expr();
  _internal_metadata_.Clear();
}

bool Expression::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Pasc.Expression)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .Pasc.Expression.ExprKind kind = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_kind(static_cast< ::Pasc::Expression_ExprKind >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .Pasc.Identifier id = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_id()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .Pasc.UIntLiteral uint = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_uint()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .Pasc.BinaryExpr be = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_be()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .Pasc.WriteParameter wp = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_wp()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .Pasc.FuncCall fc = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_fc()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Pasc.Expression)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Pasc.Expression)
  return false;
#undef DO_
}

void Expression::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Pasc.Expression)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .Pasc.Expression.ExprKind kind = 1;
  if (this->kind() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->kind(), output);
  }

  // .Pasc.Identifier id = 2;
  if (has_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_id(), output);
  }

  // .Pasc.UIntLiteral uint = 3;
  if (has_uint()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->_internal_uint(), output);
  }

  // .Pasc.BinaryExpr be = 4;
  if (has_be()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->_internal_be(), output);
  }

  // .Pasc.WriteParameter wp = 5;
  if (has_wp()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, this->_internal_wp(), output);
  }

  // .Pasc.FuncCall fc = 6;
  if (has_fc()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6, this->_internal_fc(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:Pasc.Expression)
}

::google::protobuf::uint8* Expression::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:Pasc.Expression)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .Pasc.Expression.ExprKind kind = 1;
  if (this->kind() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->kind(), target);
  }

  // .Pasc.Identifier id = 2;
  if (has_id()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_id(), deterministic, target);
  }

  // .Pasc.UIntLiteral uint = 3;
  if (has_uint()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->_internal_uint(), deterministic, target);
  }

  // .Pasc.BinaryExpr be = 4;
  if (has_be()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, this->_internal_be(), deterministic, target);
  }

  // .Pasc.WriteParameter wp = 5;
  if (has_wp()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        5, this->_internal_wp(), deterministic, target);
  }

  // .Pasc.FuncCall fc = 6;
  if (has_fc()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        6, this->_internal_fc(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Pasc.Expression)
  return target;
}

size_t Expression::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Pasc.Expression)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .Pasc.Expression.ExprKind kind = 1;
  if (this->kind() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->kind());
  }

  switch (expr_case()) {
    // .Pasc.Identifier id = 2;
    case kId: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *expr_.id_);
      break;
    }
    // .Pasc.UIntLiteral uint = 3;
    case kUint: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *expr_.uint_);
      break;
    }
    // .Pasc.BinaryExpr be = 4;
    case kBe: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *expr_.be_);
      break;
    }
    // .Pasc.WriteParameter wp = 5;
    case kWp: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *expr_.wp_);
      break;
    }
    // .Pasc.FuncCall fc = 6;
    case kFc: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *expr_.fc_);
      break;
    }
    case EXPR_NOT_SET: {
      break;
    }
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Expression::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Pasc.Expression)
  GOOGLE_DCHECK_NE(&from, this);
  const Expression* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Expression>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Pasc.Expression)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Pasc.Expression)
    MergeFrom(*source);
  }
}

void Expression::MergeFrom(const Expression& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Pasc.Expression)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.kind() != 0) {
    set_kind(from.kind());
  }
  switch (from.expr_case()) {
    case kId: {
      mutable_id()->::Pasc::Identifier::MergeFrom(from.id());
      break;
    }
    case kUint: {
      mutable_uint()->::Pasc::UIntLiteral::MergeFrom(from.uint());
      break;
    }
    case kBe: {
      mutable_be()->::Pasc::BinaryExpr::MergeFrom(from.be());
      break;
    }
    case kWp: {
      mutable_wp()->::Pasc::WriteParameter::MergeFrom(from.wp());
      break;
    }
    case kFc: {
      mutable_fc()->::Pasc::FuncCall::MergeFrom(from.fc());
      break;
    }
    case EXPR_NOT_SET: {
      break;
    }
  }
}

void Expression::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Pasc.Expression)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Expression::CopyFrom(const Expression& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Pasc.Expression)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Expression::IsInitialized() const {
  return true;
}

void Expression::Swap(Expression* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Expression::InternalSwap(Expression* other) {
  using std::swap;
  swap(kind_, other->kind_);
  swap(expr_, other->expr_);
  swap(_oneof_case_[0], other->_oneof_case_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Expression::GetMetadata() const {
  protobuf_program_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_program_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void WriteParameter::InitAsDefaultInstance() {
  ::Pasc::_WriteParameter_default_instance_._instance.get_mutable()->e_ = const_cast< ::Pasc::Expression*>(
      ::Pasc::Expression::internal_default_instance());
  ::Pasc::_WriteParameter_default_instance_._instance.get_mutable()->totalwidth_ = const_cast< ::Pasc::Expression*>(
      ::Pasc::Expression::internal_default_instance());
  ::Pasc::_WriteParameter_default_instance_._instance.get_mutable()->fracdigits_ = const_cast< ::Pasc::Expression*>(
      ::Pasc::Expression::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int WriteParameter::kEFieldNumber;
const int WriteParameter::kTotalWidthFieldNumber;
const int WriteParameter::kFracDigitsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

WriteParameter::WriteParameter()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_program_2eproto::scc_info_BinaryExpr.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:Pasc.WriteParameter)
}
WriteParameter::WriteParameter(const WriteParameter& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_e()) {
    e_ = new ::Pasc::Expression(*from.e_);
  } else {
    e_ = NULL;
  }
  if (from.has_totalwidth()) {
    totalwidth_ = new ::Pasc::Expression(*from.totalwidth_);
  } else {
    totalwidth_ = NULL;
  }
  if (from.has_fracdigits()) {
    fracdigits_ = new ::Pasc::Expression(*from.fracdigits_);
  } else {
    fracdigits_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:Pasc.WriteParameter)
}

void WriteParameter::SharedCtor() {
  ::memset(&e_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&fracdigits_) -
      reinterpret_cast<char*>(&e_)) + sizeof(fracdigits_));
}

WriteParameter::~WriteParameter() {
  // @@protoc_insertion_point(destructor:Pasc.WriteParameter)
  SharedDtor();
}

void WriteParameter::SharedDtor() {
  if (this != internal_default_instance()) delete e_;
  if (this != internal_default_instance()) delete totalwidth_;
  if (this != internal_default_instance()) delete fracdigits_;
}

void WriteParameter::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* WriteParameter::descriptor() {
  ::protobuf_program_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_program_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const WriteParameter& WriteParameter::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_program_2eproto::scc_info_BinaryExpr.base);
  return *internal_default_instance();
}


void WriteParameter::Clear() {
// @@protoc_insertion_point(message_clear_start:Pasc.WriteParameter)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && e_ != NULL) {
    delete e_;
  }
  e_ = NULL;
  if (GetArenaNoVirtual() == NULL && totalwidth_ != NULL) {
    delete totalwidth_;
  }
  totalwidth_ = NULL;
  if (GetArenaNoVirtual() == NULL && fracdigits_ != NULL) {
    delete fracdigits_;
  }
  fracdigits_ = NULL;
  _internal_metadata_.Clear();
}

bool WriteParameter::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Pasc.WriteParameter)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .Pasc.Expression e = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_e()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .Pasc.Expression totalWidth = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_totalwidth()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .Pasc.Expression fracDigits = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_fracdigits()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Pasc.WriteParameter)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Pasc.WriteParameter)
  return false;
#undef DO_
}

void WriteParameter::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Pasc.WriteParameter)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .Pasc.Expression e = 1;
  if (this->has_e()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_e(), output);
  }

  // .Pasc.Expression totalWidth = 2;
  if (this->has_totalwidth()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_totalwidth(), output);
  }

  // .Pasc.Expression fracDigits = 3;
  if (this->has_fracdigits()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->_internal_fracdigits(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:Pasc.WriteParameter)
}

::google::protobuf::uint8* WriteParameter::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:Pasc.WriteParameter)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .Pasc.Expression e = 1;
  if (this->has_e()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_e(), deterministic, target);
  }

  // .Pasc.Expression totalWidth = 2;
  if (this->has_totalwidth()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_totalwidth(), deterministic, target);
  }

  // .Pasc.Expression fracDigits = 3;
  if (this->has_fracdigits()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->_internal_fracdigits(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Pasc.WriteParameter)
  return target;
}

size_t WriteParameter::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Pasc.WriteParameter)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .Pasc.Expression e = 1;
  if (this->has_e()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *e_);
  }

  // .Pasc.Expression totalWidth = 2;
  if (this->has_totalwidth()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *totalwidth_);
  }

  // .Pasc.Expression fracDigits = 3;
  if (this->has_fracdigits()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *fracdigits_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void WriteParameter::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Pasc.WriteParameter)
  GOOGLE_DCHECK_NE(&from, this);
  const WriteParameter* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const WriteParameter>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Pasc.WriteParameter)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Pasc.WriteParameter)
    MergeFrom(*source);
  }
}

void WriteParameter::MergeFrom(const WriteParameter& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Pasc.WriteParameter)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_e()) {
    mutable_e()->::Pasc::Expression::MergeFrom(from.e());
  }
  if (from.has_totalwidth()) {
    mutable_totalwidth()->::Pasc::Expression::MergeFrom(from.totalwidth());
  }
  if (from.has_fracdigits()) {
    mutable_fracdigits()->::Pasc::Expression::MergeFrom(from.fracdigits());
  }
}

void WriteParameter::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Pasc.WriteParameter)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void WriteParameter::CopyFrom(const WriteParameter& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Pasc.WriteParameter)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool WriteParameter::IsInitialized() const {
  return true;
}

void WriteParameter::Swap(WriteParameter* other) {
  if (other == this) return;
  InternalSwap(other);
}
void WriteParameter::InternalSwap(WriteParameter* other) {
  using std::swap;
  swap(e_, other->e_);
  swap(totalwidth_, other->totalwidth_);
  swap(fracdigits_, other->fracdigits_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata WriteParameter::GetMetadata() const {
  protobuf_program_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_program_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void BinaryExpr::InitAsDefaultInstance() {
  ::Pasc::_BinaryExpr_default_instance_._instance.get_mutable()->left_ = const_cast< ::Pasc::Expression*>(
      ::Pasc::Expression::internal_default_instance());
  ::Pasc::_BinaryExpr_default_instance_._instance.get_mutable()->right_ = const_cast< ::Pasc::Expression*>(
      ::Pasc::Expression::internal_default_instance());
  ::Pasc::_BinaryExpr_default_instance_._instance.get_mutable()->op_ = const_cast< ::Pasc::Operator*>(
      ::Pasc::Operator::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int BinaryExpr::kLeftFieldNumber;
const int BinaryExpr::kRightFieldNumber;
const int BinaryExpr::kOpFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

BinaryExpr::BinaryExpr()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_program_2eproto::scc_info_BinaryExpr.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:Pasc.BinaryExpr)
}
BinaryExpr::BinaryExpr(const BinaryExpr& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_left()) {
    left_ = new ::Pasc::Expression(*from.left_);
  } else {
    left_ = NULL;
  }
  if (from.has_right()) {
    right_ = new ::Pasc::Expression(*from.right_);
  } else {
    right_ = NULL;
  }
  if (from.has_op()) {
    op_ = new ::Pasc::Operator(*from.op_);
  } else {
    op_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:Pasc.BinaryExpr)
}

void BinaryExpr::SharedCtor() {
  ::memset(&left_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&op_) -
      reinterpret_cast<char*>(&left_)) + sizeof(op_));
}

BinaryExpr::~BinaryExpr() {
  // @@protoc_insertion_point(destructor:Pasc.BinaryExpr)
  SharedDtor();
}

void BinaryExpr::SharedDtor() {
  if (this != internal_default_instance()) delete left_;
  if (this != internal_default_instance()) delete right_;
  if (this != internal_default_instance()) delete op_;
}

void BinaryExpr::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* BinaryExpr::descriptor() {
  ::protobuf_program_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_program_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const BinaryExpr& BinaryExpr::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_program_2eproto::scc_info_BinaryExpr.base);
  return *internal_default_instance();
}


void BinaryExpr::Clear() {
// @@protoc_insertion_point(message_clear_start:Pasc.BinaryExpr)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && left_ != NULL) {
    delete left_;
  }
  left_ = NULL;
  if (GetArenaNoVirtual() == NULL && right_ != NULL) {
    delete right_;
  }
  right_ = NULL;
  if (GetArenaNoVirtual() == NULL && op_ != NULL) {
    delete op_;
  }
  op_ = NULL;
  _internal_metadata_.Clear();
}

bool BinaryExpr::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Pasc.BinaryExpr)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .Pasc.Expression left = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_left()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .Pasc.Expression right = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_right()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .Pasc.Operator op = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_op()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Pasc.BinaryExpr)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Pasc.BinaryExpr)
  return false;
#undef DO_
}

void BinaryExpr::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Pasc.BinaryExpr)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .Pasc.Expression left = 1;
  if (this->has_left()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_left(), output);
  }

  // .Pasc.Expression right = 2;
  if (this->has_right()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_right(), output);
  }

  // .Pasc.Operator op = 3;
  if (this->has_op()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->_internal_op(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:Pasc.BinaryExpr)
}

::google::protobuf::uint8* BinaryExpr::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:Pasc.BinaryExpr)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .Pasc.Expression left = 1;
  if (this->has_left()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_left(), deterministic, target);
  }

  // .Pasc.Expression right = 2;
  if (this->has_right()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_right(), deterministic, target);
  }

  // .Pasc.Operator op = 3;
  if (this->has_op()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->_internal_op(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Pasc.BinaryExpr)
  return target;
}

size_t BinaryExpr::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Pasc.BinaryExpr)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .Pasc.Expression left = 1;
  if (this->has_left()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *left_);
  }

  // .Pasc.Expression right = 2;
  if (this->has_right()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *right_);
  }

  // .Pasc.Operator op = 3;
  if (this->has_op()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *op_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void BinaryExpr::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Pasc.BinaryExpr)
  GOOGLE_DCHECK_NE(&from, this);
  const BinaryExpr* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const BinaryExpr>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Pasc.BinaryExpr)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Pasc.BinaryExpr)
    MergeFrom(*source);
  }
}

void BinaryExpr::MergeFrom(const BinaryExpr& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Pasc.BinaryExpr)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_left()) {
    mutable_left()->::Pasc::Expression::MergeFrom(from.left());
  }
  if (from.has_right()) {
    mutable_right()->::Pasc::Expression::MergeFrom(from.right());
  }
  if (from.has_op()) {
    mutable_op()->::Pasc::Operator::MergeFrom(from.op());
  }
}

void BinaryExpr::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Pasc.BinaryExpr)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BinaryExpr::CopyFrom(const BinaryExpr& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Pasc.BinaryExpr)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BinaryExpr::IsInitialized() const {
  return true;
}

void BinaryExpr::Swap(BinaryExpr* other) {
  if (other == this) return;
  InternalSwap(other);
}
void BinaryExpr::InternalSwap(BinaryExpr* other) {
  using std::swap;
  swap(left_, other->left_);
  swap(right_, other->right_);
  swap(op_, other->op_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata BinaryExpr::GetMetadata() const {
  protobuf_program_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_program_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void UIntLiteral::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int UIntLiteral::kValueFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

UIntLiteral::UIntLiteral()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_program_2eproto::scc_info_UIntLiteral.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:Pasc.UIntLiteral)
}
UIntLiteral::UIntLiteral(const UIntLiteral& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  value_ = from.value_;
  // @@protoc_insertion_point(copy_constructor:Pasc.UIntLiteral)
}

void UIntLiteral::SharedCtor() {
  value_ = 0u;
}

UIntLiteral::~UIntLiteral() {
  // @@protoc_insertion_point(destructor:Pasc.UIntLiteral)
  SharedDtor();
}

void UIntLiteral::SharedDtor() {
}

void UIntLiteral::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* UIntLiteral::descriptor() {
  ::protobuf_program_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_program_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const UIntLiteral& UIntLiteral::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_program_2eproto::scc_info_UIntLiteral.base);
  return *internal_default_instance();
}


void UIntLiteral::Clear() {
// @@protoc_insertion_point(message_clear_start:Pasc.UIntLiteral)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  value_ = 0u;
  _internal_metadata_.Clear();
}

bool UIntLiteral::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Pasc.UIntLiteral)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 value = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &value_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Pasc.UIntLiteral)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Pasc.UIntLiteral)
  return false;
#undef DO_
}

void UIntLiteral::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Pasc.UIntLiteral)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 value = 1;
  if (this->value() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->value(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:Pasc.UIntLiteral)
}

::google::protobuf::uint8* UIntLiteral::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:Pasc.UIntLiteral)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 value = 1;
  if (this->value() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->value(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Pasc.UIntLiteral)
  return target;
}

size_t UIntLiteral::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Pasc.UIntLiteral)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint32 value = 1;
  if (this->value() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->value());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void UIntLiteral::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Pasc.UIntLiteral)
  GOOGLE_DCHECK_NE(&from, this);
  const UIntLiteral* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const UIntLiteral>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Pasc.UIntLiteral)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Pasc.UIntLiteral)
    MergeFrom(*source);
  }
}

void UIntLiteral::MergeFrom(const UIntLiteral& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Pasc.UIntLiteral)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.value() != 0) {
    set_value(from.value());
  }
}

void UIntLiteral::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Pasc.UIntLiteral)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UIntLiteral::CopyFrom(const UIntLiteral& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Pasc.UIntLiteral)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UIntLiteral::IsInitialized() const {
  return true;
}

void UIntLiteral::Swap(UIntLiteral* other) {
  if (other == this) return;
  InternalSwap(other);
}
void UIntLiteral::InternalSwap(UIntLiteral* other) {
  using std::swap;
  swap(value_, other->value_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata UIntLiteral::GetMetadata() const {
  protobuf_program_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_program_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void FuncCall::InitAsDefaultInstance() {
  ::Pasc::_FuncCall_default_instance_._instance.get_mutable()->name_ = const_cast< ::Pasc::Expression*>(
      ::Pasc::Expression::internal_default_instance());
  ::Pasc::_FuncCall_default_instance_._instance.get_mutable()->returntype_ = const_cast< ::Pasc::Type*>(
      ::Pasc::Type::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int FuncCall::kNameFieldNumber;
const int FuncCall::kArgsFieldNumber;
const int FuncCall::kReturnTypeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

FuncCall::FuncCall()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_program_2eproto::scc_info_BinaryExpr.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:Pasc.FuncCall)
}
FuncCall::FuncCall(const FuncCall& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      args_(from.args_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_name()) {
    name_ = new ::Pasc::Expression(*from.name_);
  } else {
    name_ = NULL;
  }
  if (from.has_returntype()) {
    returntype_ = new ::Pasc::Type(*from.returntype_);
  } else {
    returntype_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:Pasc.FuncCall)
}

void FuncCall::SharedCtor() {
  ::memset(&name_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&returntype_) -
      reinterpret_cast<char*>(&name_)) + sizeof(returntype_));
}

FuncCall::~FuncCall() {
  // @@protoc_insertion_point(destructor:Pasc.FuncCall)
  SharedDtor();
}

void FuncCall::SharedDtor() {
  if (this != internal_default_instance()) delete name_;
  if (this != internal_default_instance()) delete returntype_;
}

void FuncCall::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* FuncCall::descriptor() {
  ::protobuf_program_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_program_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const FuncCall& FuncCall::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_program_2eproto::scc_info_BinaryExpr.base);
  return *internal_default_instance();
}


void FuncCall::Clear() {
// @@protoc_insertion_point(message_clear_start:Pasc.FuncCall)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  args_.Clear();
  if (GetArenaNoVirtual() == NULL && name_ != NULL) {
    delete name_;
  }
  name_ = NULL;
  if (GetArenaNoVirtual() == NULL && returntype_ != NULL) {
    delete returntype_;
  }
  returntype_ = NULL;
  _internal_metadata_.Clear();
}

bool FuncCall::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Pasc.FuncCall)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .Pasc.Expression name = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_name()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .Pasc.Expression args = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_args()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .Pasc.Type returnType = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_returntype()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Pasc.FuncCall)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Pasc.FuncCall)
  return false;
#undef DO_
}

void FuncCall::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Pasc.FuncCall)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .Pasc.Expression name = 1;
  if (this->has_name()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_name(), output);
  }

  // repeated .Pasc.Expression args = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->args_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2,
      this->args(static_cast<int>(i)),
      output);
  }

  // .Pasc.Type returnType = 3;
  if (this->has_returntype()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->_internal_returntype(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:Pasc.FuncCall)
}

::google::protobuf::uint8* FuncCall::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:Pasc.FuncCall)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .Pasc.Expression name = 1;
  if (this->has_name()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_name(), deterministic, target);
  }

  // repeated .Pasc.Expression args = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->args_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->args(static_cast<int>(i)), deterministic, target);
  }

  // .Pasc.Type returnType = 3;
  if (this->has_returntype()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->_internal_returntype(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Pasc.FuncCall)
  return target;
}

size_t FuncCall::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Pasc.FuncCall)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .Pasc.Expression args = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->args_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->args(static_cast<int>(i)));
    }
  }

  // .Pasc.Expression name = 1;
  if (this->has_name()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *name_);
  }

  // .Pasc.Type returnType = 3;
  if (this->has_returntype()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *returntype_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void FuncCall::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Pasc.FuncCall)
  GOOGLE_DCHECK_NE(&from, this);
  const FuncCall* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const FuncCall>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Pasc.FuncCall)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Pasc.FuncCall)
    MergeFrom(*source);
  }
}

void FuncCall::MergeFrom(const FuncCall& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Pasc.FuncCall)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  args_.MergeFrom(from.args_);
  if (from.has_name()) {
    mutable_name()->::Pasc::Expression::MergeFrom(from.name());
  }
  if (from.has_returntype()) {
    mutable_returntype()->::Pasc::Type::MergeFrom(from.returntype());
  }
}

void FuncCall::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Pasc.FuncCall)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void FuncCall::CopyFrom(const FuncCall& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Pasc.FuncCall)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool FuncCall::IsInitialized() const {
  return true;
}

void FuncCall::Swap(FuncCall* other) {
  if (other == this) return;
  InternalSwap(other);
}
void FuncCall::InternalSwap(FuncCall* other) {
  using std::swap;
  CastToBase(&args_)->InternalSwap(CastToBase(&other->args_));
  swap(name_, other->name_);
  swap(returntype_, other->returntype_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata FuncCall::GetMetadata() const {
  protobuf_program_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_program_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Type_Integer::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Type_Integer::kNameFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Type_Integer::Type_Integer()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_program_2eproto::scc_info_Type_Integer.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:Pasc.Type.Integer)
}
Type_Integer::Type_Integer(const Type_Integer& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.name().size() > 0) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  // @@protoc_insertion_point(copy_constructor:Pasc.Type.Integer)
}

void Type_Integer::SharedCtor() {
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

Type_Integer::~Type_Integer() {
  // @@protoc_insertion_point(destructor:Pasc.Type.Integer)
  SharedDtor();
}

void Type_Integer::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void Type_Integer::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Type_Integer::descriptor() {
  ::protobuf_program_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_program_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Type_Integer& Type_Integer::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_program_2eproto::scc_info_Type_Integer.base);
  return *internal_default_instance();
}


void Type_Integer::Clear() {
// @@protoc_insertion_point(message_clear_start:Pasc.Type.Integer)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool Type_Integer::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Pasc.Type.Integer)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string name = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Pasc.Type.Integer.name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Pasc.Type.Integer)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Pasc.Type.Integer)
  return false;
#undef DO_
}

void Type_Integer::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Pasc.Type.Integer)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Pasc.Type.Integer.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:Pasc.Type.Integer)
}

::google::protobuf::uint8* Type_Integer::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:Pasc.Type.Integer)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Pasc.Type.Integer.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Pasc.Type.Integer)
  return target;
}

size_t Type_Integer::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Pasc.Type.Integer)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string name = 1;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Type_Integer::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Pasc.Type.Integer)
  GOOGLE_DCHECK_NE(&from, this);
  const Type_Integer* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Type_Integer>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Pasc.Type.Integer)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Pasc.Type.Integer)
    MergeFrom(*source);
  }
}

void Type_Integer::MergeFrom(const Type_Integer& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Pasc.Type.Integer)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
}

void Type_Integer::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Pasc.Type.Integer)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Type_Integer::CopyFrom(const Type_Integer& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Pasc.Type.Integer)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Type_Integer::IsInitialized() const {
  return true;
}

void Type_Integer::Swap(Type_Integer* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Type_Integer::InternalSwap(Type_Integer* other) {
  using std::swap;
  name_.Swap(&other->name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Type_Integer::GetMetadata() const {
  protobuf_program_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_program_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Type_Boolean::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Type_Boolean::kNameFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Type_Boolean::Type_Boolean()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_program_2eproto::scc_info_Type_Boolean.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:Pasc.Type.Boolean)
}
Type_Boolean::Type_Boolean(const Type_Boolean& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.name().size() > 0) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  // @@protoc_insertion_point(copy_constructor:Pasc.Type.Boolean)
}

void Type_Boolean::SharedCtor() {
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

Type_Boolean::~Type_Boolean() {
  // @@protoc_insertion_point(destructor:Pasc.Type.Boolean)
  SharedDtor();
}

void Type_Boolean::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void Type_Boolean::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Type_Boolean::descriptor() {
  ::protobuf_program_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_program_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Type_Boolean& Type_Boolean::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_program_2eproto::scc_info_Type_Boolean.base);
  return *internal_default_instance();
}


void Type_Boolean::Clear() {
// @@protoc_insertion_point(message_clear_start:Pasc.Type.Boolean)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool Type_Boolean::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Pasc.Type.Boolean)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string name = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Pasc.Type.Boolean.name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Pasc.Type.Boolean)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Pasc.Type.Boolean)
  return false;
#undef DO_
}

void Type_Boolean::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Pasc.Type.Boolean)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Pasc.Type.Boolean.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:Pasc.Type.Boolean)
}

::google::protobuf::uint8* Type_Boolean::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:Pasc.Type.Boolean)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Pasc.Type.Boolean.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Pasc.Type.Boolean)
  return target;
}

size_t Type_Boolean::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Pasc.Type.Boolean)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string name = 1;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Type_Boolean::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Pasc.Type.Boolean)
  GOOGLE_DCHECK_NE(&from, this);
  const Type_Boolean* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Type_Boolean>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Pasc.Type.Boolean)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Pasc.Type.Boolean)
    MergeFrom(*source);
  }
}

void Type_Boolean::MergeFrom(const Type_Boolean& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Pasc.Type.Boolean)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
}

void Type_Boolean::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Pasc.Type.Boolean)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Type_Boolean::CopyFrom(const Type_Boolean& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Pasc.Type.Boolean)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Type_Boolean::IsInitialized() const {
  return true;
}

void Type_Boolean::Swap(Type_Boolean* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Type_Boolean::InternalSwap(Type_Boolean* other) {
  using std::swap;
  name_.Swap(&other->name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Type_Boolean::GetMetadata() const {
  protobuf_program_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_program_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Type_Real::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Type_Real::kNameFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Type_Real::Type_Real()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_program_2eproto::scc_info_Type_Real.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:Pasc.Type.Real)
}
Type_Real::Type_Real(const Type_Real& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.name().size() > 0) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  // @@protoc_insertion_point(copy_constructor:Pasc.Type.Real)
}

void Type_Real::SharedCtor() {
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

Type_Real::~Type_Real() {
  // @@protoc_insertion_point(destructor:Pasc.Type.Real)
  SharedDtor();
}

void Type_Real::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void Type_Real::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Type_Real::descriptor() {
  ::protobuf_program_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_program_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Type_Real& Type_Real::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_program_2eproto::scc_info_Type_Real.base);
  return *internal_default_instance();
}


void Type_Real::Clear() {
// @@protoc_insertion_point(message_clear_start:Pasc.Type.Real)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool Type_Real::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Pasc.Type.Real)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string name = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Pasc.Type.Real.name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Pasc.Type.Real)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Pasc.Type.Real)
  return false;
#undef DO_
}

void Type_Real::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Pasc.Type.Real)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Pasc.Type.Real.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:Pasc.Type.Real)
}

::google::protobuf::uint8* Type_Real::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:Pasc.Type.Real)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Pasc.Type.Real.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Pasc.Type.Real)
  return target;
}

size_t Type_Real::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Pasc.Type.Real)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string name = 1;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Type_Real::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Pasc.Type.Real)
  GOOGLE_DCHECK_NE(&from, this);
  const Type_Real* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Type_Real>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Pasc.Type.Real)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Pasc.Type.Real)
    MergeFrom(*source);
  }
}

void Type_Real::MergeFrom(const Type_Real& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Pasc.Type.Real)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
}

void Type_Real::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Pasc.Type.Real)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Type_Real::CopyFrom(const Type_Real& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Pasc.Type.Real)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Type_Real::IsInitialized() const {
  return true;
}

void Type_Real::Swap(Type_Real* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Type_Real::InternalSwap(Type_Real* other) {
  using std::swap;
  name_.Swap(&other->name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Type_Real::GetMetadata() const {
  protobuf_program_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_program_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Type_Char::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Type_Char::kNameFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Type_Char::Type_Char()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_program_2eproto::scc_info_Type_Char.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:Pasc.Type.Char)
}
Type_Char::Type_Char(const Type_Char& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.name().size() > 0) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  // @@protoc_insertion_point(copy_constructor:Pasc.Type.Char)
}

void Type_Char::SharedCtor() {
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

Type_Char::~Type_Char() {
  // @@protoc_insertion_point(destructor:Pasc.Type.Char)
  SharedDtor();
}

void Type_Char::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void Type_Char::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Type_Char::descriptor() {
  ::protobuf_program_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_program_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Type_Char& Type_Char::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_program_2eproto::scc_info_Type_Char.base);
  return *internal_default_instance();
}


void Type_Char::Clear() {
// @@protoc_insertion_point(message_clear_start:Pasc.Type.Char)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool Type_Char::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Pasc.Type.Char)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string name = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Pasc.Type.Char.name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Pasc.Type.Char)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Pasc.Type.Char)
  return false;
#undef DO_
}

void Type_Char::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Pasc.Type.Char)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Pasc.Type.Char.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:Pasc.Type.Char)
}

::google::protobuf::uint8* Type_Char::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:Pasc.Type.Char)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Pasc.Type.Char.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Pasc.Type.Char)
  return target;
}

size_t Type_Char::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Pasc.Type.Char)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string name = 1;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Type_Char::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Pasc.Type.Char)
  GOOGLE_DCHECK_NE(&from, this);
  const Type_Char* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Type_Char>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Pasc.Type.Char)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Pasc.Type.Char)
    MergeFrom(*source);
  }
}

void Type_Char::MergeFrom(const Type_Char& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Pasc.Type.Char)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
}

void Type_Char::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Pasc.Type.Char)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Type_Char::CopyFrom(const Type_Char& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Pasc.Type.Char)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Type_Char::IsInitialized() const {
  return true;
}

void Type_Char::Swap(Type_Char* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Type_Char::InternalSwap(Type_Char* other) {
  using std::swap;
  name_.Swap(&other->name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Type_Char::GetMetadata() const {
  protobuf_program_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_program_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Type_Void::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Type_Void::kNameFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Type_Void::Type_Void()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_program_2eproto::scc_info_Type_Void.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:Pasc.Type.Void)
}
Type_Void::Type_Void(const Type_Void& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.name().size() > 0) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  // @@protoc_insertion_point(copy_constructor:Pasc.Type.Void)
}

void Type_Void::SharedCtor() {
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

Type_Void::~Type_Void() {
  // @@protoc_insertion_point(destructor:Pasc.Type.Void)
  SharedDtor();
}

void Type_Void::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void Type_Void::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Type_Void::descriptor() {
  ::protobuf_program_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_program_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Type_Void& Type_Void::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_program_2eproto::scc_info_Type_Void.base);
  return *internal_default_instance();
}


void Type_Void::Clear() {
// @@protoc_insertion_point(message_clear_start:Pasc.Type.Void)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool Type_Void::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Pasc.Type.Void)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string name = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Pasc.Type.Void.name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Pasc.Type.Void)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Pasc.Type.Void)
  return false;
#undef DO_
}

void Type_Void::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Pasc.Type.Void)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Pasc.Type.Void.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:Pasc.Type.Void)
}

::google::protobuf::uint8* Type_Void::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:Pasc.Type.Void)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Pasc.Type.Void.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Pasc.Type.Void)
  return target;
}

size_t Type_Void::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Pasc.Type.Void)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string name = 1;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Type_Void::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Pasc.Type.Void)
  GOOGLE_DCHECK_NE(&from, this);
  const Type_Void* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Type_Void>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Pasc.Type.Void)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Pasc.Type.Void)
    MergeFrom(*source);
  }
}

void Type_Void::MergeFrom(const Type_Void& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Pasc.Type.Void)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
}

void Type_Void::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Pasc.Type.Void)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Type_Void::CopyFrom(const Type_Void& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Pasc.Type.Void)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Type_Void::IsInitialized() const {
  return true;
}

void Type_Void::Swap(Type_Void* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Type_Void::InternalSwap(Type_Void* other) {
  using std::swap;
  name_.Swap(&other->name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Type_Void::GetMetadata() const {
  protobuf_program_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_program_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Type::InitAsDefaultInstance() {
  ::Pasc::_Type_default_instance_.int__ = const_cast< ::Pasc::Type_Integer*>(
      ::Pasc::Type_Integer::internal_default_instance());
  ::Pasc::_Type_default_instance_.real_ = const_cast< ::Pasc::Type_Real*>(
      ::Pasc::Type_Real::internal_default_instance());
  ::Pasc::_Type_default_instance_.bool__ = const_cast< ::Pasc::Type_Boolean*>(
      ::Pasc::Type_Boolean::internal_default_instance());
  ::Pasc::_Type_default_instance_.char__ = const_cast< ::Pasc::Type_Char*>(
      ::Pasc::Type_Char::internal_default_instance());
  ::Pasc::_Type_default_instance_.void__ = const_cast< ::Pasc::Type_Void*>(
      ::Pasc::Type_Void::internal_default_instance());
}
void Type::set_allocated_int_(::Pasc::Type_Integer* int_) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_type();
  if (int_) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      int_ = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, int_, submessage_arena);
    }
    set_has_int_();
    type_.int__ = int_;
  }
  // @@protoc_insertion_point(field_set_allocated:Pasc.Type.int)
}
void Type::set_allocated_real(::Pasc::Type_Real* real) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_type();
  if (real) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      real = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, real, submessage_arena);
    }
    set_has_real();
    type_.real_ = real;
  }
  // @@protoc_insertion_point(field_set_allocated:Pasc.Type.real)
}
void Type::set_allocated_bool_(::Pasc::Type_Boolean* bool_) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_type();
  if (bool_) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      bool_ = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, bool_, submessage_arena);
    }
    set_has_bool_();
    type_.bool__ = bool_;
  }
  // @@protoc_insertion_point(field_set_allocated:Pasc.Type.bool)
}
void Type::set_allocated_char_(::Pasc::Type_Char* char_) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_type();
  if (char_) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      char_ = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, char_, submessage_arena);
    }
    set_has_char_();
    type_.char__ = char_;
  }
  // @@protoc_insertion_point(field_set_allocated:Pasc.Type.char)
}
void Type::set_allocated_void_(::Pasc::Type_Void* void_) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_type();
  if (void_) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      void_ = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, void_, submessage_arena);
    }
    set_has_void_();
    type_.void__ = void_;
  }
  // @@protoc_insertion_point(field_set_allocated:Pasc.Type.void)
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Type::kTkFieldNumber;
const int Type::kIntFieldNumber;
const int Type::kRealFieldNumber;
const int Type::kBoolFieldNumber;
const int Type::kCharFieldNumber;
const int Type::kVoidFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Type::Type()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_program_2eproto::scc_info_Type.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:Pasc.Type)
}
Type::Type(const Type& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  tk_ = from.tk_;
  clear_has_type();
  switch (from.type_case()) {
    case kInt: {
      mutable_int_()->::Pasc::Type_Integer::MergeFrom(from.int_());
      break;
    }
    case kReal: {
      mutable_real()->::Pasc::Type_Real::MergeFrom(from.real());
      break;
    }
    case kBool: {
      mutable_bool_()->::Pasc::Type_Boolean::MergeFrom(from.bool_());
      break;
    }
    case kChar: {
      mutable_char_()->::Pasc::Type_Char::MergeFrom(from.char_());
      break;
    }
    case kVoid: {
      mutable_void_()->::Pasc::Type_Void::MergeFrom(from.void_());
      break;
    }
    case TYPE_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:Pasc.Type)
}

void Type::SharedCtor() {
  tk_ = 0;
  clear_has_type();
}

Type::~Type() {
  // @@protoc_insertion_point(destructor:Pasc.Type)
  SharedDtor();
}

void Type::SharedDtor() {
  if (has_type()) {
    clear_type();
  }
}

void Type::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Type::descriptor() {
  ::protobuf_program_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_program_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Type& Type::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_program_2eproto::scc_info_Type.base);
  return *internal_default_instance();
}


void Type::clear_type() {
// @@protoc_insertion_point(one_of_clear_start:Pasc.Type)
  switch (type_case()) {
    case kInt: {
      delete type_.int__;
      break;
    }
    case kReal: {
      delete type_.real_;
      break;
    }
    case kBool: {
      delete type_.bool__;
      break;
    }
    case kChar: {
      delete type_.char__;
      break;
    }
    case kVoid: {
      delete type_.void__;
      break;
    }
    case TYPE_NOT_SET: {
      break;
    }
  }
  _oneof_case_[0] = TYPE_NOT_SET;
}


void Type::Clear() {
// @@protoc_insertion_point(message_clear_start:Pasc.Type)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  tk_ = 0;
  clear_type();
  _internal_metadata_.Clear();
}

bool Type::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Pasc.Type)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .Pasc.Type.TypeKind tk = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_tk(static_cast< ::Pasc::Type_TypeKind >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .Pasc.Type.Integer int = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_int_()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .Pasc.Type.Real real = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_real()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .Pasc.Type.Boolean bool = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_bool_()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .Pasc.Type.Char char = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_char_()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .Pasc.Type.Void void = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_void_()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Pasc.Type)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Pasc.Type)
  return false;
#undef DO_
}

void Type::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Pasc.Type)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .Pasc.Type.TypeKind tk = 1;
  if (this->tk() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->tk(), output);
  }

  // .Pasc.Type.Integer int = 2;
  if (has_int_()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_int_(), output);
  }

  // .Pasc.Type.Real real = 3;
  if (has_real()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->_internal_real(), output);
  }

  // .Pasc.Type.Boolean bool = 4;
  if (has_bool_()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->_internal_bool_(), output);
  }

  // .Pasc.Type.Char char = 5;
  if (has_char_()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, this->_internal_char_(), output);
  }

  // .Pasc.Type.Void void = 6;
  if (has_void_()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6, this->_internal_void_(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:Pasc.Type)
}

::google::protobuf::uint8* Type::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:Pasc.Type)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .Pasc.Type.TypeKind tk = 1;
  if (this->tk() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->tk(), target);
  }

  // .Pasc.Type.Integer int = 2;
  if (has_int_()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_int_(), deterministic, target);
  }

  // .Pasc.Type.Real real = 3;
  if (has_real()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->_internal_real(), deterministic, target);
  }

  // .Pasc.Type.Boolean bool = 4;
  if (has_bool_()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, this->_internal_bool_(), deterministic, target);
  }

  // .Pasc.Type.Char char = 5;
  if (has_char_()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        5, this->_internal_char_(), deterministic, target);
  }

  // .Pasc.Type.Void void = 6;
  if (has_void_()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        6, this->_internal_void_(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Pasc.Type)
  return target;
}

size_t Type::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Pasc.Type)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .Pasc.Type.TypeKind tk = 1;
  if (this->tk() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->tk());
  }

  switch (type_case()) {
    // .Pasc.Type.Integer int = 2;
    case kInt: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *type_.int__);
      break;
    }
    // .Pasc.Type.Real real = 3;
    case kReal: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *type_.real_);
      break;
    }
    // .Pasc.Type.Boolean bool = 4;
    case kBool: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *type_.bool__);
      break;
    }
    // .Pasc.Type.Char char = 5;
    case kChar: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *type_.char__);
      break;
    }
    // .Pasc.Type.Void void = 6;
    case kVoid: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *type_.void__);
      break;
    }
    case TYPE_NOT_SET: {
      break;
    }
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Type::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Pasc.Type)
  GOOGLE_DCHECK_NE(&from, this);
  const Type* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Type>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Pasc.Type)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Pasc.Type)
    MergeFrom(*source);
  }
}

void Type::MergeFrom(const Type& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Pasc.Type)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.tk() != 0) {
    set_tk(from.tk());
  }
  switch (from.type_case()) {
    case kInt: {
      mutable_int_()->::Pasc::Type_Integer::MergeFrom(from.int_());
      break;
    }
    case kReal: {
      mutable_real()->::Pasc::Type_Real::MergeFrom(from.real());
      break;
    }
    case kBool: {
      mutable_bool_()->::Pasc::Type_Boolean::MergeFrom(from.bool_());
      break;
    }
    case kChar: {
      mutable_char_()->::Pasc::Type_Char::MergeFrom(from.char_());
      break;
    }
    case kVoid: {
      mutable_void_()->::Pasc::Type_Void::MergeFrom(from.void_());
      break;
    }
    case TYPE_NOT_SET: {
      break;
    }
  }
}

void Type::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Pasc.Type)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Type::CopyFrom(const Type& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Pasc.Type)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Type::IsInitialized() const {
  return true;
}

void Type::Swap(Type* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Type::InternalSwap(Type* other) {
  using std::swap;
  swap(tk_, other->tk_);
  swap(type_, other->type_);
  swap(_oneof_case_[0], other->_oneof_case_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Type::GetMetadata() const {
  protobuf_program_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_program_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Operator::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Operator::kOpFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Operator::Operator()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_program_2eproto::scc_info_Operator.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:Pasc.Operator)
}
Operator::Operator(const Operator& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  op_ = from.op_;
  // @@protoc_insertion_point(copy_constructor:Pasc.Operator)
}

void Operator::SharedCtor() {
  op_ = 0;
}

Operator::~Operator() {
  // @@protoc_insertion_point(destructor:Pasc.Operator)
  SharedDtor();
}

void Operator::SharedDtor() {
}

void Operator::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Operator::descriptor() {
  ::protobuf_program_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_program_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Operator& Operator::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_program_2eproto::scc_info_Operator.base);
  return *internal_default_instance();
}


void Operator::Clear() {
// @@protoc_insertion_point(message_clear_start:Pasc.Operator)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  op_ = 0;
  _internal_metadata_.Clear();
}

bool Operator::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Pasc.Operator)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .Pasc.Operator.OpKind op = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_op(static_cast< ::Pasc::Operator_OpKind >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Pasc.Operator)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Pasc.Operator)
  return false;
#undef DO_
}

void Operator::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Pasc.Operator)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .Pasc.Operator.OpKind op = 1;
  if (this->op() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->op(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:Pasc.Operator)
}

::google::protobuf::uint8* Operator::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:Pasc.Operator)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .Pasc.Operator.OpKind op = 1;
  if (this->op() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->op(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Pasc.Operator)
  return target;
}

size_t Operator::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Pasc.Operator)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .Pasc.Operator.OpKind op = 1;
  if (this->op() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->op());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Operator::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Pasc.Operator)
  GOOGLE_DCHECK_NE(&from, this);
  const Operator* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Operator>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Pasc.Operator)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Pasc.Operator)
    MergeFrom(*source);
  }
}

void Operator::MergeFrom(const Operator& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Pasc.Operator)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.op() != 0) {
    set_op(from.op());
  }
}

void Operator::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Pasc.Operator)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Operator::CopyFrom(const Operator& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Pasc.Operator)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Operator::IsInitialized() const {
  return true;
}

void Operator::Swap(Operator* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Operator::InternalSwap(Operator* other) {
  using std::swap;
  swap(op_, other->op_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Operator::GetMetadata() const {
  protobuf_program_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_program_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace Pasc
namespace google {
namespace protobuf {
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::Pasc::Program* Arena::CreateMaybeMessage< ::Pasc::Program >(Arena* arena) {
  return Arena::CreateInternal< ::Pasc::Program >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::Pasc::Block* Arena::CreateMaybeMessage< ::Pasc::Block >(Arena* arena) {
  return Arena::CreateInternal< ::Pasc::Block >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::Pasc::Callable* Arena::CreateMaybeMessage< ::Pasc::Callable >(Arena* arena) {
  return Arena::CreateInternal< ::Pasc::Callable >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::Pasc::FormalParameter* Arena::CreateMaybeMessage< ::Pasc::FormalParameter >(Arena* arena) {
  return Arena::CreateInternal< ::Pasc::FormalParameter >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::Pasc::VariableParam* Arena::CreateMaybeMessage< ::Pasc::VariableParam >(Arena* arena) {
  return Arena::CreateInternal< ::Pasc::VariableParam >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::Pasc::ValueParam* Arena::CreateMaybeMessage< ::Pasc::ValueParam >(Arena* arena) {
  return Arena::CreateInternal< ::Pasc::ValueParam >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::Pasc::FuncHeading* Arena::CreateMaybeMessage< ::Pasc::FuncHeading >(Arena* arena) {
  return Arena::CreateInternal< ::Pasc::FuncHeading >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::Pasc::ProcHeading* Arena::CreateMaybeMessage< ::Pasc::ProcHeading >(Arena* arena) {
  return Arena::CreateInternal< ::Pasc::ProcHeading >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::Pasc::FuncDeclaration* Arena::CreateMaybeMessage< ::Pasc::FuncDeclaration >(Arena* arena) {
  return Arena::CreateInternal< ::Pasc::FuncDeclaration >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::Pasc::ProcDeclaration* Arena::CreateMaybeMessage< ::Pasc::ProcDeclaration >(Arena* arena) {
  return Arena::CreateInternal< ::Pasc::ProcDeclaration >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::Pasc::VarDeclaration* Arena::CreateMaybeMessage< ::Pasc::VarDeclaration >(Arena* arena) {
  return Arena::CreateInternal< ::Pasc::VarDeclaration >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::Pasc::ProcedureStatement_WriteLn* Arena::CreateMaybeMessage< ::Pasc::ProcedureStatement_WriteLn >(Arena* arena) {
  return Arena::CreateInternal< ::Pasc::ProcedureStatement_WriteLn >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::Pasc::ProcedureStatement_Write* Arena::CreateMaybeMessage< ::Pasc::ProcedureStatement_Write >(Arena* arena) {
  return Arena::CreateInternal< ::Pasc::ProcedureStatement_Write >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::Pasc::ProcedureStatement_Read* Arena::CreateMaybeMessage< ::Pasc::ProcedureStatement_Read >(Arena* arena) {
  return Arena::CreateInternal< ::Pasc::ProcedureStatement_Read >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::Pasc::ProcedureStatement_ReadLn* Arena::CreateMaybeMessage< ::Pasc::ProcedureStatement_ReadLn >(Arena* arena) {
  return Arena::CreateInternal< ::Pasc::ProcedureStatement_ReadLn >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::Pasc::ProcedureStatement_ProcStmt* Arena::CreateMaybeMessage< ::Pasc::ProcedureStatement_ProcStmt >(Arena* arena) {
  return Arena::CreateInternal< ::Pasc::ProcedureStatement_ProcStmt >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::Pasc::ProcedureStatement* Arena::CreateMaybeMessage< ::Pasc::ProcedureStatement >(Arena* arena) {
  return Arena::CreateInternal< ::Pasc::ProcedureStatement >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::Pasc::AssignStatement* Arena::CreateMaybeMessage< ::Pasc::AssignStatement >(Arena* arena) {
  return Arena::CreateInternal< ::Pasc::AssignStatement >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::Pasc::IfStatement* Arena::CreateMaybeMessage< ::Pasc::IfStatement >(Arena* arena) {
  return Arena::CreateInternal< ::Pasc::IfStatement >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::Pasc::ReturnStatement* Arena::CreateMaybeMessage< ::Pasc::ReturnStatement >(Arena* arena) {
  return Arena::CreateInternal< ::Pasc::ReturnStatement >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::Pasc::Statement* Arena::CreateMaybeMessage< ::Pasc::Statement >(Arena* arena) {
  return Arena::CreateInternal< ::Pasc::Statement >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::Pasc::Identifier_Variable* Arena::CreateMaybeMessage< ::Pasc::Identifier_Variable >(Arena* arena) {
  return Arena::CreateInternal< ::Pasc::Identifier_Variable >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::Pasc::Identifier_IndexedVariable* Arena::CreateMaybeMessage< ::Pasc::Identifier_IndexedVariable >(Arena* arena) {
  return Arena::CreateInternal< ::Pasc::Identifier_IndexedVariable >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::Pasc::Identifier_FieldDesignator* Arena::CreateMaybeMessage< ::Pasc::Identifier_FieldDesignator >(Arena* arena) {
  return Arena::CreateInternal< ::Pasc::Identifier_FieldDesignator >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::Pasc::Identifier* Arena::CreateMaybeMessage< ::Pasc::Identifier >(Arena* arena) {
  return Arena::CreateInternal< ::Pasc::Identifier >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::Pasc::Expression* Arena::CreateMaybeMessage< ::Pasc::Expression >(Arena* arena) {
  return Arena::CreateInternal< ::Pasc::Expression >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::Pasc::WriteParameter* Arena::CreateMaybeMessage< ::Pasc::WriteParameter >(Arena* arena) {
  return Arena::CreateInternal< ::Pasc::WriteParameter >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::Pasc::BinaryExpr* Arena::CreateMaybeMessage< ::Pasc::BinaryExpr >(Arena* arena) {
  return Arena::CreateInternal< ::Pasc::BinaryExpr >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::Pasc::UIntLiteral* Arena::CreateMaybeMessage< ::Pasc::UIntLiteral >(Arena* arena) {
  return Arena::CreateInternal< ::Pasc::UIntLiteral >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::Pasc::FuncCall* Arena::CreateMaybeMessage< ::Pasc::FuncCall >(Arena* arena) {
  return Arena::CreateInternal< ::Pasc::FuncCall >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::Pasc::Type_Integer* Arena::CreateMaybeMessage< ::Pasc::Type_Integer >(Arena* arena) {
  return Arena::CreateInternal< ::Pasc::Type_Integer >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::Pasc::Type_Boolean* Arena::CreateMaybeMessage< ::Pasc::Type_Boolean >(Arena* arena) {
  return Arena::CreateInternal< ::Pasc::Type_Boolean >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::Pasc::Type_Real* Arena::CreateMaybeMessage< ::Pasc::Type_Real >(Arena* arena) {
  return Arena::CreateInternal< ::Pasc::Type_Real >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::Pasc::Type_Char* Arena::CreateMaybeMessage< ::Pasc::Type_Char >(Arena* arena) {
  return Arena::CreateInternal< ::Pasc::Type_Char >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::Pasc::Type_Void* Arena::CreateMaybeMessage< ::Pasc::Type_Void >(Arena* arena) {
  return Arena::CreateInternal< ::Pasc::Type_Void >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::Pasc::Type* Arena::CreateMaybeMessage< ::Pasc::Type >(Arena* arena) {
  return Arena::CreateInternal< ::Pasc::Type >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::Pasc::Operator* Arena::CreateMaybeMessage< ::Pasc::Operator >(Arena* arena) {
  return Arena::CreateInternal< ::Pasc::Operator >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
