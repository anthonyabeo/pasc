package ast

// Visitor ...
type Visitor interface {
	VisitIdentifier(*Identifier)
	VisitUIntLiteral(*UIntegerLiteral)
	VisitAssignStmt(*AssignStatement)
	VisitIndexedVariable(*IndexedVariable)
	VisitBinaryExpr(*BinaryExpression)
	VisitUnaryExpr(*UnaryExpression)
	VisitBoolLiteral(*BoolLiteral)
	VisitURealLiteral(*URealLiteral)
	VisitForStatement(*ForStatement)
	VisitIfStatement(*IfStatement)
	VisitFuncDesignator(*FuncDesignator)
	VisitGotoStatement(*GotoStatement)
	VisitIdentifiedVariable(*IdentifiedVariable)
	VisitWhileStatement(*WhileStatement)
	VisitWithStatement(*WithStatement)
	VisitRepeatStatement(*RepeatStatement)
	VisitReturnStatement(*ReturnStatement)
	VisitRange(*Range)
	VisitFieldDesignator(*FieldDesignator)
	VisitCompoundStatement(*CompoundStatement)
	VisitStrLiteral(*StrLiteral)
	VisitFuncDeclaration(*FuncDeclaration)
	VisitProcedureDecl(*ProcedureDeclaration)
	VisitProcedureStmt(*ProcedureStmt)
	VisitRead(*Read)
	VisitReadLn(*ReadLn)
	VisitWrite(*Write)
	VisitWriteln(*Writeln)
	VisitNil(*NilValue)
	VisitCaseStatement(*CaseStatement)
	VisitWriteParameter(*WriteParameter)
	VisitSetConstructor(*SetConstructor)
}
